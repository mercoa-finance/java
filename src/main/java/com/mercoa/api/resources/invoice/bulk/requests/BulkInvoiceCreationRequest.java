/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoice.bulk.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkInvoiceCreationRequest.Builder.class)
public final class BulkInvoiceCreationRequest {
    private final Optional<Boolean> emitWebhooks;

    private final com.mercoa.api.resources.invoicetypes.types.BulkInvoiceCreationRequest body;

    private final Map<String, Object> additionalProperties;

    private BulkInvoiceCreationRequest(
            Optional<Boolean> emitWebhooks,
            com.mercoa.api.resources.invoicetypes.types.BulkInvoiceCreationRequest body,
            Map<String, Object> additionalProperties) {
        this.emitWebhooks = emitWebhooks;
        this.body = body;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return If true, webhooks will be emitted for each invoice that is created. By default, webhooks are not emitted.
     */
    @JsonProperty("emitWebhooks")
    public Optional<Boolean> getEmitWebhooks() {
        return emitWebhooks;
    }

    @JsonProperty("body")
    public com.mercoa.api.resources.invoicetypes.types.BulkInvoiceCreationRequest getBody() {
        return body;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkInvoiceCreationRequest && equalTo((BulkInvoiceCreationRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkInvoiceCreationRequest other) {
        return emitWebhooks.equals(other.emitWebhooks) && body.equals(other.body);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.emitWebhooks, this.body);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BodyStage builder() {
        return new Builder();
    }

    public interface BodyStage {
        _FinalStage body(com.mercoa.api.resources.invoicetypes.types.BulkInvoiceCreationRequest body);

        Builder from(BulkInvoiceCreationRequest other);
    }

    public interface _FinalStage {
        BulkInvoiceCreationRequest build();

        _FinalStage emitWebhooks(Optional<Boolean> emitWebhooks);

        _FinalStage emitWebhooks(Boolean emitWebhooks);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BodyStage, _FinalStage {
        private com.mercoa.api.resources.invoicetypes.types.BulkInvoiceCreationRequest body;

        private Optional<Boolean> emitWebhooks = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BulkInvoiceCreationRequest other) {
            emitWebhooks(other.getEmitWebhooks());
            body(other.getBody());
            return this;
        }

        @java.lang.Override
        @JsonSetter("body")
        public _FinalStage body(com.mercoa.api.resources.invoicetypes.types.BulkInvoiceCreationRequest body) {
            this.body = body;
            return this;
        }

        /**
         * <p>If true, webhooks will be emitted for each invoice that is created. By default, webhooks are not emitted.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage emitWebhooks(Boolean emitWebhooks) {
            this.emitWebhooks = Optional.ofNullable(emitWebhooks);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "emitWebhooks", nulls = Nulls.SKIP)
        public _FinalStage emitWebhooks(Optional<Boolean> emitWebhooks) {
            this.emitWebhooks = emitWebhooks;
            return this;
        }

        @java.lang.Override
        public BulkInvoiceCreationRequest build() {
            return new BulkInvoiceCreationRequest(emitWebhooks, body, additionalProperties);
        }
    }
}
