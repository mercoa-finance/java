/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoice.paymentlinks;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.invoice.paymentlinks.requests.PayerLinkRequest;
import com.mercoa.api.resources.invoice.paymentlinks.requests.SendPayerEmail;
import com.mercoa.api.resources.invoice.paymentlinks.requests.VendorLinkRequest;

public class PaymentLinksClient {
    protected final ClientOptions clientOptions;

    private final RawPaymentLinksClient rawClient;

    public PaymentLinksClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawPaymentLinksClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawPaymentLinksClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get temporary link for payer to send payment
     */
    public String getPayerLink(String invoiceId) {
        return this.rawClient.getPayerLink(invoiceId).body();
    }

    /**
     * Get temporary link for payer to send payment
     */
    public String getPayerLink(String invoiceId, PayerLinkRequest request) {
        return this.rawClient.getPayerLink(invoiceId, request).body();
    }

    /**
     * Get temporary link for payer to send payment
     */
    public String getPayerLink(String invoiceId, PayerLinkRequest request, RequestOptions requestOptions) {
        return this.rawClient.getPayerLink(invoiceId, request, requestOptions).body();
    }

    /**
     * Trigger email to payer inviting them to make payment
     */
    public void sendPayerEmail(String invoiceId) {
        this.rawClient.sendPayerEmail(invoiceId).body();
    }

    /**
     * Trigger email to payer inviting them to make payment
     */
    public void sendPayerEmail(String invoiceId, SendPayerEmail request) {
        this.rawClient.sendPayerEmail(invoiceId, request).body();
    }

    /**
     * Trigger email to payer inviting them to make payment
     */
    public void sendPayerEmail(String invoiceId, SendPayerEmail request, RequestOptions requestOptions) {
        this.rawClient.sendPayerEmail(invoiceId, request, requestOptions).body();
    }

    /**
     * Get temporary link for vendor to accept payment
     */
    public String getVendorLink(String invoiceId) {
        return this.rawClient.getVendorLink(invoiceId).body();
    }

    /**
     * Get temporary link for vendor to accept payment
     */
    public String getVendorLink(String invoiceId, VendorLinkRequest request) {
        return this.rawClient.getVendorLink(invoiceId, request).body();
    }

    /**
     * Get temporary link for vendor to accept payment
     */
    public String getVendorLink(String invoiceId, VendorLinkRequest request, RequestOptions requestOptions) {
        return this.rawClient.getVendorLink(invoiceId, request, requestOptions).body();
    }

    /**
     * Trigger email to vendor inviting them into the vendor portal
     */
    public void sendVendorEmail(String invoiceId) {
        this.rawClient.sendVendorEmail(invoiceId).body();
    }

    /**
     * Trigger email to vendor inviting them into the vendor portal
     */
    public void sendVendorEmail(String invoiceId, RequestOptions requestOptions) {
        this.rawClient.sendVendorEmail(invoiceId, requestOptions).body();
    }
}
