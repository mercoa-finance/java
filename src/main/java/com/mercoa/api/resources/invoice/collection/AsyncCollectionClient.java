/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoice.collection;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.collectiontypes.types.ActionResponse;
import com.mercoa.api.resources.collectiontypes.types.UpdateNextActionRequest;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class AsyncCollectionClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawCollectionClient rawClient;

    public AsyncCollectionClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawCollectionClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawCollectionClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get the collection agent's next action on this invoice. This endpoint will return an empty object if there is no action to return.
     */
    public CompletableFuture<Optional<ActionResponse>> getNextAction(String invoiceId) {
        return this.rawClient.getNextAction(invoiceId).thenApply(response -> response.body());
    }

    /**
     * Get the collection agent's next action on this invoice. This endpoint will return an empty object if there is no action to return.
     */
    public CompletableFuture<Optional<ActionResponse>> getNextAction(String invoiceId, RequestOptions requestOptions) {
        return this.rawClient.getNextAction(invoiceId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Update the collection agent's next action on this invoice with natural language. Note that updating any APPROVED action will reset the action to SUGGESTED.  This endpoint will throw an error if there is no action to update.
     */
    public CompletableFuture<ActionResponse> updateNextAction(String invoiceId, UpdateNextActionRequest request) {
        return this.rawClient.updateNextAction(invoiceId, request).thenApply(response -> response.body());
    }

    /**
     * Update the collection agent's next action on this invoice with natural language. Note that updating any APPROVED action will reset the action to SUGGESTED.  This endpoint will throw an error if there is no action to update.
     */
    public CompletableFuture<ActionResponse> updateNextAction(
            String invoiceId, UpdateNextActionRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .updateNextAction(invoiceId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Approve the collection agent's next action on this invoice. This endpoint will throw an error if there is no action to approve.
     */
    public CompletableFuture<ActionResponse> approveNextAction(String invoiceId) {
        return this.rawClient.approveNextAction(invoiceId).thenApply(response -> response.body());
    }

    /**
     * Approve the collection agent's next action on this invoice. This endpoint will throw an error if there is no action to approve.
     */
    public CompletableFuture<ActionResponse> approveNextAction(String invoiceId, RequestOptions requestOptions) {
        return this.rawClient.approveNextAction(invoiceId, requestOptions).thenApply(response -> response.body());
    }
}
