/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitygroup.invoice;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.commons.types.BulkDownloadResponse;
import com.mercoa.api.resources.entitygroup.invoice.requests.EntityGetInvoicesRequest;
import com.mercoa.api.resources.entitygroup.invoice.requests.GroupInvoiceDownloadRequest;
import com.mercoa.api.resources.entitygroup.invoice.requests.GroupInvoiceMetricsRequest;
import com.mercoa.api.resources.invoicetypes.types.FindInvoiceResponse;
import com.mercoa.api.resources.invoicetypes.types.InvoiceMetricsResponse;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncInvoiceClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawInvoiceClient rawClient;

    public AsyncInvoiceClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawInvoiceClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawInvoiceClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get invoices for an entity group with the given filters.
     */
    public CompletableFuture<FindInvoiceResponse> find(String entityGroupId) {
        return this.rawClient.find(entityGroupId).thenApply(response -> response.body());
    }

    /**
     * Get invoices for an entity group with the given filters.
     */
    public CompletableFuture<FindInvoiceResponse> find(String entityGroupId, EntityGetInvoicesRequest request) {
        return this.rawClient.find(entityGroupId, request).thenApply(response -> response.body());
    }

    /**
     * Get invoices for an entity group with the given filters.
     */
    public CompletableFuture<FindInvoiceResponse> find(
            String entityGroupId, EntityGetInvoicesRequest request, RequestOptions requestOptions) {
        return this.rawClient.find(entityGroupId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download invoices for an entity group as a CSV/JSON file.
     */
    public CompletableFuture<BulkDownloadResponse> download(String entityGroupId) {
        return this.rawClient.download(entityGroupId).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download invoices for an entity group as a CSV/JSON file.
     */
    public CompletableFuture<BulkDownloadResponse> download(String entityGroupId, GroupInvoiceDownloadRequest request) {
        return this.rawClient.download(entityGroupId, request).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download invoices for an entity group as a CSV/JSON file.
     */
    public CompletableFuture<BulkDownloadResponse> download(
            String entityGroupId, GroupInvoiceDownloadRequest request, RequestOptions requestOptions) {
        return this.rawClient.download(entityGroupId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get invoice metrics for an entity group with the given filters. Invoices will be grouped by currency. If none of excludePayables, excludeReceivables, payerId, vendorId, or invoiceId status filters are provided, excludeReceivables will be set to true.
     */
    public CompletableFuture<List<InvoiceMetricsResponse>> metrics(String entityGroupId) {
        return this.rawClient.metrics(entityGroupId).thenApply(response -> response.body());
    }

    /**
     * Get invoice metrics for an entity group with the given filters. Invoices will be grouped by currency. If none of excludePayables, excludeReceivables, payerId, vendorId, or invoiceId status filters are provided, excludeReceivables will be set to true.
     */
    public CompletableFuture<List<InvoiceMetricsResponse>> metrics(
            String entityGroupId, GroupInvoiceMetricsRequest request) {
        return this.rawClient.metrics(entityGroupId, request).thenApply(response -> response.body());
    }

    /**
     * Get invoice metrics for an entity group with the given filters. Invoices will be grouped by currency. If none of excludePayables, excludeReceivables, payerId, vendorId, or invoiceId status filters are provided, excludeReceivables will be set to true.
     */
    public CompletableFuture<List<InvoiceMetricsResponse>> metrics(
            String entityGroupId, GroupInvoiceMetricsRequest request, RequestOptions requestOptions) {
        return this.rawClient.metrics(entityGroupId, request, requestOptions).thenApply(response -> response.body());
    }
}
