/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import com.mercoa.api.resources.entitytypes.types.EntityOnboardingLinkType;
import com.mercoa.api.resources.entitytypes.types.VendorPortalOptions;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GenerateOnboardingLink.Builder.class)
public final class GenerateOnboardingLink {
    private final EntityOnboardingLinkType type;

    private final Optional<String> expiresIn;

    private final Optional<String> connectedEntityId;

    private final Optional<Boolean> redirectToPortal;

    private final Optional<VendorPortalOptions> vendorPortalOptions;

    private final Map<String, Object> additionalProperties;

    private GenerateOnboardingLink(
            EntityOnboardingLinkType type,
            Optional<String> expiresIn,
            Optional<String> connectedEntityId,
            Optional<Boolean> redirectToPortal,
            Optional<VendorPortalOptions> vendorPortalOptions,
            Map<String, Object> additionalProperties) {
        this.type = type;
        this.expiresIn = expiresIn;
        this.connectedEntityId = connectedEntityId;
        this.redirectToPortal = redirectToPortal;
        this.vendorPortalOptions = vendorPortalOptions;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The type of onboarding link to generate. If not provided, the default is payee. The onboarding options are determined by your organization's onboarding configuration.
     */
    @JsonProperty("type")
    public EntityOnboardingLinkType getType() {
        return type;
    }

    /**
     * @return Expressed in seconds or a string describing a time span. The default is 24h.
     */
    @JsonProperty("expiresIn")
    public Optional<String> getExpiresIn() {
        return expiresIn;
    }

    /**
     * @return The ID of the entity to connect to. If onboarding a payee, this should be the payor entity ID. If onboarding a payor, this should be the payee entity ID. If no connected entity ID is provided, the onboarding link will be for a standalone entity.
     */
    @JsonProperty("connectedEntityId")
    public Optional<String> getConnectedEntityId() {
        return connectedEntityId;
    }

    /**
     * @return If true, the onboarding link will redirect to the vendor/customer portal if the entity is already onboarded. If false, the onboarding link will not redirect to the portal. The default is false.
     */
    @JsonProperty("redirectToPortal")
    public Optional<Boolean> getRedirectToPortal() {
        return redirectToPortal;
    }

    /**
     * @return The options for the vendor portal.
     */
    @JsonProperty("vendorPortalOptions")
    public Optional<VendorPortalOptions> getVendorPortalOptions() {
        return vendorPortalOptions;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GenerateOnboardingLink && equalTo((GenerateOnboardingLink) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GenerateOnboardingLink other) {
        return type.equals(other.type)
                && expiresIn.equals(other.expiresIn)
                && connectedEntityId.equals(other.connectedEntityId)
                && redirectToPortal.equals(other.redirectToPortal)
                && vendorPortalOptions.equals(other.vendorPortalOptions);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.type, this.expiresIn, this.connectedEntityId, this.redirectToPortal, this.vendorPortalOptions);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TypeStage builder() {
        return new Builder();
    }

    public interface TypeStage {
        _FinalStage type(@NotNull EntityOnboardingLinkType type);

        Builder from(GenerateOnboardingLink other);
    }

    public interface _FinalStage {
        GenerateOnboardingLink build();

        _FinalStage expiresIn(Optional<String> expiresIn);

        _FinalStage expiresIn(String expiresIn);

        _FinalStage connectedEntityId(Optional<String> connectedEntityId);

        _FinalStage connectedEntityId(String connectedEntityId);

        _FinalStage redirectToPortal(Optional<Boolean> redirectToPortal);

        _FinalStage redirectToPortal(Boolean redirectToPortal);

        _FinalStage vendorPortalOptions(Optional<VendorPortalOptions> vendorPortalOptions);

        _FinalStage vendorPortalOptions(VendorPortalOptions vendorPortalOptions);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TypeStage, _FinalStage {
        private EntityOnboardingLinkType type;

        private Optional<VendorPortalOptions> vendorPortalOptions = Optional.empty();

        private Optional<Boolean> redirectToPortal = Optional.empty();

        private Optional<String> connectedEntityId = Optional.empty();

        private Optional<String> expiresIn = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GenerateOnboardingLink other) {
            type(other.getType());
            expiresIn(other.getExpiresIn());
            connectedEntityId(other.getConnectedEntityId());
            redirectToPortal(other.getRedirectToPortal());
            vendorPortalOptions(other.getVendorPortalOptions());
            return this;
        }

        /**
         * <p>The type of onboarding link to generate. If not provided, the default is payee. The onboarding options are determined by your organization's onboarding configuration.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("type")
        public _FinalStage type(@NotNull EntityOnboardingLinkType type) {
            this.type = Objects.requireNonNull(type, "type must not be null");
            return this;
        }

        /**
         * <p>The options for the vendor portal.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage vendorPortalOptions(VendorPortalOptions vendorPortalOptions) {
            this.vendorPortalOptions = Optional.ofNullable(vendorPortalOptions);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "vendorPortalOptions", nulls = Nulls.SKIP)
        public _FinalStage vendorPortalOptions(Optional<VendorPortalOptions> vendorPortalOptions) {
            this.vendorPortalOptions = vendorPortalOptions;
            return this;
        }

        /**
         * <p>If true, the onboarding link will redirect to the vendor/customer portal if the entity is already onboarded. If false, the onboarding link will not redirect to the portal. The default is false.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage redirectToPortal(Boolean redirectToPortal) {
            this.redirectToPortal = Optional.ofNullable(redirectToPortal);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "redirectToPortal", nulls = Nulls.SKIP)
        public _FinalStage redirectToPortal(Optional<Boolean> redirectToPortal) {
            this.redirectToPortal = redirectToPortal;
            return this;
        }

        /**
         * <p>The ID of the entity to connect to. If onboarding a payee, this should be the payor entity ID. If onboarding a payor, this should be the payee entity ID. If no connected entity ID is provided, the onboarding link will be for a standalone entity.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage connectedEntityId(String connectedEntityId) {
            this.connectedEntityId = Optional.ofNullable(connectedEntityId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "connectedEntityId", nulls = Nulls.SKIP)
        public _FinalStage connectedEntityId(Optional<String> connectedEntityId) {
            this.connectedEntityId = connectedEntityId;
            return this;
        }

        /**
         * <p>Expressed in seconds or a string describing a time span. The default is 24h.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage expiresIn(String expiresIn) {
            this.expiresIn = Optional.ofNullable(expiresIn);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "expiresIn", nulls = Nulls.SKIP)
        public _FinalStage expiresIn(Optional<String> expiresIn) {
            this.expiresIn = expiresIn;
            return this;
        }

        @java.lang.Override
        public GenerateOnboardingLink build() {
            return new GenerateOnboardingLink(
                    type, expiresIn, connectedEntityId, redirectToPortal, vendorPortalOptions, additionalProperties);
        }
    }
}
