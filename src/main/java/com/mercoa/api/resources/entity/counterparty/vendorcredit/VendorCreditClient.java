/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.counterparty.vendorcredit;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.entity.counterparty.vendorcredit.requests.CalculateVendorCreditUsageRequest;
import com.mercoa.api.resources.vendorcredittypes.types.CalculateVendorCreditUsageResponse;
import com.mercoa.api.resources.vendorcredittypes.types.FindVendorCreditResponse;
import com.mercoa.api.resources.vendorcredittypes.types.VendorCreditRequest;
import com.mercoa.api.resources.vendorcredittypes.types.VendorCreditResponse;

public class VendorCreditClient {
    protected final ClientOptions clientOptions;

    private final RawVendorCreditClient rawClient;

    public VendorCreditClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawVendorCreditClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawVendorCreditClient withRawResponse() {
        return this.rawClient;
    }

    public FindVendorCreditResponse getAll(String entityId, String counterpartyId) {
        return this.rawClient.getAll(entityId, counterpartyId).body();
    }

    public FindVendorCreditResponse getAll(String entityId, String counterpartyId, RequestOptions requestOptions) {
        return this.rawClient.getAll(entityId, counterpartyId, requestOptions).body();
    }

    public VendorCreditResponse get(String entityId, String counterpartyId, String vendorCreditId) {
        return this.rawClient.get(entityId, counterpartyId, vendorCreditId).body();
    }

    public VendorCreditResponse get(
            String entityId, String counterpartyId, String vendorCreditId, RequestOptions requestOptions) {
        return this.rawClient
                .get(entityId, counterpartyId, vendorCreditId, requestOptions)
                .body();
    }

    public VendorCreditResponse create(String entityId, String counterpartyId, VendorCreditRequest request) {
        return this.rawClient.create(entityId, counterpartyId, request).body();
    }

    public VendorCreditResponse create(
            String entityId, String counterpartyId, VendorCreditRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .create(entityId, counterpartyId, request, requestOptions)
                .body();
    }

    public void delete(String entityId, String counterpartyId, String vendorCreditId) {
        this.rawClient.delete(entityId, counterpartyId, vendorCreditId).body();
    }

    public void delete(String entityId, String counterpartyId, String vendorCreditId, RequestOptions requestOptions) {
        this.rawClient
                .delete(entityId, counterpartyId, vendorCreditId, requestOptions)
                .body();
    }

    /**
     * Estimate the usage of vendor credits on an invoice of a given amount
     */
    public CalculateVendorCreditUsageResponse estimateUsage(
            String entityId, String counterpartyId, CalculateVendorCreditUsageRequest request) {
        return this.rawClient.estimateUsage(entityId, counterpartyId, request).body();
    }

    /**
     * Estimate the usage of vendor credits on an invoice of a given amount
     */
    public CalculateVendorCreditUsageResponse estimateUsage(
            String entityId,
            String counterpartyId,
            CalculateVendorCreditUsageRequest request,
            RequestOptions requestOptions) {
        return this.rawClient
                .estimateUsage(entityId, counterpartyId, request, requestOptions)
                .body();
    }
}
