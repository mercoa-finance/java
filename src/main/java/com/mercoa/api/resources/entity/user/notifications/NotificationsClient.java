/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.user.notifications;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.entity.user.notifications.requests.EntityGetNotificationsRequest;
import com.mercoa.api.resources.entitytypes.types.FindNotificationResponse;
import com.mercoa.api.resources.entitytypes.types.NotificationResponse;
import com.mercoa.api.resources.entitytypes.types.NotificationUpdateRequest;

public class NotificationsClient {
    protected final ClientOptions clientOptions;

    private final RawNotificationsClient rawClient;

    public NotificationsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawNotificationsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawNotificationsClient withRawResponse() {
        return this.rawClient;
    }

    public FindNotificationResponse find(String entityId, String userId) {
        return this.rawClient.find(entityId, userId).body();
    }

    public FindNotificationResponse find(String entityId, String userId, EntityGetNotificationsRequest request) {
        return this.rawClient.find(entityId, userId, request).body();
    }

    public FindNotificationResponse find(
            String entityId, String userId, EntityGetNotificationsRequest request, RequestOptions requestOptions) {
        return this.rawClient.find(entityId, userId, request, requestOptions).body();
    }

    public NotificationResponse get(String entityId, String userId, String notificationId) {
        return this.rawClient.get(entityId, userId, notificationId).body();
    }

    public NotificationResponse get(
            String entityId, String userId, String notificationId, RequestOptions requestOptions) {
        return this.rawClient
                .get(entityId, userId, notificationId, requestOptions)
                .body();
    }

    /**
     * Update the status of a notification.
     */
    public NotificationResponse update(String entityId, String userId, String notificationId) {
        return this.rawClient.update(entityId, userId, notificationId).body();
    }

    /**
     * Update the status of a notification.
     */
    public NotificationResponse update(
            String entityId, String userId, String notificationId, NotificationUpdateRequest request) {
        return this.rawClient.update(entityId, userId, notificationId, request).body();
    }

    /**
     * Update the status of a notification.
     */
    public NotificationResponse update(
            String entityId,
            String userId,
            String notificationId,
            NotificationUpdateRequest request,
            RequestOptions requestOptions) {
        return this.rawClient
                .update(entityId, userId, notificationId, request, requestOptions)
                .body();
    }
}
