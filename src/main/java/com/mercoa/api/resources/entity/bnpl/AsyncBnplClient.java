/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.bnpl;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.invoicetypes.types.BnplLoanResponse;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncBnplClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawBnplClient rawClient;

    public AsyncBnplClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawBnplClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawBnplClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get all BNPL loans associated with an entity
     */
    public CompletableFuture<List<BnplLoanResponse>> getLoans(String entityId) {
        return this.rawClient.getLoans(entityId).thenApply(response -> response.body());
    }

    /**
     * Get all BNPL loans associated with an entity
     */
    public CompletableFuture<List<BnplLoanResponse>> getLoans(String entityId, RequestOptions requestOptions) {
        return this.rawClient.getLoans(entityId, requestOptions).thenApply(response -> response.body());
    }
}
