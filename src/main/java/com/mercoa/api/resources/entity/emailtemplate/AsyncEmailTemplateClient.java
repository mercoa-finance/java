/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.emailtemplate;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.entitytypes.types.EmailTemplateRequest;
import com.mercoa.api.resources.entitytypes.types.EmailTemplateResponse;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncEmailTemplateClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawEmailTemplateClient rawClient;

    public AsyncEmailTemplateClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawEmailTemplateClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawEmailTemplateClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get all email templates for the entity
     */
    public CompletableFuture<List<EmailTemplateResponse>> getAll(String entityId) {
        return this.rawClient.getAll(entityId).thenApply(response -> response.body());
    }

    /**
     * Get all email templates for the entity
     */
    public CompletableFuture<List<EmailTemplateResponse>> getAll(String entityId, RequestOptions requestOptions) {
        return this.rawClient.getAll(entityId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<EmailTemplateResponse> create(String entityId, EmailTemplateRequest request) {
        return this.rawClient.create(entityId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<EmailTemplateResponse> create(
            String entityId, EmailTemplateRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(entityId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get entity email template
     */
    public CompletableFuture<EmailTemplateResponse> get(String entityId, String emailTemplateId) {
        return this.rawClient.get(entityId, emailTemplateId).thenApply(response -> response.body());
    }

    /**
     * Get entity email template
     */
    public CompletableFuture<EmailTemplateResponse> get(
            String entityId, String emailTemplateId, RequestOptions requestOptions) {
        return this.rawClient.get(entityId, emailTemplateId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Update entity email template
     */
    public CompletableFuture<EmailTemplateResponse> update(
            String entityId, String emailTemplateId, EmailTemplateRequest request) {
        return this.rawClient.update(entityId, emailTemplateId, request).thenApply(response -> response.body());
    }

    /**
     * Update entity email template
     */
    public CompletableFuture<EmailTemplateResponse> update(
            String entityId, String emailTemplateId, EmailTemplateRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .update(entityId, emailTemplateId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Delete entity email template. This will also remove the email template from all entities.
     */
    public CompletableFuture<Void> delete(String entityId, String emailTemplateId) {
        return this.rawClient.delete(entityId, emailTemplateId).thenApply(response -> response.body());
    }

    /**
     * Delete entity email template. This will also remove the email template from all entities.
     */
    public CompletableFuture<Void> delete(String entityId, String emailTemplateId, RequestOptions requestOptions) {
        return this.rawClient.delete(entityId, emailTemplateId, requestOptions).thenApply(response -> response.body());
    }
}
