/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.user.notificationpolicy;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.entitytypes.types.NotificationType;
import com.mercoa.api.resources.entitytypes.types.UserNotificationPolicyRequest;
import com.mercoa.api.resources.entitytypes.types.UserNotificationPolicyResponse;
import java.util.List;

public class NotificationPolicyClient {
    protected final ClientOptions clientOptions;

    private final RawNotificationPolicyClient rawClient;

    public NotificationPolicyClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawNotificationPolicyClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawNotificationPolicyClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieve all notification policies associated with this entity user
     */
    public List<UserNotificationPolicyResponse> getAll(String entityId, String userId) {
        return this.rawClient.getAll(entityId, userId).body();
    }

    /**
     * Retrieve all notification policies associated with this entity user
     */
    public List<UserNotificationPolicyResponse> getAll(String entityId, String userId, RequestOptions requestOptions) {
        return this.rawClient.getAll(entityId, userId, requestOptions).body();
    }

    /**
     * Retrieve notification policy associated with this entity user
     */
    public UserNotificationPolicyResponse get(String entityId, String userId, NotificationType notificationType) {
        return this.rawClient.get(entityId, userId, notificationType).body();
    }

    /**
     * Retrieve notification policy associated with this entity user
     */
    public UserNotificationPolicyResponse get(
            String entityId, String userId, NotificationType notificationType, RequestOptions requestOptions) {
        return this.rawClient
                .get(entityId, userId, notificationType, requestOptions)
                .body();
    }

    /**
     * Update notification policy associated with this entity user
     */
    public UserNotificationPolicyResponse update(String entityId, String userId, NotificationType notificationType) {
        return this.rawClient.update(entityId, userId, notificationType).body();
    }

    /**
     * Update notification policy associated with this entity user
     */
    public UserNotificationPolicyResponse update(
            String entityId, String userId, NotificationType notificationType, UserNotificationPolicyRequest request) {
        return this.rawClient
                .update(entityId, userId, notificationType, request)
                .body();
    }

    /**
     * Update notification policy associated with this entity user
     */
    public UserNotificationPolicyResponse update(
            String entityId,
            String userId,
            NotificationType notificationType,
            UserNotificationPolicyRequest request,
            RequestOptions requestOptions) {
        return this.rawClient
                .update(entityId, userId, notificationType, request, requestOptions)
                .body();
    }
}
