/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.approvalpolicy;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.entitytypes.types.ApprovalPolicyHistoryResponse;
import com.mercoa.api.resources.entitytypes.types.ApprovalPolicyRequest;
import com.mercoa.api.resources.entitytypes.types.ApprovalPolicyResponse;
import com.mercoa.api.resources.entitytypes.types.ApprovalPolicyUpdateRequest;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncApprovalPolicyClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawApprovalPolicyClient rawClient;

    public AsyncApprovalPolicyClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawApprovalPolicyClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawApprovalPolicyClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieve all invoice approval policies associated with an entity
     */
    public CompletableFuture<List<ApprovalPolicyResponse>> getAll(String entityId) {
        return this.rawClient.getAll(entityId).thenApply(response -> response.body());
    }

    /**
     * Retrieve all invoice approval policies associated with an entity
     */
    public CompletableFuture<List<ApprovalPolicyResponse>> getAll(String entityId, RequestOptions requestOptions) {
        return this.rawClient.getAll(entityId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Create an invoice approval policy associated with an entity
     */
    public CompletableFuture<ApprovalPolicyResponse> create(String entityId, ApprovalPolicyRequest request) {
        return this.rawClient.create(entityId, request).thenApply(response -> response.body());
    }

    /**
     * Create an invoice approval policy associated with an entity
     */
    public CompletableFuture<ApprovalPolicyResponse> create(
            String entityId, ApprovalPolicyRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(entityId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve an invoice approval policy associated with an entity
     */
    public CompletableFuture<ApprovalPolicyResponse> get(String entityId, String policyId) {
        return this.rawClient.get(entityId, policyId).thenApply(response -> response.body());
    }

    /**
     * Retrieve an invoice approval policy associated with an entity
     */
    public CompletableFuture<ApprovalPolicyResponse> get(
            String entityId, String policyId, RequestOptions requestOptions) {
        return this.rawClient.get(entityId, policyId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Update an invoice approval policy associated with an entity
     */
    public CompletableFuture<ApprovalPolicyResponse> update(String entityId, String policyId) {
        return this.rawClient.update(entityId, policyId).thenApply(response -> response.body());
    }

    /**
     * Update an invoice approval policy associated with an entity
     */
    public CompletableFuture<ApprovalPolicyResponse> update(
            String entityId, String policyId, ApprovalPolicyUpdateRequest request) {
        return this.rawClient.update(entityId, policyId, request).thenApply(response -> response.body());
    }

    /**
     * Update an invoice approval policy associated with an entity
     */
    public CompletableFuture<ApprovalPolicyResponse> update(
            String entityId, String policyId, ApprovalPolicyUpdateRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .update(entityId, policyId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Delete an invoice approval policy associated with Entity. BEWARE: Any approval policy deletion will result in all associated downstream policies also being deleted.
     */
    public CompletableFuture<Void> delete(String entityId, String policyId) {
        return this.rawClient.delete(entityId, policyId).thenApply(response -> response.body());
    }

    /**
     * Delete an invoice approval policy associated with Entity. BEWARE: Any approval policy deletion will result in all associated downstream policies also being deleted.
     */
    public CompletableFuture<Void> delete(String entityId, String policyId, RequestOptions requestOptions) {
        return this.rawClient.delete(entityId, policyId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve the history of approval policy changes for an entity
     */
    public CompletableFuture<List<ApprovalPolicyHistoryResponse>> history(String entityId) {
        return this.rawClient.history(entityId).thenApply(response -> response.body());
    }

    /**
     * Retrieve the history of approval policy changes for an entity
     */
    public CompletableFuture<List<ApprovalPolicyHistoryResponse>> history(
            String entityId, RequestOptions requestOptions) {
        return this.rawClient.history(entityId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Restore approval policies from a history entry.
     */
    public CompletableFuture<List<ApprovalPolicyResponse>> restore(String entityId, String approvalPolicyHistoryId) {
        return this.rawClient.restore(entityId, approvalPolicyHistoryId).thenApply(response -> response.body());
    }

    /**
     * Restore approval policies from a history entry.
     */
    public CompletableFuture<List<ApprovalPolicyResponse>> restore(
            String entityId, String approvalPolicyHistoryId, RequestOptions requestOptions) {
        return this.rawClient
                .restore(entityId, approvalPolicyHistoryId, requestOptions)
                .thenApply(response -> response.body());
    }
}
