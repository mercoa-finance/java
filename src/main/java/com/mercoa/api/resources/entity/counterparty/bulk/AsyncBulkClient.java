/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.counterparty.bulk;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.commons.types.BulkDownloadResponse;
import com.mercoa.api.resources.entity.counterparty.bulk.requests.DownloadBulkPayeesRequest;
import com.mercoa.api.resources.entity.counterparty.bulk.requests.DownloadBulkPayorsRequest;
import java.util.concurrent.CompletableFuture;

public class AsyncBulkClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawBulkClient rawClient;

    public AsyncBulkClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawBulkClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawBulkClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get a URL to download payee counterparties as a CSV/JSON file. This endpoint lets you download vendors linked to the entity.
     */
    public CompletableFuture<BulkDownloadResponse> downloadPayees(String entityId) {
        return this.rawClient.downloadPayees(entityId).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download payee counterparties as a CSV/JSON file. This endpoint lets you download vendors linked to the entity.
     */
    public CompletableFuture<BulkDownloadResponse> downloadPayees(String entityId, DownloadBulkPayeesRequest request) {
        return this.rawClient.downloadPayees(entityId, request).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download payee counterparties as a CSV/JSON file. This endpoint lets you download vendors linked to the entity.
     */
    public CompletableFuture<BulkDownloadResponse> downloadPayees(
            String entityId, DownloadBulkPayeesRequest request, RequestOptions requestOptions) {
        return this.rawClient.downloadPayees(entityId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download payor counterparties as a CSV/JSON file. This endpoint lets you download customers linked to the entity.
     */
    public CompletableFuture<BulkDownloadResponse> downloadPayors(String entityId) {
        return this.rawClient.downloadPayors(entityId).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download payor counterparties as a CSV/JSON file. This endpoint lets you download customers linked to the entity.
     */
    public CompletableFuture<BulkDownloadResponse> downloadPayors(String entityId, DownloadBulkPayorsRequest request) {
        return this.rawClient.downloadPayors(entityId, request).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download payor counterparties as a CSV/JSON file. This endpoint lets you download customers linked to the entity.
     */
    public CompletableFuture<BulkDownloadResponse> downloadPayors(
            String entityId, DownloadBulkPayorsRequest request, RequestOptions requestOptions) {
        return this.rawClient.downloadPayors(entityId, request, requestOptions).thenApply(response -> response.body());
    }
}
