/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.metadata;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.entitytypes.types.EntityMetadataResponse;
import java.util.List;

public class MetadataClient {
    protected final ClientOptions clientOptions;

    private final RawMetadataClient rawClient;

    public MetadataClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawMetadataClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawMetadataClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieve all metadata options associated with this entity
     */
    public List<EntityMetadataResponse> getAll(String entityId) {
        return this.rawClient.getAll(entityId).body();
    }

    /**
     * Retrieve all metadata options associated with this entity
     */
    public List<EntityMetadataResponse> getAll(String entityId, RequestOptions requestOptions) {
        return this.rawClient.getAll(entityId, requestOptions).body();
    }

    /**
     * Retrieve metadata associated with a specific key
     */
    public List<String> get(String entityId, String key) {
        return this.rawClient.get(entityId, key).body();
    }

    /**
     * Retrieve metadata associated with a specific key
     */
    public List<String> get(String entityId, String key, RequestOptions requestOptions) {
        return this.rawClient.get(entityId, key, requestOptions).body();
    }

    /**
     * Update metadata associated with a specific key
     */
    public List<String> update(String entityId, String key, List<String> request) {
        return this.rawClient.update(entityId, key, request).body();
    }

    /**
     * Update metadata associated with a specific key
     */
    public List<String> update(String entityId, String key, List<String> request, RequestOptions requestOptions) {
        return this.rawClient.update(entityId, key, request, requestOptions).body();
    }

    /**
     * Delete all metadata associated with a specific key
     */
    public void delete(String entityId, String key) {
        this.rawClient.delete(entityId, key).body();
    }

    /**
     * Delete all metadata associated with a specific key
     */
    public void delete(String entityId, String key, RequestOptions requestOptions) {
        this.rawClient.delete(entityId, key, requestOptions).body();
    }
}
