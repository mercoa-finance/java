/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entity.invoice;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.commons.types.BulkDownloadResponse;
import com.mercoa.api.resources.entity.invoice.requests.DownloadEntityInvoicesRequest;
import com.mercoa.api.resources.entity.invoice.requests.EntityGetInvoicesRequest;
import com.mercoa.api.resources.entity.invoice.requests.InvoiceMetricsRequest;
import com.mercoa.api.resources.invoicetypes.types.FindInvoiceResponse;
import com.mercoa.api.resources.invoicetypes.types.InvoiceMetricsResponse;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncInvoiceClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawInvoiceClient rawClient;

    public AsyncInvoiceClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawInvoiceClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawInvoiceClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get invoices for an entity with the given filters.
     */
    public CompletableFuture<FindInvoiceResponse> find(String entityId) {
        return this.rawClient.find(entityId).thenApply(response -> response.body());
    }

    /**
     * Get invoices for an entity with the given filters.
     */
    public CompletableFuture<FindInvoiceResponse> find(String entityId, EntityGetInvoicesRequest request) {
        return this.rawClient.find(entityId, request).thenApply(response -> response.body());
    }

    /**
     * Get invoices for an entity with the given filters.
     */
    public CompletableFuture<FindInvoiceResponse> find(
            String entityId, EntityGetInvoicesRequest request, RequestOptions requestOptions) {
        return this.rawClient.find(entityId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get invoice metrics for an entity with the given filters. Invoices will always be grouped by currency. If none of excludePayables, excludeReceivables, payerId, vendorId, or invoiceId status filters are provided, excludeReceivables will be set to true.
     */
    public CompletableFuture<List<InvoiceMetricsResponse>> metrics(String entityId) {
        return this.rawClient.metrics(entityId).thenApply(response -> response.body());
    }

    /**
     * Get invoice metrics for an entity with the given filters. Invoices will always be grouped by currency. If none of excludePayables, excludeReceivables, payerId, vendorId, or invoiceId status filters are provided, excludeReceivables will be set to true.
     */
    public CompletableFuture<List<InvoiceMetricsResponse>> metrics(String entityId, InvoiceMetricsRequest request) {
        return this.rawClient.metrics(entityId, request).thenApply(response -> response.body());
    }

    /**
     * Get invoice metrics for an entity with the given filters. Invoices will always be grouped by currency. If none of excludePayables, excludeReceivables, payerId, vendorId, or invoiceId status filters are provided, excludeReceivables will be set to true.
     */
    public CompletableFuture<List<InvoiceMetricsResponse>> metrics(
            String entityId, InvoiceMetricsRequest request, RequestOptions requestOptions) {
        return this.rawClient.metrics(entityId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download invoices for an entity as a CSV/JSON file.
     */
    public CompletableFuture<BulkDownloadResponse> download(String entityId) {
        return this.rawClient.download(entityId).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download invoices for an entity as a CSV/JSON file.
     */
    public CompletableFuture<BulkDownloadResponse> download(String entityId, DownloadEntityInvoicesRequest request) {
        return this.rawClient.download(entityId, request).thenApply(response -> response.body());
    }

    /**
     * Get a URL to download invoices for an entity as a CSV/JSON file.
     */
    public CompletableFuture<BulkDownloadResponse> download(
            String entityId, DownloadEntityInvoicesRequest request, RequestOptions requestOptions) {
        return this.rawClient.download(entityId, request, requestOptions).thenApply(response -> response.body());
    }
}
