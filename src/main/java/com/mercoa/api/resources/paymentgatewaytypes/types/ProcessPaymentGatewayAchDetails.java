/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.paymentgatewaytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import com.mercoa.api.resources.paymentmethodtypes.types.BankType;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ProcessPaymentGatewayAchDetails.Builder.class)
public final class ProcessPaymentGatewayAchDetails {
    private final String routingNumber;

    private final String accountNumber;

    private final Optional<String> accountName;

    private final Optional<BankType> accountType;

    private final Map<String, Object> additionalProperties;

    private ProcessPaymentGatewayAchDetails(
            String routingNumber,
            String accountNumber,
            Optional<String> accountName,
            Optional<BankType> accountType,
            Map<String, Object> additionalProperties) {
        this.routingNumber = routingNumber;
        this.accountNumber = accountNumber;
        this.accountName = accountName;
        this.accountType = accountType;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The routing number of the ACH account
     */
    @JsonProperty("routingNumber")
    public String getRoutingNumber() {
        return routingNumber;
    }

    /**
     * @return The account number of the ACH account
     */
    @JsonProperty("accountNumber")
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * @return The name on the ACH account
     */
    @JsonProperty("accountName")
    public Optional<String> getAccountName() {
        return accountName;
    }

    /**
     * @return The type of bank account (checking or savings)
     */
    @JsonProperty("accountType")
    public Optional<BankType> getAccountType() {
        return accountType;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ProcessPaymentGatewayAchDetails && equalTo((ProcessPaymentGatewayAchDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ProcessPaymentGatewayAchDetails other) {
        return routingNumber.equals(other.routingNumber)
                && accountNumber.equals(other.accountNumber)
                && accountName.equals(other.accountName)
                && accountType.equals(other.accountType);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.routingNumber, this.accountNumber, this.accountName, this.accountType);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static RoutingNumberStage builder() {
        return new Builder();
    }

    public interface RoutingNumberStage {
        /**
         * <p>The routing number of the ACH account</p>
         */
        AccountNumberStage routingNumber(@NotNull String routingNumber);

        Builder from(ProcessPaymentGatewayAchDetails other);
    }

    public interface AccountNumberStage {
        /**
         * <p>The account number of the ACH account</p>
         */
        _FinalStage accountNumber(@NotNull String accountNumber);
    }

    public interface _FinalStage {
        ProcessPaymentGatewayAchDetails build();

        /**
         * <p>The name on the ACH account</p>
         */
        _FinalStage accountName(Optional<String> accountName);

        _FinalStage accountName(String accountName);

        /**
         * <p>The type of bank account (checking or savings)</p>
         */
        _FinalStage accountType(Optional<BankType> accountType);

        _FinalStage accountType(BankType accountType);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements RoutingNumberStage, AccountNumberStage, _FinalStage {
        private String routingNumber;

        private String accountNumber;

        private Optional<BankType> accountType = Optional.empty();

        private Optional<String> accountName = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ProcessPaymentGatewayAchDetails other) {
            routingNumber(other.getRoutingNumber());
            accountNumber(other.getAccountNumber());
            accountName(other.getAccountName());
            accountType(other.getAccountType());
            return this;
        }

        /**
         * <p>The routing number of the ACH account</p>
         * <p>The routing number of the ACH account</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("routingNumber")
        public AccountNumberStage routingNumber(@NotNull String routingNumber) {
            this.routingNumber = Objects.requireNonNull(routingNumber, "routingNumber must not be null");
            return this;
        }

        /**
         * <p>The account number of the ACH account</p>
         * <p>The account number of the ACH account</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("accountNumber")
        public _FinalStage accountNumber(@NotNull String accountNumber) {
            this.accountNumber = Objects.requireNonNull(accountNumber, "accountNumber must not be null");
            return this;
        }

        /**
         * <p>The type of bank account (checking or savings)</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage accountType(BankType accountType) {
            this.accountType = Optional.ofNullable(accountType);
            return this;
        }

        /**
         * <p>The type of bank account (checking or savings)</p>
         */
        @java.lang.Override
        @JsonSetter(value = "accountType", nulls = Nulls.SKIP)
        public _FinalStage accountType(Optional<BankType> accountType) {
            this.accountType = accountType;
            return this;
        }

        /**
         * <p>The name on the ACH account</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage accountName(String accountName) {
            this.accountName = Optional.ofNullable(accountName);
            return this;
        }

        /**
         * <p>The name on the ACH account</p>
         */
        @java.lang.Override
        @JsonSetter(value = "accountName", nulls = Nulls.SKIP)
        public _FinalStage accountName(Optional<String> accountName) {
            this.accountName = accountName;
            return this;
        }

        @java.lang.Override
        public ProcessPaymentGatewayAchDetails build() {
            return new ProcessPaymentGatewayAchDetails(
                    routingNumber, accountNumber, accountName, accountType, additionalProperties);
        }
    }
}
