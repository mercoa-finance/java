/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.paymentgatewaytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ValidatePaymentGatewayFailedResponse.Builder.class)
public final class ValidatePaymentGatewayFailedResponse {
    private final String jobId;

    private final PaymentGatewayError errorType;

    private final Optional<String> errorMessage;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final Map<String, Object> additionalProperties;

    private ValidatePaymentGatewayFailedResponse(
            String jobId,
            PaymentGatewayError errorType,
            Optional<String> errorMessage,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Map<String, Object> additionalProperties) {
        this.jobId = jobId;
        this.errorType = errorType;
        this.errorMessage = errorMessage;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The job ID of the payment gateway validation job
     */
    @JsonProperty("jobId")
    public String getJobId() {
        return jobId;
    }

    /**
     * @return The error that occurred during the payment gateway validation job
     */
    @JsonProperty("errorType")
    public PaymentGatewayError getErrorType() {
        return errorType;
    }

    /**
     * @return The error message that occurred during the payment gateway validation job
     */
    @JsonProperty("errorMessage")
    public Optional<String> getErrorMessage() {
        return errorMessage;
    }

    /**
     * @return The timestamp when the job was created
     */
    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return The timestamp when the job was last updated
     */
    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ValidatePaymentGatewayFailedResponse
                && equalTo((ValidatePaymentGatewayFailedResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ValidatePaymentGatewayFailedResponse other) {
        return jobId.equals(other.jobId)
                && errorType.equals(other.errorType)
                && errorMessage.equals(other.errorMessage)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.jobId, this.errorType, this.errorMessage, this.createdAt, this.updatedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static JobIdStage builder() {
        return new Builder();
    }

    public interface JobIdStage {
        /**
         * <p>The job ID of the payment gateway validation job</p>
         */
        ErrorTypeStage jobId(@NotNull String jobId);

        Builder from(ValidatePaymentGatewayFailedResponse other);
    }

    public interface ErrorTypeStage {
        /**
         * <p>The error that occurred during the payment gateway validation job</p>
         */
        CreatedAtStage errorType(@NotNull PaymentGatewayError errorType);
    }

    public interface CreatedAtStage {
        /**
         * <p>The timestamp when the job was created</p>
         */
        UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        /**
         * <p>The timestamp when the job was last updated</p>
         */
        _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        ValidatePaymentGatewayFailedResponse build();

        /**
         * <p>The error message that occurred during the payment gateway validation job</p>
         */
        _FinalStage errorMessage(Optional<String> errorMessage);

        _FinalStage errorMessage(String errorMessage);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements JobIdStage, ErrorTypeStage, CreatedAtStage, UpdatedAtStage, _FinalStage {
        private String jobId;

        private PaymentGatewayError errorType;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private Optional<String> errorMessage = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ValidatePaymentGatewayFailedResponse other) {
            jobId(other.getJobId());
            errorType(other.getErrorType());
            errorMessage(other.getErrorMessage());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            return this;
        }

        /**
         * <p>The job ID of the payment gateway validation job</p>
         * <p>The job ID of the payment gateway validation job</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("jobId")
        public ErrorTypeStage jobId(@NotNull String jobId) {
            this.jobId = Objects.requireNonNull(jobId, "jobId must not be null");
            return this;
        }

        /**
         * <p>The error that occurred during the payment gateway validation job</p>
         * <p>The error that occurred during the payment gateway validation job</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("errorType")
        public CreatedAtStage errorType(@NotNull PaymentGatewayError errorType) {
            this.errorType = Objects.requireNonNull(errorType, "errorType must not be null");
            return this;
        }

        /**
         * <p>The timestamp when the job was created</p>
         * <p>The timestamp when the job was created</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        /**
         * <p>The timestamp when the job was last updated</p>
         * <p>The timestamp when the job was last updated</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updatedAt")
        public _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
            return this;
        }

        /**
         * <p>The error message that occurred during the payment gateway validation job</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage errorMessage(String errorMessage) {
            this.errorMessage = Optional.ofNullable(errorMessage);
            return this;
        }

        /**
         * <p>The error message that occurred during the payment gateway validation job</p>
         */
        @java.lang.Override
        @JsonSetter(value = "errorMessage", nulls = Nulls.SKIP)
        public _FinalStage errorMessage(Optional<String> errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }

        @java.lang.Override
        public ValidatePaymentGatewayFailedResponse build() {
            return new ValidatePaymentGatewayFailedResponse(
                    jobId, errorType, errorMessage, createdAt, updatedAt, additionalProperties);
        }
    }
}
