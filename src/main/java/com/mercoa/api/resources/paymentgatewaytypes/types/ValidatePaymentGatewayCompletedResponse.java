/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.paymentgatewaytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ValidatePaymentGatewayCompletedResponse.Builder.class)
public final class ValidatePaymentGatewayCompletedResponse {
    private final String jobId;

    private final Optional<String> paymentGatewayUrl;

    private final Optional<String> sessionUrl;

    private final Optional<ValidatePaymentGatewayCardResponse> card;

    private final Map<String, Object> additionalProperties;

    private ValidatePaymentGatewayCompletedResponse(
            String jobId,
            Optional<String> paymentGatewayUrl,
            Optional<String> sessionUrl,
            Optional<ValidatePaymentGatewayCardResponse> card,
            Map<String, Object> additionalProperties) {
        this.jobId = jobId;
        this.paymentGatewayUrl = paymentGatewayUrl;
        this.sessionUrl = sessionUrl;
        this.card = card;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The job ID of the payment gateway validation job
     */
    @JsonProperty("jobId")
    public String getJobId() {
        return jobId;
    }

    /**
     * @return The payment gateway URL that was found in the document
     */
    @JsonProperty("paymentGatewayUrl")
    public Optional<String> getPaymentGatewayUrl() {
        return paymentGatewayUrl;
    }

    /**
     * @return The URL of the playback session for the agent that validated the payment gateway
     */
    @JsonProperty("sessionUrl")
    public Optional<String> getSessionUrl() {
        return sessionUrl;
    }

    /**
     * @return Data on the card payments that were extracted from the gateway
     */
    @JsonProperty("card")
    public Optional<ValidatePaymentGatewayCardResponse> getCard() {
        return card;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ValidatePaymentGatewayCompletedResponse
                && equalTo((ValidatePaymentGatewayCompletedResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ValidatePaymentGatewayCompletedResponse other) {
        return jobId.equals(other.jobId)
                && paymentGatewayUrl.equals(other.paymentGatewayUrl)
                && sessionUrl.equals(other.sessionUrl)
                && card.equals(other.card);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.jobId, this.paymentGatewayUrl, this.sessionUrl, this.card);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static JobIdStage builder() {
        return new Builder();
    }

    public interface JobIdStage {
        _FinalStage jobId(@NotNull String jobId);

        Builder from(ValidatePaymentGatewayCompletedResponse other);
    }

    public interface _FinalStage {
        ValidatePaymentGatewayCompletedResponse build();

        _FinalStage paymentGatewayUrl(Optional<String> paymentGatewayUrl);

        _FinalStage paymentGatewayUrl(String paymentGatewayUrl);

        _FinalStage sessionUrl(Optional<String> sessionUrl);

        _FinalStage sessionUrl(String sessionUrl);

        _FinalStage card(Optional<ValidatePaymentGatewayCardResponse> card);

        _FinalStage card(ValidatePaymentGatewayCardResponse card);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements JobIdStage, _FinalStage {
        private String jobId;

        private Optional<ValidatePaymentGatewayCardResponse> card = Optional.empty();

        private Optional<String> sessionUrl = Optional.empty();

        private Optional<String> paymentGatewayUrl = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ValidatePaymentGatewayCompletedResponse other) {
            jobId(other.getJobId());
            paymentGatewayUrl(other.getPaymentGatewayUrl());
            sessionUrl(other.getSessionUrl());
            card(other.getCard());
            return this;
        }

        /**
         * <p>The job ID of the payment gateway validation job</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("jobId")
        public _FinalStage jobId(@NotNull String jobId) {
            this.jobId = Objects.requireNonNull(jobId, "jobId must not be null");
            return this;
        }

        /**
         * <p>Data on the card payments that were extracted from the gateway</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage card(ValidatePaymentGatewayCardResponse card) {
            this.card = Optional.ofNullable(card);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "card", nulls = Nulls.SKIP)
        public _FinalStage card(Optional<ValidatePaymentGatewayCardResponse> card) {
            this.card = card;
            return this;
        }

        /**
         * <p>The URL of the playback session for the agent that validated the payment gateway</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage sessionUrl(String sessionUrl) {
            this.sessionUrl = Optional.ofNullable(sessionUrl);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sessionUrl", nulls = Nulls.SKIP)
        public _FinalStage sessionUrl(Optional<String> sessionUrl) {
            this.sessionUrl = sessionUrl;
            return this;
        }

        /**
         * <p>The payment gateway URL that was found in the document</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage paymentGatewayUrl(String paymentGatewayUrl) {
            this.paymentGatewayUrl = Optional.ofNullable(paymentGatewayUrl);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "paymentGatewayUrl", nulls = Nulls.SKIP)
        public _FinalStage paymentGatewayUrl(Optional<String> paymentGatewayUrl) {
            this.paymentGatewayUrl = paymentGatewayUrl;
            return this;
        }

        @java.lang.Override
        public ValidatePaymentGatewayCompletedResponse build() {
            return new ValidatePaymentGatewayCompletedResponse(
                    jobId, paymentGatewayUrl, sessionUrl, card, additionalProperties);
        }
    }
}
