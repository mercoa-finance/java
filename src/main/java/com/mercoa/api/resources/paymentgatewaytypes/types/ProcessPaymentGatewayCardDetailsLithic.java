/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.paymentgatewaytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import com.mercoa.api.resources.commons.types.CountryCode;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ProcessPaymentGatewayCardDetailsLithic.Builder.class)
public final class ProcessPaymentGatewayCardDetailsLithic implements IProcessPaymentGatewayCardDetailsBase {
    private final String firstName;

    private final String lastName;

    private final String postalCode;

    private final CountryCode country;

    private final Optional<ProcessPaymentGatewayCardType> cardType;

    private final Optional<String> phoneNumber;

    private final Optional<String> email;

    private final Optional<String> fullAddress;

    private final Optional<ProcessPaymentGatewayAchDetails> achDetails;

    private final String embedRequest;

    private final String hmac;

    private final Map<String, Object> additionalProperties;

    private ProcessPaymentGatewayCardDetailsLithic(
            String firstName,
            String lastName,
            String postalCode,
            CountryCode country,
            Optional<ProcessPaymentGatewayCardType> cardType,
            Optional<String> phoneNumber,
            Optional<String> email,
            Optional<String> fullAddress,
            Optional<ProcessPaymentGatewayAchDetails> achDetails,
            String embedRequest,
            String hmac,
            Map<String, Object> additionalProperties) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.postalCode = postalCode;
        this.country = country;
        this.cardType = cardType;
        this.phoneNumber = phoneNumber;
        this.email = email;
        this.fullAddress = fullAddress;
        this.achDetails = achDetails;
        this.embedRequest = embedRequest;
        this.hmac = hmac;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The first name of the card user
     */
    @JsonProperty("firstName")
    @java.lang.Override
    public String getFirstName() {
        return firstName;
    }

    /**
     * @return The last name of the card user
     */
    @JsonProperty("lastName")
    @java.lang.Override
    public String getLastName() {
        return lastName;
    }

    /**
     * @return The postal code of the address of the card
     */
    @JsonProperty("postalCode")
    @java.lang.Override
    public String getPostalCode() {
        return postalCode;
    }

    /**
     * @return The country of the address of the card
     */
    @JsonProperty("country")
    @java.lang.Override
    public CountryCode getCountry() {
        return country;
    }

    /**
     * @return The type of card (credit or debit). Defaults to debit.
     */
    @JsonProperty("cardType")
    @java.lang.Override
    public Optional<ProcessPaymentGatewayCardType> getCardType() {
        return cardType;
    }

    /**
     * @return The phone number of the card user
     */
    @JsonProperty("phoneNumber")
    @java.lang.Override
    public Optional<String> getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * @return The email of the card user
     */
    @JsonProperty("email")
    @java.lang.Override
    public Optional<String> getEmail() {
        return email;
    }

    /**
     * @return The full address of the card user
     */
    @JsonProperty("fullAddress")
    @java.lang.Override
    public Optional<String> getFullAddress() {
        return fullAddress;
    }

    /**
     * @return The details of the fallback ACH account to use for the payment. This will be used if a fee is charged for card processing.
     */
    @JsonProperty("achDetails")
    @java.lang.Override
    public Optional<ProcessPaymentGatewayAchDetails> getAchDetails() {
        return achDetails;
    }

    /**
     * @return The base64-encoded embed request for the Lithic virtual card
     */
    @JsonProperty("embedRequest")
    public String getEmbedRequest() {
        return embedRequest;
    }

    /**
     * @return The HMAC signature for the embed request
     */
    @JsonProperty("hmac")
    public String getHmac() {
        return hmac;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ProcessPaymentGatewayCardDetailsLithic
                && equalTo((ProcessPaymentGatewayCardDetailsLithic) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ProcessPaymentGatewayCardDetailsLithic other) {
        return firstName.equals(other.firstName)
                && lastName.equals(other.lastName)
                && postalCode.equals(other.postalCode)
                && country.equals(other.country)
                && cardType.equals(other.cardType)
                && phoneNumber.equals(other.phoneNumber)
                && email.equals(other.email)
                && fullAddress.equals(other.fullAddress)
                && achDetails.equals(other.achDetails)
                && embedRequest.equals(other.embedRequest)
                && hmac.equals(other.hmac);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.firstName,
                this.lastName,
                this.postalCode,
                this.country,
                this.cardType,
                this.phoneNumber,
                this.email,
                this.fullAddress,
                this.achDetails,
                this.embedRequest,
                this.hmac);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static FirstNameStage builder() {
        return new Builder();
    }

    public interface FirstNameStage {
        /**
         * <p>The first name of the card user</p>
         */
        LastNameStage firstName(@NotNull String firstName);

        Builder from(ProcessPaymentGatewayCardDetailsLithic other);
    }

    public interface LastNameStage {
        /**
         * <p>The last name of the card user</p>
         */
        PostalCodeStage lastName(@NotNull String lastName);
    }

    public interface PostalCodeStage {
        /**
         * <p>The postal code of the address of the card</p>
         */
        CountryStage postalCode(@NotNull String postalCode);
    }

    public interface CountryStage {
        /**
         * <p>The country of the address of the card</p>
         */
        EmbedRequestStage country(@NotNull CountryCode country);
    }

    public interface EmbedRequestStage {
        /**
         * <p>The base64-encoded embed request for the Lithic virtual card</p>
         */
        HmacStage embedRequest(@NotNull String embedRequest);
    }

    public interface HmacStage {
        /**
         * <p>The HMAC signature for the embed request</p>
         */
        _FinalStage hmac(@NotNull String hmac);
    }

    public interface _FinalStage {
        ProcessPaymentGatewayCardDetailsLithic build();

        /**
         * <p>The type of card (credit or debit). Defaults to debit.</p>
         */
        _FinalStage cardType(Optional<ProcessPaymentGatewayCardType> cardType);

        _FinalStage cardType(ProcessPaymentGatewayCardType cardType);

        /**
         * <p>The phone number of the card user</p>
         */
        _FinalStage phoneNumber(Optional<String> phoneNumber);

        _FinalStage phoneNumber(String phoneNumber);

        /**
         * <p>The email of the card user</p>
         */
        _FinalStage email(Optional<String> email);

        _FinalStage email(String email);

        /**
         * <p>The full address of the card user</p>
         */
        _FinalStage fullAddress(Optional<String> fullAddress);

        _FinalStage fullAddress(String fullAddress);

        /**
         * <p>The details of the fallback ACH account to use for the payment. This will be used if a fee is charged for card processing.</p>
         */
        _FinalStage achDetails(Optional<ProcessPaymentGatewayAchDetails> achDetails);

        _FinalStage achDetails(ProcessPaymentGatewayAchDetails achDetails);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements FirstNameStage,
                    LastNameStage,
                    PostalCodeStage,
                    CountryStage,
                    EmbedRequestStage,
                    HmacStage,
                    _FinalStage {
        private String firstName;

        private String lastName;

        private String postalCode;

        private CountryCode country;

        private String embedRequest;

        private String hmac;

        private Optional<ProcessPaymentGatewayAchDetails> achDetails = Optional.empty();

        private Optional<String> fullAddress = Optional.empty();

        private Optional<String> email = Optional.empty();

        private Optional<String> phoneNumber = Optional.empty();

        private Optional<ProcessPaymentGatewayCardType> cardType = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ProcessPaymentGatewayCardDetailsLithic other) {
            firstName(other.getFirstName());
            lastName(other.getLastName());
            postalCode(other.getPostalCode());
            country(other.getCountry());
            cardType(other.getCardType());
            phoneNumber(other.getPhoneNumber());
            email(other.getEmail());
            fullAddress(other.getFullAddress());
            achDetails(other.getAchDetails());
            embedRequest(other.getEmbedRequest());
            hmac(other.getHmac());
            return this;
        }

        /**
         * <p>The first name of the card user</p>
         * <p>The first name of the card user</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("firstName")
        public LastNameStage firstName(@NotNull String firstName) {
            this.firstName = Objects.requireNonNull(firstName, "firstName must not be null");
            return this;
        }

        /**
         * <p>The last name of the card user</p>
         * <p>The last name of the card user</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("lastName")
        public PostalCodeStage lastName(@NotNull String lastName) {
            this.lastName = Objects.requireNonNull(lastName, "lastName must not be null");
            return this;
        }

        /**
         * <p>The postal code of the address of the card</p>
         * <p>The postal code of the address of the card</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("postalCode")
        public CountryStage postalCode(@NotNull String postalCode) {
            this.postalCode = Objects.requireNonNull(postalCode, "postalCode must not be null");
            return this;
        }

        /**
         * <p>The country of the address of the card</p>
         * <p>The country of the address of the card</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("country")
        public EmbedRequestStage country(@NotNull CountryCode country) {
            this.country = Objects.requireNonNull(country, "country must not be null");
            return this;
        }

        /**
         * <p>The base64-encoded embed request for the Lithic virtual card</p>
         * <p>The base64-encoded embed request for the Lithic virtual card</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("embedRequest")
        public HmacStage embedRequest(@NotNull String embedRequest) {
            this.embedRequest = Objects.requireNonNull(embedRequest, "embedRequest must not be null");
            return this;
        }

        /**
         * <p>The HMAC signature for the embed request</p>
         * <p>The HMAC signature for the embed request</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("hmac")
        public _FinalStage hmac(@NotNull String hmac) {
            this.hmac = Objects.requireNonNull(hmac, "hmac must not be null");
            return this;
        }

        /**
         * <p>The details of the fallback ACH account to use for the payment. This will be used if a fee is charged for card processing.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage achDetails(ProcessPaymentGatewayAchDetails achDetails) {
            this.achDetails = Optional.ofNullable(achDetails);
            return this;
        }

        /**
         * <p>The details of the fallback ACH account to use for the payment. This will be used if a fee is charged for card processing.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "achDetails", nulls = Nulls.SKIP)
        public _FinalStage achDetails(Optional<ProcessPaymentGatewayAchDetails> achDetails) {
            this.achDetails = achDetails;
            return this;
        }

        /**
         * <p>The full address of the card user</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage fullAddress(String fullAddress) {
            this.fullAddress = Optional.ofNullable(fullAddress);
            return this;
        }

        /**
         * <p>The full address of the card user</p>
         */
        @java.lang.Override
        @JsonSetter(value = "fullAddress", nulls = Nulls.SKIP)
        public _FinalStage fullAddress(Optional<String> fullAddress) {
            this.fullAddress = fullAddress;
            return this;
        }

        /**
         * <p>The email of the card user</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage email(String email) {
            this.email = Optional.ofNullable(email);
            return this;
        }

        /**
         * <p>The email of the card user</p>
         */
        @java.lang.Override
        @JsonSetter(value = "email", nulls = Nulls.SKIP)
        public _FinalStage email(Optional<String> email) {
            this.email = email;
            return this;
        }

        /**
         * <p>The phone number of the card user</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage phoneNumber(String phoneNumber) {
            this.phoneNumber = Optional.ofNullable(phoneNumber);
            return this;
        }

        /**
         * <p>The phone number of the card user</p>
         */
        @java.lang.Override
        @JsonSetter(value = "phoneNumber", nulls = Nulls.SKIP)
        public _FinalStage phoneNumber(Optional<String> phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * <p>The type of card (credit or debit). Defaults to debit.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage cardType(ProcessPaymentGatewayCardType cardType) {
            this.cardType = Optional.ofNullable(cardType);
            return this;
        }

        /**
         * <p>The type of card (credit or debit). Defaults to debit.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "cardType", nulls = Nulls.SKIP)
        public _FinalStage cardType(Optional<ProcessPaymentGatewayCardType> cardType) {
            this.cardType = cardType;
            return this;
        }

        @java.lang.Override
        public ProcessPaymentGatewayCardDetailsLithic build() {
            return new ProcessPaymentGatewayCardDetailsLithic(
                    firstName,
                    lastName,
                    postalCode,
                    country,
                    cardType,
                    phoneNumber,
                    email,
                    fullAddress,
                    achDetails,
                    embedRequest,
                    hmac,
                    additionalProperties);
        }
    }
}
