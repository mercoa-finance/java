/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.paymentgatewaytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ProcessPaymentGatewayCardDetailsIframe.Builder.class)
public final class ProcessPaymentGatewayCardDetailsIframe {
    private final String iframeUrl;

    private final Map<String, Object> additionalProperties;

    private ProcessPaymentGatewayCardDetailsIframe(String iframeUrl, Map<String, Object> additionalProperties) {
        this.iframeUrl = iframeUrl;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The URL of the iframe that render the virtual card details
     */
    @JsonProperty("iframeUrl")
    public String getIframeUrl() {
        return iframeUrl;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ProcessPaymentGatewayCardDetailsIframe
                && equalTo((ProcessPaymentGatewayCardDetailsIframe) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ProcessPaymentGatewayCardDetailsIframe other) {
        return iframeUrl.equals(other.iframeUrl);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.iframeUrl);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IframeUrlStage builder() {
        return new Builder();
    }

    public interface IframeUrlStage {
        _FinalStage iframeUrl(@NotNull String iframeUrl);

        Builder from(ProcessPaymentGatewayCardDetailsIframe other);
    }

    public interface _FinalStage {
        ProcessPaymentGatewayCardDetailsIframe build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IframeUrlStage, _FinalStage {
        private String iframeUrl;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ProcessPaymentGatewayCardDetailsIframe other) {
            iframeUrl(other.getIframeUrl());
            return this;
        }

        /**
         * <p>The URL of the iframe that render the virtual card details</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("iframeUrl")
        public _FinalStage iframeUrl(@NotNull String iframeUrl) {
            this.iframeUrl = Objects.requireNonNull(iframeUrl, "iframeUrl must not be null");
            return this;
        }

        @java.lang.Override
        public ProcessPaymentGatewayCardDetailsIframe build() {
            return new ProcessPaymentGatewayCardDetailsIframe(iframeUrl, additionalProperties);
        }
    }
}
