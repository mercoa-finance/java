/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.paymentgatewaytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SearchPaymentGatewayValidationJobsResponse.Builder.class)
public final class SearchPaymentGatewayValidationJobsResponse {
    private final List<ValidatePaymentGatewayResponse> jobs;

    private final boolean hasMore;

    private final Map<String, Object> additionalProperties;

    private SearchPaymentGatewayValidationJobsResponse(
            List<ValidatePaymentGatewayResponse> jobs, boolean hasMore, Map<String, Object> additionalProperties) {
        this.jobs = jobs;
        this.hasMore = hasMore;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return List of payment gateway validation jobs matching the search criteria
     */
    @JsonProperty("jobs")
    public List<ValidatePaymentGatewayResponse> getJobs() {
        return jobs;
    }

    /**
     * @return Whether there are more jobs available beyond the current page
     */
    @JsonProperty("hasMore")
    public boolean getHasMore() {
        return hasMore;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SearchPaymentGatewayValidationJobsResponse
                && equalTo((SearchPaymentGatewayValidationJobsResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SearchPaymentGatewayValidationJobsResponse other) {
        return jobs.equals(other.jobs) && hasMore == other.hasMore;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.jobs, this.hasMore);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static HasMoreStage builder() {
        return new Builder();
    }

    public interface HasMoreStage {
        /**
         * <p>Whether there are more jobs available beyond the current page</p>
         */
        _FinalStage hasMore(boolean hasMore);

        Builder from(SearchPaymentGatewayValidationJobsResponse other);
    }

    public interface _FinalStage {
        SearchPaymentGatewayValidationJobsResponse build();

        /**
         * <p>List of payment gateway validation jobs matching the search criteria</p>
         */
        _FinalStage jobs(List<ValidatePaymentGatewayResponse> jobs);

        _FinalStage addJobs(ValidatePaymentGatewayResponse jobs);

        _FinalStage addAllJobs(List<ValidatePaymentGatewayResponse> jobs);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements HasMoreStage, _FinalStage {
        private boolean hasMore;

        private List<ValidatePaymentGatewayResponse> jobs = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SearchPaymentGatewayValidationJobsResponse other) {
            jobs(other.getJobs());
            hasMore(other.getHasMore());
            return this;
        }

        /**
         * <p>Whether there are more jobs available beyond the current page</p>
         * <p>Whether there are more jobs available beyond the current page</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("hasMore")
        public _FinalStage hasMore(boolean hasMore) {
            this.hasMore = hasMore;
            return this;
        }

        /**
         * <p>List of payment gateway validation jobs matching the search criteria</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllJobs(List<ValidatePaymentGatewayResponse> jobs) {
            this.jobs.addAll(jobs);
            return this;
        }

        /**
         * <p>List of payment gateway validation jobs matching the search criteria</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addJobs(ValidatePaymentGatewayResponse jobs) {
            this.jobs.add(jobs);
            return this;
        }

        /**
         * <p>List of payment gateway validation jobs matching the search criteria</p>
         */
        @java.lang.Override
        @JsonSetter(value = "jobs", nulls = Nulls.SKIP)
        public _FinalStage jobs(List<ValidatePaymentGatewayResponse> jobs) {
            this.jobs.clear();
            this.jobs.addAll(jobs);
            return this;
        }

        @java.lang.Override
        public SearchPaymentGatewayValidationJobsResponse build() {
            return new SearchPaymentGatewayValidationJobsResponse(jobs, hasMore, additionalProperties);
        }
    }
}
