/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.custompaymentmethodschema;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.paymentmethodtypes.types.CustomPaymentMethodSchemaRequest;
import com.mercoa.api.resources.paymentmethodtypes.types.CustomPaymentMethodSchemaResponse;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncCustomPaymentMethodSchemaClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawCustomPaymentMethodSchemaClient rawClient;

    public AsyncCustomPaymentMethodSchemaClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawCustomPaymentMethodSchemaClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawCustomPaymentMethodSchemaClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get all custom payment method schemas
     */
    public CompletableFuture<List<CustomPaymentMethodSchemaResponse>> getAll() {
        return this.rawClient.getAll().thenApply(response -> response.body());
    }

    /**
     * Get all custom payment method schemas
     */
    public CompletableFuture<List<CustomPaymentMethodSchemaResponse>> getAll(RequestOptions requestOptions) {
        return this.rawClient.getAll(requestOptions).thenApply(response -> response.body());
    }

    /**
     * Create custom payment method schema
     */
    public CompletableFuture<CustomPaymentMethodSchemaResponse> create(CustomPaymentMethodSchemaRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Create custom payment method schema
     */
    public CompletableFuture<CustomPaymentMethodSchemaResponse> create(
            CustomPaymentMethodSchemaRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Update custom payment method schema
     */
    public CompletableFuture<CustomPaymentMethodSchemaResponse> update(
            String schemaId, CustomPaymentMethodSchemaRequest request) {
        return this.rawClient.update(schemaId, request).thenApply(response -> response.body());
    }

    /**
     * Update custom payment method schema
     */
    public CompletableFuture<CustomPaymentMethodSchemaResponse> update(
            String schemaId, CustomPaymentMethodSchemaRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(schemaId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get custom payment method schema
     */
    public CompletableFuture<CustomPaymentMethodSchemaResponse> get(String schemaId) {
        return this.rawClient.get(schemaId).thenApply(response -> response.body());
    }

    /**
     * Get custom payment method schema
     */
    public CompletableFuture<CustomPaymentMethodSchemaResponse> get(String schemaId, RequestOptions requestOptions) {
        return this.rawClient.get(schemaId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Delete custom payment method schema. Schema that have been used in an invoice cannot be deleted.
     */
    public CompletableFuture<Void> delete(String schemaId) {
        return this.rawClient.delete(schemaId).thenApply(response -> response.body());
    }

    /**
     * Delete custom payment method schema. Schema that have been used in an invoice cannot be deleted.
     */
    public CompletableFuture<Void> delete(String schemaId, RequestOptions requestOptions) {
        return this.rawClient.delete(schemaId, requestOptions).thenApply(response -> response.body());
    }
}
