/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetemplate;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.core.Suppliers;
import com.mercoa.api.resources.invoicetemplate.approval.AsyncApprovalClient;
import com.mercoa.api.resources.invoicetemplate.document.AsyncDocumentClient;
import com.mercoa.api.resources.invoicetemplate.lineitem.AsyncLineItemClient;
import com.mercoa.api.resources.invoicetemplate.requests.GetAllInvoiceTemplatesRequest;
import com.mercoa.api.resources.invoicetypes.types.FindInvoiceTemplateResponse;
import com.mercoa.api.resources.invoicetypes.types.InvoiceTemplateCreationRequest;
import com.mercoa.api.resources.invoicetypes.types.InvoiceTemplateResponse;
import com.mercoa.api.resources.invoicetypes.types.InvoiceTemplateUpdateRequest;
import java.util.concurrent.CompletableFuture;
import java.util.function.Supplier;

public class AsyncInvoiceTemplateClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawInvoiceTemplateClient rawClient;

    protected final Supplier<AsyncLineItemClient> lineItemClient;

    protected final Supplier<AsyncApprovalClient> approvalClient;

    protected final Supplier<AsyncDocumentClient> documentClient;

    public AsyncInvoiceTemplateClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawInvoiceTemplateClient(clientOptions);
        this.lineItemClient = Suppliers.memoize(() -> new AsyncLineItemClient(clientOptions));
        this.approvalClient = Suppliers.memoize(() -> new AsyncApprovalClient(clientOptions));
        this.documentClient = Suppliers.memoize(() -> new AsyncDocumentClient(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawInvoiceTemplateClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Search invoice templates for all entities in the organization
     */
    public CompletableFuture<FindInvoiceTemplateResponse> find() {
        return this.rawClient.find().thenApply(response -> response.body());
    }

    /**
     * Search invoice templates for all entities in the organization
     */
    public CompletableFuture<FindInvoiceTemplateResponse> find(GetAllInvoiceTemplatesRequest request) {
        return this.rawClient.find(request).thenApply(response -> response.body());
    }

    /**
     * Search invoice templates for all entities in the organization
     */
    public CompletableFuture<FindInvoiceTemplateResponse> find(
            GetAllInvoiceTemplatesRequest request, RequestOptions requestOptions) {
        return this.rawClient.find(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<InvoiceTemplateResponse> create() {
        return this.rawClient.create().thenApply(response -> response.body());
    }

    public CompletableFuture<InvoiceTemplateResponse> create(InvoiceTemplateCreationRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    public CompletableFuture<InvoiceTemplateResponse> create(
            InvoiceTemplateCreationRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<InvoiceTemplateResponse> get(String invoiceTemplateId) {
        return this.rawClient.get(invoiceTemplateId).thenApply(response -> response.body());
    }

    public CompletableFuture<InvoiceTemplateResponse> get(String invoiceTemplateId, RequestOptions requestOptions) {
        return this.rawClient.get(invoiceTemplateId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<InvoiceTemplateResponse> update(String invoiceTemplateId) {
        return this.rawClient.update(invoiceTemplateId).thenApply(response -> response.body());
    }

    public CompletableFuture<InvoiceTemplateResponse> update(
            String invoiceTemplateId, InvoiceTemplateUpdateRequest request) {
        return this.rawClient.update(invoiceTemplateId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<InvoiceTemplateResponse> update(
            String invoiceTemplateId, InvoiceTemplateUpdateRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(invoiceTemplateId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Only invoice templates in the UNASSIGNED and DRAFT statuses can be deleted.
     */
    public CompletableFuture<Void> delete(String invoiceTemplateId) {
        return this.rawClient.delete(invoiceTemplateId).thenApply(response -> response.body());
    }

    /**
     * Only invoice templates in the UNASSIGNED and DRAFT statuses can be deleted.
     */
    public CompletableFuture<Void> delete(String invoiceTemplateId, RequestOptions requestOptions) {
        return this.rawClient.delete(invoiceTemplateId, requestOptions).thenApply(response -> response.body());
    }

    public AsyncLineItemClient lineItem() {
        return this.lineItemClient.get();
    }

    public AsyncApprovalClient approval() {
        return this.approvalClient.get();
    }

    public AsyncDocumentClient document() {
        return this.documentClient.get();
    }
}
