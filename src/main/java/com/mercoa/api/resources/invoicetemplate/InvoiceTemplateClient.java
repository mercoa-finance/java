/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetemplate;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.core.Suppliers;
import com.mercoa.api.resources.invoicetemplate.approval.ApprovalClient;
import com.mercoa.api.resources.invoicetemplate.document.DocumentClient;
import com.mercoa.api.resources.invoicetemplate.lineitem.LineItemClient;
import com.mercoa.api.resources.invoicetemplate.requests.GetAllInvoiceTemplatesRequest;
import com.mercoa.api.resources.invoicetypes.types.FindInvoiceTemplateResponse;
import com.mercoa.api.resources.invoicetypes.types.InvoiceTemplateCreationRequest;
import com.mercoa.api.resources.invoicetypes.types.InvoiceTemplateResponse;
import com.mercoa.api.resources.invoicetypes.types.InvoiceTemplateUpdateRequest;
import java.util.function.Supplier;

public class InvoiceTemplateClient {
    protected final ClientOptions clientOptions;

    private final RawInvoiceTemplateClient rawClient;

    protected final Supplier<LineItemClient> lineItemClient;

    protected final Supplier<ApprovalClient> approvalClient;

    protected final Supplier<DocumentClient> documentClient;

    public InvoiceTemplateClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawInvoiceTemplateClient(clientOptions);
        this.lineItemClient = Suppliers.memoize(() -> new LineItemClient(clientOptions));
        this.approvalClient = Suppliers.memoize(() -> new ApprovalClient(clientOptions));
        this.documentClient = Suppliers.memoize(() -> new DocumentClient(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawInvoiceTemplateClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Search invoice templates for all entities in the organization
     */
    public FindInvoiceTemplateResponse find() {
        return this.rawClient.find().body();
    }

    /**
     * Search invoice templates for all entities in the organization
     */
    public FindInvoiceTemplateResponse find(GetAllInvoiceTemplatesRequest request) {
        return this.rawClient.find(request).body();
    }

    /**
     * Search invoice templates for all entities in the organization
     */
    public FindInvoiceTemplateResponse find(GetAllInvoiceTemplatesRequest request, RequestOptions requestOptions) {
        return this.rawClient.find(request, requestOptions).body();
    }

    public InvoiceTemplateResponse create() {
        return this.rawClient.create().body();
    }

    public InvoiceTemplateResponse create(InvoiceTemplateCreationRequest request) {
        return this.rawClient.create(request).body();
    }

    public InvoiceTemplateResponse create(InvoiceTemplateCreationRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    public InvoiceTemplateResponse get(String invoiceTemplateId) {
        return this.rawClient.get(invoiceTemplateId).body();
    }

    public InvoiceTemplateResponse get(String invoiceTemplateId, RequestOptions requestOptions) {
        return this.rawClient.get(invoiceTemplateId, requestOptions).body();
    }

    public InvoiceTemplateResponse update(String invoiceTemplateId) {
        return this.rawClient.update(invoiceTemplateId).body();
    }

    public InvoiceTemplateResponse update(String invoiceTemplateId, InvoiceTemplateUpdateRequest request) {
        return this.rawClient.update(invoiceTemplateId, request).body();
    }

    public InvoiceTemplateResponse update(
            String invoiceTemplateId, InvoiceTemplateUpdateRequest request, RequestOptions requestOptions) {
        return this.rawClient.update(invoiceTemplateId, request, requestOptions).body();
    }

    /**
     * Only invoice templates in the UNASSIGNED and DRAFT statuses can be deleted.
     */
    public void delete(String invoiceTemplateId) {
        this.rawClient.delete(invoiceTemplateId).body();
    }

    /**
     * Only invoice templates in the UNASSIGNED and DRAFT statuses can be deleted.
     */
    public void delete(String invoiceTemplateId, RequestOptions requestOptions) {
        this.rawClient.delete(invoiceTemplateId, requestOptions).body();
    }

    public LineItemClient lineItem() {
        return this.lineItemClient.get();
    }

    public ApprovalClient approval() {
        return this.approvalClient.get();
    }

    public DocumentClient document() {
        return this.documentClient.get();
    }
}
