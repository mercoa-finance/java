/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetemplate.approval;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.invoicetypes.types.AddApproverRequest;
import com.mercoa.api.resources.invoicetypes.types.ApprovalRequest;
import java.util.concurrent.CompletableFuture;

public class AsyncApprovalClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawApprovalClient rawClient;

    public AsyncApprovalClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawApprovalClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawApprovalClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Adds an approver to the invoice template. Will select the first available approver slot that is not already filled and assign the approver to it. If no approver slots are available, an error will be returned. An explicit approver slot can be specified by setting the <code>approverSlot</code> field.
     */
    public CompletableFuture<Void> addApprover(String invoiceTemplateId, AddApproverRequest request) {
        return this.rawClient.addApprover(invoiceTemplateId, request).thenApply(response -> response.body());
    }

    /**
     * Adds an approver to the invoice template. Will select the first available approver slot that is not already filled and assign the approver to it. If no approver slots are available, an error will be returned. An explicit approver slot can be specified by setting the <code>approverSlot</code> field.
     */
    public CompletableFuture<Void> addApprover(
            String invoiceTemplateId, AddApproverRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .addApprover(invoiceTemplateId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> approve(String invoiceTemplateId, ApprovalRequest request) {
        return this.rawClient.approve(invoiceTemplateId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> approve(
            String invoiceTemplateId, ApprovalRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .approve(invoiceTemplateId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Void> reject(String invoiceTemplateId, ApprovalRequest request) {
        return this.rawClient.reject(invoiceTemplateId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> reject(
            String invoiceTemplateId, ApprovalRequest request, RequestOptions requestOptions) {
        return this.rawClient.reject(invoiceTemplateId, request, requestOptions).thenApply(response -> response.body());
    }
}
