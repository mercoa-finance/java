/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BnplInstallmentTotalPaid.Builder.class)
public final class BnplInstallmentTotalPaid {
    private final int principalBalance;

    private final int dueInterest;

    private final int totalLateFees;

    private final int feeAmount;

    private final Map<String, Object> additionalProperties;

    private BnplInstallmentTotalPaid(
            int principalBalance,
            int dueInterest,
            int totalLateFees,
            int feeAmount,
            Map<String, Object> additionalProperties) {
        this.principalBalance = principalBalance;
        this.dueInterest = dueInterest;
        this.totalLateFees = totalLateFees;
        this.feeAmount = feeAmount;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Total principal paid in cents
     */
    @JsonProperty("principalBalance")
    public int getPrincipalBalance() {
        return principalBalance;
    }

    /**
     * @return Total interest paid in cents
     */
    @JsonProperty("dueInterest")
    public int getDueInterest() {
        return dueInterest;
    }

    /**
     * @return Total late fees paid in cents
     */
    @JsonProperty("totalLateFees")
    public int getTotalLateFees() {
        return totalLateFees;
    }

    /**
     * @return Total fees paid in cents
     */
    @JsonProperty("feeAmount")
    public int getFeeAmount() {
        return feeAmount;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BnplInstallmentTotalPaid && equalTo((BnplInstallmentTotalPaid) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BnplInstallmentTotalPaid other) {
        return principalBalance == other.principalBalance
                && dueInterest == other.dueInterest
                && totalLateFees == other.totalLateFees
                && feeAmount == other.feeAmount;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.principalBalance, this.dueInterest, this.totalLateFees, this.feeAmount);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PrincipalBalanceStage builder() {
        return new Builder();
    }

    public interface PrincipalBalanceStage {
        /**
         * <p>Total principal paid in cents</p>
         */
        DueInterestStage principalBalance(int principalBalance);

        Builder from(BnplInstallmentTotalPaid other);
    }

    public interface DueInterestStage {
        /**
         * <p>Total interest paid in cents</p>
         */
        TotalLateFeesStage dueInterest(int dueInterest);
    }

    public interface TotalLateFeesStage {
        /**
         * <p>Total late fees paid in cents</p>
         */
        FeeAmountStage totalLateFees(int totalLateFees);
    }

    public interface FeeAmountStage {
        /**
         * <p>Total fees paid in cents</p>
         */
        _FinalStage feeAmount(int feeAmount);
    }

    public interface _FinalStage {
        BnplInstallmentTotalPaid build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements PrincipalBalanceStage, DueInterestStage, TotalLateFeesStage, FeeAmountStage, _FinalStage {
        private int principalBalance;

        private int dueInterest;

        private int totalLateFees;

        private int feeAmount;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BnplInstallmentTotalPaid other) {
            principalBalance(other.getPrincipalBalance());
            dueInterest(other.getDueInterest());
            totalLateFees(other.getTotalLateFees());
            feeAmount(other.getFeeAmount());
            return this;
        }

        /**
         * <p>Total principal paid in cents</p>
         * <p>Total principal paid in cents</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("principalBalance")
        public DueInterestStage principalBalance(int principalBalance) {
            this.principalBalance = principalBalance;
            return this;
        }

        /**
         * <p>Total interest paid in cents</p>
         * <p>Total interest paid in cents</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("dueInterest")
        public TotalLateFeesStage dueInterest(int dueInterest) {
            this.dueInterest = dueInterest;
            return this;
        }

        /**
         * <p>Total late fees paid in cents</p>
         * <p>Total late fees paid in cents</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("totalLateFees")
        public FeeAmountStage totalLateFees(int totalLateFees) {
            this.totalLateFees = totalLateFees;
            return this;
        }

        /**
         * <p>Total fees paid in cents</p>
         * <p>Total fees paid in cents</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("feeAmount")
        public _FinalStage feeAmount(int feeAmount) {
            this.feeAmount = feeAmount;
            return this;
        }

        @java.lang.Override
        public BnplInstallmentTotalPaid build() {
            return new BnplInstallmentTotalPaid(
                    principalBalance, dueInterest, totalLateFees, feeAmount, additionalProperties);
        }
    }
}
