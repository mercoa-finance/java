/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AddApproverRequest.Builder.class)
public final class AddApproverRequest {
    private final Optional<String> approvalSlotId;

    private final String userId;

    private final Map<String, Object> additionalProperties;

    private AddApproverRequest(
            Optional<String> approvalSlotId, String userId, Map<String, Object> additionalProperties) {
        this.approvalSlotId = approvalSlotId;
        this.userId = userId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The identifier for the approval slot this user is assigned to.
     */
    @JsonProperty("approvalSlotId")
    public Optional<String> getApprovalSlotId() {
        return approvalSlotId;
    }

    @JsonProperty("userId")
    public String getUserId() {
        return userId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AddApproverRequest && equalTo((AddApproverRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AddApproverRequest other) {
        return approvalSlotId.equals(other.approvalSlotId) && userId.equals(other.userId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.approvalSlotId, this.userId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static UserIdStage builder() {
        return new Builder();
    }

    public interface UserIdStage {
        _FinalStage userId(String userId);

        Builder from(AddApproverRequest other);
    }

    public interface _FinalStage {
        AddApproverRequest build();

        _FinalStage approvalSlotId(Optional<String> approvalSlotId);

        _FinalStage approvalSlotId(String approvalSlotId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements UserIdStage, _FinalStage {
        private String userId;

        private Optional<String> approvalSlotId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AddApproverRequest other) {
            approvalSlotId(other.getApprovalSlotId());
            userId(other.getUserId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("userId")
        public _FinalStage userId(String userId) {
            this.userId = userId;
            return this;
        }

        /**
         * <p>The identifier for the approval slot this user is assigned to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage approvalSlotId(String approvalSlotId) {
            this.approvalSlotId = Optional.ofNullable(approvalSlotId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "approvalSlotId", nulls = Nulls.SKIP)
        public _FinalStage approvalSlotId(Optional<String> approvalSlotId) {
            this.approvalSlotId = approvalSlotId;
            return this;
        }

        @java.lang.Override
        public AddApproverRequest build() {
            return new AddApproverRequest(approvalSlotId, userId, additionalProperties);
        }
    }
}
