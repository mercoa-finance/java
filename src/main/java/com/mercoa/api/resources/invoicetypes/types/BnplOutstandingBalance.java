/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BnplOutstandingBalance.Builder.class)
public final class BnplOutstandingBalance {
    private final int principalBalance;

    private final int feeBalance;

    private final int totalBalance;

    private final int lateFeeBalance;

    private final Map<String, Object> additionalProperties;

    private BnplOutstandingBalance(
            int principalBalance,
            int feeBalance,
            int totalBalance,
            int lateFeeBalance,
            Map<String, Object> additionalProperties) {
        this.principalBalance = principalBalance;
        this.feeBalance = feeBalance;
        this.totalBalance = totalBalance;
        this.lateFeeBalance = lateFeeBalance;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Outstanding principal balance in cents
     */
    @JsonProperty("principalBalance")
    public int getPrincipalBalance() {
        return principalBalance;
    }

    /**
     * @return Outstanding fee balance in cents
     */
    @JsonProperty("feeBalance")
    public int getFeeBalance() {
        return feeBalance;
    }

    /**
     * @return Total outstanding balance in cents
     */
    @JsonProperty("totalBalance")
    public int getTotalBalance() {
        return totalBalance;
    }

    /**
     * @return Outstanding late fee balance in cents
     */
    @JsonProperty("lateFeeBalance")
    public int getLateFeeBalance() {
        return lateFeeBalance;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BnplOutstandingBalance && equalTo((BnplOutstandingBalance) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BnplOutstandingBalance other) {
        return principalBalance == other.principalBalance
                && feeBalance == other.feeBalance
                && totalBalance == other.totalBalance
                && lateFeeBalance == other.lateFeeBalance;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.principalBalance, this.feeBalance, this.totalBalance, this.lateFeeBalance);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PrincipalBalanceStage builder() {
        return new Builder();
    }

    public interface PrincipalBalanceStage {
        /**
         * <p>Outstanding principal balance in cents</p>
         */
        FeeBalanceStage principalBalance(int principalBalance);

        Builder from(BnplOutstandingBalance other);
    }

    public interface FeeBalanceStage {
        /**
         * <p>Outstanding fee balance in cents</p>
         */
        TotalBalanceStage feeBalance(int feeBalance);
    }

    public interface TotalBalanceStage {
        /**
         * <p>Total outstanding balance in cents</p>
         */
        LateFeeBalanceStage totalBalance(int totalBalance);
    }

    public interface LateFeeBalanceStage {
        /**
         * <p>Outstanding late fee balance in cents</p>
         */
        _FinalStage lateFeeBalance(int lateFeeBalance);
    }

    public interface _FinalStage {
        BnplOutstandingBalance build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements PrincipalBalanceStage, FeeBalanceStage, TotalBalanceStage, LateFeeBalanceStage, _FinalStage {
        private int principalBalance;

        private int feeBalance;

        private int totalBalance;

        private int lateFeeBalance;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BnplOutstandingBalance other) {
            principalBalance(other.getPrincipalBalance());
            feeBalance(other.getFeeBalance());
            totalBalance(other.getTotalBalance());
            lateFeeBalance(other.getLateFeeBalance());
            return this;
        }

        /**
         * <p>Outstanding principal balance in cents</p>
         * <p>Outstanding principal balance in cents</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("principalBalance")
        public FeeBalanceStage principalBalance(int principalBalance) {
            this.principalBalance = principalBalance;
            return this;
        }

        /**
         * <p>Outstanding fee balance in cents</p>
         * <p>Outstanding fee balance in cents</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("feeBalance")
        public TotalBalanceStage feeBalance(int feeBalance) {
            this.feeBalance = feeBalance;
            return this;
        }

        /**
         * <p>Total outstanding balance in cents</p>
         * <p>Total outstanding balance in cents</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("totalBalance")
        public LateFeeBalanceStage totalBalance(int totalBalance) {
            this.totalBalance = totalBalance;
            return this;
        }

        /**
         * <p>Outstanding late fee balance in cents</p>
         * <p>Outstanding late fee balance in cents</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("lateFeeBalance")
        public _FinalStage lateFeeBalance(int lateFeeBalance) {
            this.lateFeeBalance = lateFeeBalance;
            return this;
        }

        @java.lang.Override
        public BnplOutstandingBalance build() {
            return new BnplOutstandingBalance(
                    principalBalance, feeBalance, totalBalance, lateFeeBalance, additionalProperties);
        }
    }
}
