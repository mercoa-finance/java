/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ApprovalRequest.Builder.class)
public final class ApprovalRequest implements IApprovalRequest {
    private final Optional<String> text;

    private final String userId;

    private final Map<String, Object> additionalProperties;

    private ApprovalRequest(Optional<String> text, String userId, Map<String, Object> additionalProperties) {
        this.text = text;
        this.userId = userId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Comment associated with this approval action.
     */
    @JsonProperty("text")
    @java.lang.Override
    public Optional<String> getText() {
        return text;
    }

    /**
     * @return The ID or the Foreign ID of the user
     */
    @JsonProperty("userId")
    @java.lang.Override
    public String getUserId() {
        return userId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ApprovalRequest && equalTo((ApprovalRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ApprovalRequest other) {
        return text.equals(other.text) && userId.equals(other.userId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.text, this.userId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static UserIdStage builder() {
        return new Builder();
    }

    public interface UserIdStage {
        /**
         * <p>The ID or the Foreign ID of the user</p>
         */
        _FinalStage userId(@NotNull String userId);

        Builder from(ApprovalRequest other);
    }

    public interface _FinalStage {
        ApprovalRequest build();

        /**
         * <p>Comment associated with this approval action.</p>
         */
        _FinalStage text(Optional<String> text);

        _FinalStage text(String text);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements UserIdStage, _FinalStage {
        private String userId;

        private Optional<String> text = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ApprovalRequest other) {
            text(other.getText());
            userId(other.getUserId());
            return this;
        }

        /**
         * <p>The ID or the Foreign ID of the user</p>
         * <p>The ID or the Foreign ID of the user</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("userId")
        public _FinalStage userId(@NotNull String userId) {
            this.userId = Objects.requireNonNull(userId, "userId must not be null");
            return this;
        }

        /**
         * <p>Comment associated with this approval action.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage text(String text) {
            this.text = Optional.ofNullable(text);
            return this;
        }

        /**
         * <p>Comment associated with this approval action.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "text", nulls = Nulls.SKIP)
        public _FinalStage text(Optional<String> text) {
            this.text = text;
            return this;
        }

        @java.lang.Override
        public ApprovalRequest build() {
            return new ApprovalRequest(text, userId, additionalProperties);
        }
    }
}
