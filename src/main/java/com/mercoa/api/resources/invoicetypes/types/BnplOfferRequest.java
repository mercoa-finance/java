/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BnplOfferRequest.Builder.class)
public final class BnplOfferRequest {
    private final BnplCadence cadence;

    private final String installmentsStartDate;

    private final int numberOfInstallments;

    private final BnplDayOfWeek paymentDayOfWeek;

    private final String downPaymentDueDate;

    private final Map<String, Object> additionalProperties;

    private BnplOfferRequest(
            BnplCadence cadence,
            String installmentsStartDate,
            int numberOfInstallments,
            BnplDayOfWeek paymentDayOfWeek,
            String downPaymentDueDate,
            Map<String, Object> additionalProperties) {
        this.cadence = cadence;
        this.installmentsStartDate = installmentsStartDate;
        this.numberOfInstallments = numberOfInstallments;
        this.paymentDayOfWeek = paymentDayOfWeek;
        this.downPaymentDueDate = downPaymentDueDate;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The payment cadence for the BNPL offer
     */
    @JsonProperty("cadence")
    public BnplCadence getCadence() {
        return cadence;
    }

    /**
     * @return The start date for installments in YYYY-MM-DD format
     */
    @JsonProperty("installmentsStartDate")
    public String getInstallmentsStartDate() {
        return installmentsStartDate;
    }

    /**
     * @return The number of installments
     */
    @JsonProperty("numberOfInstallments")
    public int getNumberOfInstallments() {
        return numberOfInstallments;
    }

    /**
     * @return The day of the week for payments
     */
    @JsonProperty("paymentDayOfWeek")
    public BnplDayOfWeek getPaymentDayOfWeek() {
        return paymentDayOfWeek;
    }

    /**
     * @return The due date for the down payment in YYYY-MM-DD format
     */
    @JsonProperty("downPaymentDueDate")
    public String getDownPaymentDueDate() {
        return downPaymentDueDate;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BnplOfferRequest && equalTo((BnplOfferRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BnplOfferRequest other) {
        return cadence.equals(other.cadence)
                && installmentsStartDate.equals(other.installmentsStartDate)
                && numberOfInstallments == other.numberOfInstallments
                && paymentDayOfWeek.equals(other.paymentDayOfWeek)
                && downPaymentDueDate.equals(other.downPaymentDueDate);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.cadence,
                this.installmentsStartDate,
                this.numberOfInstallments,
                this.paymentDayOfWeek,
                this.downPaymentDueDate);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CadenceStage builder() {
        return new Builder();
    }

    public interface CadenceStage {
        /**
         * <p>The payment cadence for the BNPL offer</p>
         */
        InstallmentsStartDateStage cadence(@NotNull BnplCadence cadence);

        Builder from(BnplOfferRequest other);
    }

    public interface InstallmentsStartDateStage {
        /**
         * <p>The start date for installments in YYYY-MM-DD format</p>
         */
        NumberOfInstallmentsStage installmentsStartDate(@NotNull String installmentsStartDate);
    }

    public interface NumberOfInstallmentsStage {
        /**
         * <p>The number of installments</p>
         */
        PaymentDayOfWeekStage numberOfInstallments(int numberOfInstallments);
    }

    public interface PaymentDayOfWeekStage {
        /**
         * <p>The day of the week for payments</p>
         */
        DownPaymentDueDateStage paymentDayOfWeek(@NotNull BnplDayOfWeek paymentDayOfWeek);
    }

    public interface DownPaymentDueDateStage {
        /**
         * <p>The due date for the down payment in YYYY-MM-DD format</p>
         */
        _FinalStage downPaymentDueDate(@NotNull String downPaymentDueDate);
    }

    public interface _FinalStage {
        BnplOfferRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements CadenceStage,
                    InstallmentsStartDateStage,
                    NumberOfInstallmentsStage,
                    PaymentDayOfWeekStage,
                    DownPaymentDueDateStage,
                    _FinalStage {
        private BnplCadence cadence;

        private String installmentsStartDate;

        private int numberOfInstallments;

        private BnplDayOfWeek paymentDayOfWeek;

        private String downPaymentDueDate;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BnplOfferRequest other) {
            cadence(other.getCadence());
            installmentsStartDate(other.getInstallmentsStartDate());
            numberOfInstallments(other.getNumberOfInstallments());
            paymentDayOfWeek(other.getPaymentDayOfWeek());
            downPaymentDueDate(other.getDownPaymentDueDate());
            return this;
        }

        /**
         * <p>The payment cadence for the BNPL offer</p>
         * <p>The payment cadence for the BNPL offer</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("cadence")
        public InstallmentsStartDateStage cadence(@NotNull BnplCadence cadence) {
            this.cadence = Objects.requireNonNull(cadence, "cadence must not be null");
            return this;
        }

        /**
         * <p>The start date for installments in YYYY-MM-DD format</p>
         * <p>The start date for installments in YYYY-MM-DD format</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("installmentsStartDate")
        public NumberOfInstallmentsStage installmentsStartDate(@NotNull String installmentsStartDate) {
            this.installmentsStartDate =
                    Objects.requireNonNull(installmentsStartDate, "installmentsStartDate must not be null");
            return this;
        }

        /**
         * <p>The number of installments</p>
         * <p>The number of installments</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("numberOfInstallments")
        public PaymentDayOfWeekStage numberOfInstallments(int numberOfInstallments) {
            this.numberOfInstallments = numberOfInstallments;
            return this;
        }

        /**
         * <p>The day of the week for payments</p>
         * <p>The day of the week for payments</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("paymentDayOfWeek")
        public DownPaymentDueDateStage paymentDayOfWeek(@NotNull BnplDayOfWeek paymentDayOfWeek) {
            this.paymentDayOfWeek = Objects.requireNonNull(paymentDayOfWeek, "paymentDayOfWeek must not be null");
            return this;
        }

        /**
         * <p>The due date for the down payment in YYYY-MM-DD format</p>
         * <p>The due date for the down payment in YYYY-MM-DD format</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("downPaymentDueDate")
        public _FinalStage downPaymentDueDate(@NotNull String downPaymentDueDate) {
            this.downPaymentDueDate = Objects.requireNonNull(downPaymentDueDate, "downPaymentDueDate must not be null");
            return this;
        }

        @java.lang.Override
        public BnplOfferRequest build() {
            return new BnplOfferRequest(
                    cadence,
                    installmentsStartDate,
                    numberOfInstallments,
                    paymentDayOfWeek,
                    downPaymentDueDate,
                    additionalProperties);
        }
    }
}
