/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BankAccountPaymentDestinationOptions.Builder.class)
public final class BankAccountPaymentDestinationOptions {
    private final Optional<BankDeliveryMethod> delivery;

    private final Optional<String> description;

    private final Map<String, Object> additionalProperties;

    private BankAccountPaymentDestinationOptions(
            Optional<BankDeliveryMethod> delivery,
            Optional<String> description,
            Map<String, Object> additionalProperties) {
        this.delivery = delivery;
        this.description = description;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Delivery method for ACH payments. Defaults to ACH_SAME_DAY.
     */
    @JsonProperty("delivery")
    public Optional<BankDeliveryMethod> getDelivery() {
        return delivery;
    }

    /**
     * @return ACH Statement Description.
     * By default, this will be 'AP' followed by the first 8 characters of the invoice ID (for a single invoice) or the first 8 characters of the transaction ID (for a batch payment).
     * Must be at least 4 characters and no more than 10 characters, and follow this regex pattern <code>^[a-zA-Z0-9\-#.$&amp;* ]{4,10}$</code>
     */
    @JsonProperty("description")
    public Optional<String> getDescription() {
        return description;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BankAccountPaymentDestinationOptions
                && equalTo((BankAccountPaymentDestinationOptions) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BankAccountPaymentDestinationOptions other) {
        return delivery.equals(other.delivery) && description.equals(other.description);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.delivery, this.description);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<BankDeliveryMethod> delivery = Optional.empty();

        private Optional<String> description = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BankAccountPaymentDestinationOptions other) {
            delivery(other.getDelivery());
            description(other.getDescription());
            return this;
        }

        /**
         * <p>Delivery method for ACH payments. Defaults to ACH_SAME_DAY.</p>
         */
        @JsonSetter(value = "delivery", nulls = Nulls.SKIP)
        public Builder delivery(Optional<BankDeliveryMethod> delivery) {
            this.delivery = delivery;
            return this;
        }

        public Builder delivery(BankDeliveryMethod delivery) {
            this.delivery = Optional.ofNullable(delivery);
            return this;
        }

        /**
         * <p>ACH Statement Description.
         * By default, this will be 'AP' followed by the first 8 characters of the invoice ID (for a single invoice) or the first 8 characters of the transaction ID (for a batch payment).
         * Must be at least 4 characters and no more than 10 characters, and follow this regex pattern <code>^[a-zA-Z0-9\-#.$&amp;* ]{4,10}$</code></p>
         */
        @JsonSetter(value = "description", nulls = Nulls.SKIP)
        public Builder description(Optional<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(String description) {
            this.description = Optional.ofNullable(description);
            return this;
        }

        public BankAccountPaymentDestinationOptions build() {
            return new BankAccountPaymentDestinationOptions(delivery, description, additionalProperties);
        }
    }
}
