/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = InvoiceFeesRequest.Builder.class)
public final class InvoiceFeesRequest {
    private final double sourcePlatformMarkupFee;

    private final double destinationPlatformMarkupFee;

    private final Map<String, Object> additionalProperties;

    private InvoiceFeesRequest(
            double sourcePlatformMarkupFee,
            double destinationPlatformMarkupFee,
            Map<String, Object> additionalProperties) {
        this.sourcePlatformMarkupFee = sourcePlatformMarkupFee;
        this.destinationPlatformMarkupFee = destinationPlatformMarkupFee;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Fee charged to the payer (C2).
     */
    @JsonProperty("sourcePlatformMarkupFee")
    public double getSourcePlatformMarkupFee() {
        return sourcePlatformMarkupFee;
    }

    /**
     * @return Fee charged to the payee (C3).
     */
    @JsonProperty("destinationPlatformMarkupFee")
    public double getDestinationPlatformMarkupFee() {
        return destinationPlatformMarkupFee;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InvoiceFeesRequest && equalTo((InvoiceFeesRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(InvoiceFeesRequest other) {
        return sourcePlatformMarkupFee == other.sourcePlatformMarkupFee
                && destinationPlatformMarkupFee == other.destinationPlatformMarkupFee;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.sourcePlatformMarkupFee, this.destinationPlatformMarkupFee);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SourcePlatformMarkupFeeStage builder() {
        return new Builder();
    }

    public interface SourcePlatformMarkupFeeStage {
        DestinationPlatformMarkupFeeStage sourcePlatformMarkupFee(double sourcePlatformMarkupFee);

        Builder from(InvoiceFeesRequest other);
    }

    public interface DestinationPlatformMarkupFeeStage {
        _FinalStage destinationPlatformMarkupFee(double destinationPlatformMarkupFee);
    }

    public interface _FinalStage {
        InvoiceFeesRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements SourcePlatformMarkupFeeStage, DestinationPlatformMarkupFeeStage, _FinalStage {
        private double sourcePlatformMarkupFee;

        private double destinationPlatformMarkupFee;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(InvoiceFeesRequest other) {
            sourcePlatformMarkupFee(other.getSourcePlatformMarkupFee());
            destinationPlatformMarkupFee(other.getDestinationPlatformMarkupFee());
            return this;
        }

        /**
         * <p>Fee charged to the payer (C2).</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("sourcePlatformMarkupFee")
        public DestinationPlatformMarkupFeeStage sourcePlatformMarkupFee(double sourcePlatformMarkupFee) {
            this.sourcePlatformMarkupFee = sourcePlatformMarkupFee;
            return this;
        }

        /**
         * <p>Fee charged to the payee (C3).</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("destinationPlatformMarkupFee")
        public _FinalStage destinationPlatformMarkupFee(double destinationPlatformMarkupFee) {
            this.destinationPlatformMarkupFee = destinationPlatformMarkupFee;
            return this;
        }

        @java.lang.Override
        public InvoiceFeesRequest build() {
            return new InvoiceFeesRequest(sourcePlatformMarkupFee, destinationPlatformMarkupFee, additionalProperties);
        }
    }
}
