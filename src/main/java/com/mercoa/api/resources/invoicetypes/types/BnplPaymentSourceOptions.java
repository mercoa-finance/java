/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BnplPaymentSourceOptions.Builder.class)
public final class BnplPaymentSourceOptions {
    private final String installmentsStartDate;

    private final int defermentWeeks;

    private final boolean acceptedTerms;

    private final Optional<String> loanId;

    private final Optional<String> downpaymentId;

    private final Map<String, Object> additionalProperties;

    private BnplPaymentSourceOptions(
            String installmentsStartDate,
            int defermentWeeks,
            boolean acceptedTerms,
            Optional<String> loanId,
            Optional<String> downpaymentId,
            Map<String, Object> additionalProperties) {
        this.installmentsStartDate = installmentsStartDate;
        this.defermentWeeks = defermentWeeks;
        this.acceptedTerms = acceptedTerms;
        this.loanId = loanId;
        this.downpaymentId = downpaymentId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The start date for installments in YYYY-MM-DD format
     */
    @JsonProperty("installmentsStartDate")
    public String getInstallmentsStartDate() {
        return installmentsStartDate;
    }

    /**
     * @return The number of weeks to defer repayment
     */
    @JsonProperty("defermentWeeks")
    public int getDefermentWeeks() {
        return defermentWeeks;
    }

    /**
     * @return Whether the user has agreed to the BNPL terms
     */
    @JsonProperty("acceptedTerms")
    public boolean getAcceptedTerms() {
        return acceptedTerms;
    }

    /**
     * @return The ID of the loan to use for the BNPL payment.
     */
    @JsonProperty("loanId")
    public Optional<String> getLoanId() {
        return loanId;
    }

    /**
     * @return The ID of the downpayment to use for the BNPL payment.
     */
    @JsonProperty("downpaymentId")
    public Optional<String> getDownpaymentId() {
        return downpaymentId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BnplPaymentSourceOptions && equalTo((BnplPaymentSourceOptions) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BnplPaymentSourceOptions other) {
        return installmentsStartDate.equals(other.installmentsStartDate)
                && defermentWeeks == other.defermentWeeks
                && acceptedTerms == other.acceptedTerms
                && loanId.equals(other.loanId)
                && downpaymentId.equals(other.downpaymentId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.installmentsStartDate, this.defermentWeeks, this.acceptedTerms, this.loanId, this.downpaymentId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static InstallmentsStartDateStage builder() {
        return new Builder();
    }

    public interface InstallmentsStartDateStage {
        /**
         * <p>The start date for installments in YYYY-MM-DD format</p>
         */
        DefermentWeeksStage installmentsStartDate(@NotNull String installmentsStartDate);

        Builder from(BnplPaymentSourceOptions other);
    }

    public interface DefermentWeeksStage {
        /**
         * <p>The number of weeks to defer repayment</p>
         */
        AcceptedTermsStage defermentWeeks(int defermentWeeks);
    }

    public interface AcceptedTermsStage {
        /**
         * <p>Whether the user has agreed to the BNPL terms</p>
         */
        _FinalStage acceptedTerms(boolean acceptedTerms);
    }

    public interface _FinalStage {
        BnplPaymentSourceOptions build();

        /**
         * <p>The ID of the loan to use for the BNPL payment.</p>
         */
        _FinalStage loanId(Optional<String> loanId);

        _FinalStage loanId(String loanId);

        /**
         * <p>The ID of the downpayment to use for the BNPL payment.</p>
         */
        _FinalStage downpaymentId(Optional<String> downpaymentId);

        _FinalStage downpaymentId(String downpaymentId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements InstallmentsStartDateStage, DefermentWeeksStage, AcceptedTermsStage, _FinalStage {
        private String installmentsStartDate;

        private int defermentWeeks;

        private boolean acceptedTerms;

        private Optional<String> downpaymentId = Optional.empty();

        private Optional<String> loanId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BnplPaymentSourceOptions other) {
            installmentsStartDate(other.getInstallmentsStartDate());
            defermentWeeks(other.getDefermentWeeks());
            acceptedTerms(other.getAcceptedTerms());
            loanId(other.getLoanId());
            downpaymentId(other.getDownpaymentId());
            return this;
        }

        /**
         * <p>The start date for installments in YYYY-MM-DD format</p>
         * <p>The start date for installments in YYYY-MM-DD format</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("installmentsStartDate")
        public DefermentWeeksStage installmentsStartDate(@NotNull String installmentsStartDate) {
            this.installmentsStartDate =
                    Objects.requireNonNull(installmentsStartDate, "installmentsStartDate must not be null");
            return this;
        }

        /**
         * <p>The number of weeks to defer repayment</p>
         * <p>The number of weeks to defer repayment</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("defermentWeeks")
        public AcceptedTermsStage defermentWeeks(int defermentWeeks) {
            this.defermentWeeks = defermentWeeks;
            return this;
        }

        /**
         * <p>Whether the user has agreed to the BNPL terms</p>
         * <p>Whether the user has agreed to the BNPL terms</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("acceptedTerms")
        public _FinalStage acceptedTerms(boolean acceptedTerms) {
            this.acceptedTerms = acceptedTerms;
            return this;
        }

        /**
         * <p>The ID of the downpayment to use for the BNPL payment.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage downpaymentId(String downpaymentId) {
            this.downpaymentId = Optional.ofNullable(downpaymentId);
            return this;
        }

        /**
         * <p>The ID of the downpayment to use for the BNPL payment.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "downpaymentId", nulls = Nulls.SKIP)
        public _FinalStage downpaymentId(Optional<String> downpaymentId) {
            this.downpaymentId = downpaymentId;
            return this;
        }

        /**
         * <p>The ID of the loan to use for the BNPL payment.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage loanId(String loanId) {
            this.loanId = Optional.ofNullable(loanId);
            return this;
        }

        /**
         * <p>The ID of the loan to use for the BNPL payment.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "loanId", nulls = Nulls.SKIP)
        public _FinalStage loanId(Optional<String> loanId) {
            this.loanId = loanId;
            return this;
        }

        @java.lang.Override
        public BnplPaymentSourceOptions build() {
            return new BnplPaymentSourceOptions(
                    installmentsStartDate, defermentWeeks, acceptedTerms, loanId, downpaymentId, additionalProperties);
        }
    }
}
