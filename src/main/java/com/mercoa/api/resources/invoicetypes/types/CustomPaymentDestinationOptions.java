/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.invoicetypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CustomPaymentDestinationOptions.Builder.class)
public final class CustomPaymentDestinationOptions {
    private final Optional<Map<String, String>> dynamicUrls;

    private final Map<String, Object> additionalProperties;

    private CustomPaymentDestinationOptions(
            Optional<Map<String, String>> dynamicUrls, Map<String, Object> additionalProperties) {
        this.dynamicUrls = dynamicUrls;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Map of field names to dynamic URL values that will be used for dynamicUrl fields in custom payment method schemas
     */
    @JsonProperty("dynamicUrls")
    public Optional<Map<String, String>> getDynamicUrls() {
        return dynamicUrls;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CustomPaymentDestinationOptions && equalTo((CustomPaymentDestinationOptions) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CustomPaymentDestinationOptions other) {
        return dynamicUrls.equals(other.dynamicUrls);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.dynamicUrls);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Map<String, String>> dynamicUrls = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(CustomPaymentDestinationOptions other) {
            dynamicUrls(other.getDynamicUrls());
            return this;
        }

        /**
         * <p>Map of field names to dynamic URL values that will be used for dynamicUrl fields in custom payment method schemas</p>
         */
        @JsonSetter(value = "dynamicUrls", nulls = Nulls.SKIP)
        public Builder dynamicUrls(Optional<Map<String, String>> dynamicUrls) {
            this.dynamicUrls = dynamicUrls;
            return this;
        }

        public Builder dynamicUrls(Map<String, String> dynamicUrls) {
            this.dynamicUrls = Optional.ofNullable(dynamicUrls);
            return this;
        }

        public CustomPaymentDestinationOptions build() {
            return new CustomPaymentDestinationOptions(dynamicUrls, additionalProperties);
        }
    }
}
