/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.paymentgateway.validate;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.commons.types.PubSubRequest;
import com.mercoa.api.resources.commons.types.PubSubResponse;
import com.mercoa.api.resources.paymentgateway.validate.requests.SearchPaymentGatewayValidationJobsRequest;
import com.mercoa.api.resources.paymentgatewaytypes.types.SearchPaymentGatewayValidationJobsResponse;
import com.mercoa.api.resources.paymentgatewaytypes.types.TriggerPaymentGatewayValidationRequest;
import com.mercoa.api.resources.paymentgatewaytypes.types.TriggerPaymentGatewayValidationResponse;
import com.mercoa.api.resources.paymentgatewaytypes.types.ValidatePaymentGatewayRequest;
import com.mercoa.api.resources.paymentgatewaytypes.types.ValidatePaymentGatewayResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncValidateClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawValidateClient rawClient;

    public AsyncValidateClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawValidateClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawValidateClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Search payment gateway validation jobs
     */
    public CompletableFuture<SearchPaymentGatewayValidationJobsResponse> find() {
        return this.rawClient.find().thenApply(response -> response.body());
    }

    /**
     * Search payment gateway validation jobs
     */
    public CompletableFuture<SearchPaymentGatewayValidationJobsResponse> find(
            SearchPaymentGatewayValidationJobsRequest request) {
        return this.rawClient.find(request).thenApply(response -> response.body());
    }

    /**
     * Search payment gateway validation jobs
     */
    public CompletableFuture<SearchPaymentGatewayValidationJobsResponse> find(
            SearchPaymentGatewayValidationJobsRequest request, RequestOptions requestOptions) {
        return this.rawClient.find(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Create a job to validate a payment gateway
     */
    public CompletableFuture<ValidatePaymentGatewayResponse> create(ValidatePaymentGatewayRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    /**
     * Create a job to validate a payment gateway
     */
    public CompletableFuture<ValidatePaymentGatewayResponse> create(
            ValidatePaymentGatewayRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get the status of a payment gateway validation job
     */
    public CompletableFuture<ValidatePaymentGatewayResponse> get(String jobId) {
        return this.rawClient.get(jobId).thenApply(response -> response.body());
    }

    /**
     * Get the status of a payment gateway validation job
     */
    public CompletableFuture<ValidatePaymentGatewayResponse> get(String jobId, RequestOptions requestOptions) {
        return this.rawClient.get(jobId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Trigger a payment gateway validation job
     */
    public CompletableFuture<TriggerPaymentGatewayValidationResponse> trigger(
            TriggerPaymentGatewayValidationRequest request) {
        return this.rawClient.trigger(request).thenApply(response -> response.body());
    }

    /**
     * Trigger a payment gateway validation job
     */
    public CompletableFuture<TriggerPaymentGatewayValidationResponse> trigger(
            TriggerPaymentGatewayValidationRequest request, RequestOptions requestOptions) {
        return this.rawClient.trigger(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Internal endpoint for processing validation jobs via Pub/Sub messages
     */
    public CompletableFuture<PubSubResponse> processPubsub() {
        return this.rawClient.processPubsub().thenApply(response -> response.body());
    }

    /**
     * Internal endpoint for processing validation jobs via Pub/Sub messages
     */
    public CompletableFuture<PubSubResponse> processPubsub(PubSubRequest request) {
        return this.rawClient.processPubsub(request).thenApply(response -> response.body());
    }

    /**
     * Internal endpoint for processing validation jobs via Pub/Sub messages
     */
    public CompletableFuture<PubSubResponse> processPubsub(PubSubRequest request, RequestOptions requestOptions) {
        return this.rawClient.processPubsub(request, requestOptions).thenApply(response -> response.body());
    }
}
