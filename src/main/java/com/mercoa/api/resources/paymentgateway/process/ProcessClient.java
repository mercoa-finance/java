/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.paymentgateway.process;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.commons.types.PubSubRequest;
import com.mercoa.api.resources.commons.types.PubSubResponse;
import com.mercoa.api.resources.paymentgateway.process.requests.SearchPaymentGatewayProcessJobsRequest;
import com.mercoa.api.resources.paymentgatewaytypes.types.ProcessCardEtlRequest;
import com.mercoa.api.resources.paymentgatewaytypes.types.ProcessCardEtlResponse;
import com.mercoa.api.resources.paymentgatewaytypes.types.ProcessDataExtractionRequest;
import com.mercoa.api.resources.paymentgatewaytypes.types.ProcessDataExtractionResponse;
import com.mercoa.api.resources.paymentgatewaytypes.types.ProcessPaymentGatewayRequest;
import com.mercoa.api.resources.paymentgatewaytypes.types.ProcessPaymentGatewayResponse;
import com.mercoa.api.resources.paymentgatewaytypes.types.SearchPaymentGatewayProcessJobsResponse;
import com.mercoa.api.resources.paymentgatewaytypes.types.TriggerPaymentGatewayProcessRequest;
import com.mercoa.api.resources.paymentgatewaytypes.types.TriggerPaymentGatewayProcessResponse;
import java.util.List;

public class ProcessClient {
    protected final ClientOptions clientOptions;

    private final RawProcessClient rawClient;

    public ProcessClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawProcessClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawProcessClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Search payment gateway process jobs
     */
    public SearchPaymentGatewayProcessJobsResponse find() {
        return this.rawClient.find().body();
    }

    /**
     * Search payment gateway process jobs
     */
    public SearchPaymentGatewayProcessJobsResponse find(SearchPaymentGatewayProcessJobsRequest request) {
        return this.rawClient.find(request).body();
    }

    /**
     * Search payment gateway process jobs
     */
    public SearchPaymentGatewayProcessJobsResponse find(
            SearchPaymentGatewayProcessJobsRequest request, RequestOptions requestOptions) {
        return this.rawClient.find(request, requestOptions).body();
    }

    /**
     * Create a job to process a payment through a payment gateway
     */
    public ProcessPaymentGatewayResponse create(ProcessPaymentGatewayRequest request) {
        return this.rawClient.create(request).body();
    }

    /**
     * Create a job to process a payment through a payment gateway
     */
    public ProcessPaymentGatewayResponse create(ProcessPaymentGatewayRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    /**
     * Get the status of a payment gateway processing job
     */
    public ProcessPaymentGatewayResponse get(String jobId) {
        return this.rawClient.get(jobId).body();
    }

    /**
     * Get the status of a payment gateway processing job
     */
    public ProcessPaymentGatewayResponse get(String jobId, RequestOptions requestOptions) {
        return this.rawClient.get(jobId, requestOptions).body();
    }

    /**
     * Process a card ETL job
     */
    public List<ProcessCardEtlResponse> processCardEtl() {
        return this.rawClient.processCardEtl().body();
    }

    /**
     * Process a card ETL job
     */
    public List<ProcessCardEtlResponse> processCardEtl(ProcessCardEtlRequest request) {
        return this.rawClient.processCardEtl(request).body();
    }

    /**
     * Process a card ETL job
     */
    public List<ProcessCardEtlResponse> processCardEtl(ProcessCardEtlRequest request, RequestOptions requestOptions) {
        return this.rawClient.processCardEtl(request, requestOptions).body();
    }

    /**
     * Trigger a payment gateway process job
     */
    public TriggerPaymentGatewayProcessResponse trigger(TriggerPaymentGatewayProcessRequest request) {
        return this.rawClient.trigger(request).body();
    }

    /**
     * Trigger a payment gateway process job
     */
    public TriggerPaymentGatewayProcessResponse trigger(
            TriggerPaymentGatewayProcessRequest request, RequestOptions requestOptions) {
        return this.rawClient.trigger(request, requestOptions).body();
    }

    /**
     * Internal endpoint for processing processing jobs via Pub/Sub messages
     */
    public PubSubResponse processPubsub() {
        return this.rawClient.processPubsub().body();
    }

    /**
     * Internal endpoint for processing processing jobs via Pub/Sub messages
     */
    public PubSubResponse processPubsub(PubSubRequest request) {
        return this.rawClient.processPubsub(request).body();
    }

    /**
     * Internal endpoint for processing processing jobs via Pub/Sub messages
     */
    public PubSubResponse processPubsub(PubSubRequest request, RequestOptions requestOptions) {
        return this.rawClient.processPubsub(request, requestOptions).body();
    }

    /**
     * Internal endpoint for processing data extraction for a payment gateway process job
     */
    public ProcessDataExtractionResponse processDataExtraction(ProcessDataExtractionRequest request) {
        return this.rawClient.processDataExtraction(request).body();
    }

    /**
     * Internal endpoint for processing data extraction for a payment gateway process job
     */
    public ProcessDataExtractionResponse processDataExtraction(
            ProcessDataExtractionRequest request, RequestOptions requestOptions) {
        return this.rawClient.processDataExtraction(request, requestOptions).body();
    }
}
