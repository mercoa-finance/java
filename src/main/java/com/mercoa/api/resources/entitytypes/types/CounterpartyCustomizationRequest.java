/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CounterpartyCustomizationRequest.Builder.class)
public final class CounterpartyCustomizationRequest {
    private final String counterpartyId;

    private final Optional<String> accountId;

    private final Map<String, Object> additionalProperties;

    private CounterpartyCustomizationRequest(
            String counterpartyId, Optional<String> accountId, Map<String, Object> additionalProperties) {
        this.counterpartyId = counterpartyId;
        this.accountId = accountId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("counterpartyId")
    public String getCounterpartyId() {
        return counterpartyId;
    }

    /**
     * @return The ID the counterparty has assigned to this account.
     */
    @JsonProperty("accountId")
    public Optional<String> getAccountId() {
        return accountId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CounterpartyCustomizationRequest && equalTo((CounterpartyCustomizationRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CounterpartyCustomizationRequest other) {
        return counterpartyId.equals(other.counterpartyId) && accountId.equals(other.accountId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.counterpartyId, this.accountId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CounterpartyIdStage builder() {
        return new Builder();
    }

    public interface CounterpartyIdStage {
        _FinalStage counterpartyId(String counterpartyId);

        Builder from(CounterpartyCustomizationRequest other);
    }

    public interface _FinalStage {
        CounterpartyCustomizationRequest build();

        _FinalStage accountId(Optional<String> accountId);

        _FinalStage accountId(String accountId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CounterpartyIdStage, _FinalStage {
        private String counterpartyId;

        private Optional<String> accountId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CounterpartyCustomizationRequest other) {
            counterpartyId(other.getCounterpartyId());
            accountId(other.getAccountId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("counterpartyId")
        public _FinalStage counterpartyId(String counterpartyId) {
            this.counterpartyId = counterpartyId;
            return this;
        }

        /**
         * <p>The ID the counterparty has assigned to this account.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage accountId(String accountId) {
            this.accountId = Optional.of(accountId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "accountId", nulls = Nulls.SKIP)
        public _FinalStage accountId(Optional<String> accountId) {
            this.accountId = accountId;
            return this;
        }

        @java.lang.Override
        public CounterpartyCustomizationRequest build() {
            return new CounterpartyCustomizationRequest(counterpartyId, accountId, additionalProperties);
        }
    }
}
