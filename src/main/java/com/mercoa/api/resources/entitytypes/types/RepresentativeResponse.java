/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import com.mercoa.api.resources.commons.types.Address;
import com.mercoa.api.resources.commons.types.FullName;
import com.mercoa.api.resources.commons.types.PhoneNumber;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = RepresentativeResponse.Builder.class)
public final class RepresentativeResponse {
    private final String id;

    private final FullName name;

    private final PhoneNumber phone;

    private final String email;

    private final Address address;

    private final boolean birthDateProvided;

    private final boolean governmentIdProvided;

    private final Responsibilities responsibilities;

    private final OffsetDateTime createdOn;

    private final OffsetDateTime updatedOn;

    private final Optional<OffsetDateTime> disabledOn;

    private final Map<String, Object> additionalProperties;

    private RepresentativeResponse(
            String id,
            FullName name,
            PhoneNumber phone,
            String email,
            Address address,
            boolean birthDateProvided,
            boolean governmentIdProvided,
            Responsibilities responsibilities,
            OffsetDateTime createdOn,
            OffsetDateTime updatedOn,
            Optional<OffsetDateTime> disabledOn,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.name = name;
        this.phone = phone;
        this.email = email;
        this.address = address;
        this.birthDateProvided = birthDateProvided;
        this.governmentIdProvided = governmentIdProvided;
        this.responsibilities = responsibilities;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
        this.disabledOn = disabledOn;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("name")
    public FullName getName() {
        return name;
    }

    @JsonProperty("phone")
    public PhoneNumber getPhone() {
        return phone;
    }

    @JsonProperty("email")
    public String getEmail() {
        return email;
    }

    @JsonProperty("address")
    public Address getAddress() {
        return address;
    }

    @JsonProperty("birthDateProvided")
    public boolean getBirthDateProvided() {
        return birthDateProvided;
    }

    @JsonProperty("governmentIDProvided")
    public boolean getGovernmentIdProvided() {
        return governmentIdProvided;
    }

    @JsonProperty("responsibilities")
    public Responsibilities getResponsibilities() {
        return responsibilities;
    }

    @JsonProperty("createdOn")
    public OffsetDateTime getCreatedOn() {
        return createdOn;
    }

    @JsonProperty("updatedOn")
    public OffsetDateTime getUpdatedOn() {
        return updatedOn;
    }

    @JsonProperty("disabledOn")
    public Optional<OffsetDateTime> getDisabledOn() {
        return disabledOn;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof RepresentativeResponse && equalTo((RepresentativeResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(RepresentativeResponse other) {
        return id.equals(other.id)
                && name.equals(other.name)
                && phone.equals(other.phone)
                && email.equals(other.email)
                && address.equals(other.address)
                && birthDateProvided == other.birthDateProvided
                && governmentIdProvided == other.governmentIdProvided
                && responsibilities.equals(other.responsibilities)
                && createdOn.equals(other.createdOn)
                && updatedOn.equals(other.updatedOn)
                && disabledOn.equals(other.disabledOn);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.name,
                this.phone,
                this.email,
                this.address,
                this.birthDateProvided,
                this.governmentIdProvided,
                this.responsibilities,
                this.createdOn,
                this.updatedOn,
                this.disabledOn);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        NameStage id(String id);

        Builder from(RepresentativeResponse other);
    }

    public interface NameStage {
        PhoneStage name(FullName name);
    }

    public interface PhoneStage {
        EmailStage phone(PhoneNumber phone);
    }

    public interface EmailStage {
        AddressStage email(String email);
    }

    public interface AddressStage {
        BirthDateProvidedStage address(Address address);
    }

    public interface BirthDateProvidedStage {
        GovernmentIdProvidedStage birthDateProvided(boolean birthDateProvided);
    }

    public interface GovernmentIdProvidedStage {
        ResponsibilitiesStage governmentIdProvided(boolean governmentIdProvided);
    }

    public interface ResponsibilitiesStage {
        CreatedOnStage responsibilities(Responsibilities responsibilities);
    }

    public interface CreatedOnStage {
        UpdatedOnStage createdOn(OffsetDateTime createdOn);
    }

    public interface UpdatedOnStage {
        _FinalStage updatedOn(OffsetDateTime updatedOn);
    }

    public interface _FinalStage {
        RepresentativeResponse build();

        _FinalStage disabledOn(Optional<OffsetDateTime> disabledOn);

        _FinalStage disabledOn(OffsetDateTime disabledOn);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements IdStage,
                    NameStage,
                    PhoneStage,
                    EmailStage,
                    AddressStage,
                    BirthDateProvidedStage,
                    GovernmentIdProvidedStage,
                    ResponsibilitiesStage,
                    CreatedOnStage,
                    UpdatedOnStage,
                    _FinalStage {
        private String id;

        private FullName name;

        private PhoneNumber phone;

        private String email;

        private Address address;

        private boolean birthDateProvided;

        private boolean governmentIdProvided;

        private Responsibilities responsibilities;

        private OffsetDateTime createdOn;

        private OffsetDateTime updatedOn;

        private Optional<OffsetDateTime> disabledOn = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(RepresentativeResponse other) {
            id(other.getId());
            name(other.getName());
            phone(other.getPhone());
            email(other.getEmail());
            address(other.getAddress());
            birthDateProvided(other.getBirthDateProvided());
            governmentIdProvided(other.getGovernmentIdProvided());
            responsibilities(other.getResponsibilities());
            createdOn(other.getCreatedOn());
            updatedOn(other.getUpdatedOn());
            disabledOn(other.getDisabledOn());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public NameStage id(String id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public PhoneStage name(FullName name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        @JsonSetter("phone")
        public EmailStage phone(PhoneNumber phone) {
            this.phone = phone;
            return this;
        }

        @java.lang.Override
        @JsonSetter("email")
        public AddressStage email(String email) {
            this.email = email;
            return this;
        }

        @java.lang.Override
        @JsonSetter("address")
        public BirthDateProvidedStage address(Address address) {
            this.address = address;
            return this;
        }

        @java.lang.Override
        @JsonSetter("birthDateProvided")
        public GovernmentIdProvidedStage birthDateProvided(boolean birthDateProvided) {
            this.birthDateProvided = birthDateProvided;
            return this;
        }

        @java.lang.Override
        @JsonSetter("governmentIDProvided")
        public ResponsibilitiesStage governmentIdProvided(boolean governmentIdProvided) {
            this.governmentIdProvided = governmentIdProvided;
            return this;
        }

        @java.lang.Override
        @JsonSetter("responsibilities")
        public CreatedOnStage responsibilities(Responsibilities responsibilities) {
            this.responsibilities = responsibilities;
            return this;
        }

        @java.lang.Override
        @JsonSetter("createdOn")
        public UpdatedOnStage createdOn(OffsetDateTime createdOn) {
            this.createdOn = createdOn;
            return this;
        }

        @java.lang.Override
        @JsonSetter("updatedOn")
        public _FinalStage updatedOn(OffsetDateTime updatedOn) {
            this.updatedOn = updatedOn;
            return this;
        }

        @java.lang.Override
        public _FinalStage disabledOn(OffsetDateTime disabledOn) {
            this.disabledOn = Optional.of(disabledOn);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "disabledOn", nulls = Nulls.SKIP)
        public _FinalStage disabledOn(Optional<OffsetDateTime> disabledOn) {
            this.disabledOn = disabledOn;
            return this;
        }

        @java.lang.Override
        public RepresentativeResponse build() {
            return new RepresentativeResponse(
                    id,
                    name,
                    phone,
                    email,
                    address,
                    birthDateProvided,
                    governmentIdProvided,
                    responsibilities,
                    createdOn,
                    updatedOn,
                    disabledOn,
                    additionalProperties);
        }
    }
}
