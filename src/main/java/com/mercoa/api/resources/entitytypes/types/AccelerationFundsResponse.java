/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AccelerationFundsResponse.Builder.class)
public final class AccelerationFundsResponse {
    private final String entityId;

    private final String paymentMethodId;

    private final AccelerationFundsBalanceResponse availableBalance;

    private final AccelerationFundsBalanceResponse pendingBalance;

    private final Map<String, Object> additionalProperties;

    private AccelerationFundsResponse(
            String entityId,
            String paymentMethodId,
            AccelerationFundsBalanceResponse availableBalance,
            AccelerationFundsBalanceResponse pendingBalance,
            Map<String, Object> additionalProperties) {
        this.entityId = entityId;
        this.paymentMethodId = paymentMethodId;
        this.availableBalance = availableBalance;
        this.pendingBalance = pendingBalance;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the entity that these acceleration funds belong to.
     */
    @JsonProperty("entityId")
    public String getEntityId() {
        return entityId;
    }

    /**
     * @return The ID of the payment method that the acceleration funds were accessed through.
     */
    @JsonProperty("paymentMethodId")
    public String getPaymentMethodId() {
        return paymentMethodId;
    }

    @JsonProperty("availableBalance")
    public AccelerationFundsBalanceResponse getAvailableBalance() {
        return availableBalance;
    }

    @JsonProperty("pendingBalance")
    public AccelerationFundsBalanceResponse getPendingBalance() {
        return pendingBalance;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AccelerationFundsResponse && equalTo((AccelerationFundsResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AccelerationFundsResponse other) {
        return entityId.equals(other.entityId)
                && paymentMethodId.equals(other.paymentMethodId)
                && availableBalance.equals(other.availableBalance)
                && pendingBalance.equals(other.pendingBalance);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.entityId, this.paymentMethodId, this.availableBalance, this.pendingBalance);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EntityIdStage builder() {
        return new Builder();
    }

    public interface EntityIdStage {
        PaymentMethodIdStage entityId(String entityId);

        Builder from(AccelerationFundsResponse other);
    }

    public interface PaymentMethodIdStage {
        AvailableBalanceStage paymentMethodId(String paymentMethodId);
    }

    public interface AvailableBalanceStage {
        PendingBalanceStage availableBalance(AccelerationFundsBalanceResponse availableBalance);
    }

    public interface PendingBalanceStage {
        _FinalStage pendingBalance(AccelerationFundsBalanceResponse pendingBalance);
    }

    public interface _FinalStage {
        AccelerationFundsResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements EntityIdStage, PaymentMethodIdStage, AvailableBalanceStage, PendingBalanceStage, _FinalStage {
        private String entityId;

        private String paymentMethodId;

        private AccelerationFundsBalanceResponse availableBalance;

        private AccelerationFundsBalanceResponse pendingBalance;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AccelerationFundsResponse other) {
            entityId(other.getEntityId());
            paymentMethodId(other.getPaymentMethodId());
            availableBalance(other.getAvailableBalance());
            pendingBalance(other.getPendingBalance());
            return this;
        }

        /**
         * <p>The ID of the entity that these acceleration funds belong to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("entityId")
        public PaymentMethodIdStage entityId(String entityId) {
            this.entityId = entityId;
            return this;
        }

        /**
         * <p>The ID of the payment method that the acceleration funds were accessed through.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("paymentMethodId")
        public AvailableBalanceStage paymentMethodId(String paymentMethodId) {
            this.paymentMethodId = paymentMethodId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("availableBalance")
        public PendingBalanceStage availableBalance(AccelerationFundsBalanceResponse availableBalance) {
            this.availableBalance = availableBalance;
            return this;
        }

        @java.lang.Override
        @JsonSetter("pendingBalance")
        public _FinalStage pendingBalance(AccelerationFundsBalanceResponse pendingBalance) {
            this.pendingBalance = pendingBalance;
            return this;
        }

        @java.lang.Override
        public AccelerationFundsResponse build() {
            return new AccelerationFundsResponse(
                    entityId, paymentMethodId, availableBalance, pendingBalance, additionalProperties);
        }
    }
}
