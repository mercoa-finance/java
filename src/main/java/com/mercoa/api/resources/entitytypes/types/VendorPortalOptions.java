/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = VendorPortalOptions.Builder.class)
public final class VendorPortalOptions {
    private final Optional<List<VendorPortalTab>> tabs;

    private final Optional<VendorPortalTab> defaultTab;

    private final Optional<String> welcomeMessage;

    private final Map<String, Object> additionalProperties;

    private VendorPortalOptions(
            Optional<List<VendorPortalTab>> tabs,
            Optional<VendorPortalTab> defaultTab,
            Optional<String> welcomeMessage,
            Map<String, Object> additionalProperties) {
        this.tabs = tabs;
        this.defaultTab = defaultTab;
        this.welcomeMessage = welcomeMessage;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The tabs to display in the vendor portal. If not provided, all tabs will be displayed.
     */
    @JsonProperty("tabs")
    public Optional<List<VendorPortalTab>> getTabs() {
        return tabs;
    }

    /**
     * @return The default tab to display in the vendor portal. If not provided, the HOME tab will be displayed.
     */
    @JsonProperty("defaultTab")
    public Optional<VendorPortalTab> getDefaultTab() {
        return defaultTab;
    }

    /**
     * @return The welcome message to display in the vendor portal. If not provided, no welcome message will be displayed.
     */
    @JsonProperty("welcomeMessage")
    public Optional<String> getWelcomeMessage() {
        return welcomeMessage;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VendorPortalOptions && equalTo((VendorPortalOptions) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VendorPortalOptions other) {
        return tabs.equals(other.tabs)
                && defaultTab.equals(other.defaultTab)
                && welcomeMessage.equals(other.welcomeMessage);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.tabs, this.defaultTab, this.welcomeMessage);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<VendorPortalTab>> tabs = Optional.empty();

        private Optional<VendorPortalTab> defaultTab = Optional.empty();

        private Optional<String> welcomeMessage = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(VendorPortalOptions other) {
            tabs(other.getTabs());
            defaultTab(other.getDefaultTab());
            welcomeMessage(other.getWelcomeMessage());
            return this;
        }

        /**
         * <p>The tabs to display in the vendor portal. If not provided, all tabs will be displayed.</p>
         */
        @JsonSetter(value = "tabs", nulls = Nulls.SKIP)
        public Builder tabs(Optional<List<VendorPortalTab>> tabs) {
            this.tabs = tabs;
            return this;
        }

        public Builder tabs(List<VendorPortalTab> tabs) {
            this.tabs = Optional.ofNullable(tabs);
            return this;
        }

        /**
         * <p>The default tab to display in the vendor portal. If not provided, the HOME tab will be displayed.</p>
         */
        @JsonSetter(value = "defaultTab", nulls = Nulls.SKIP)
        public Builder defaultTab(Optional<VendorPortalTab> defaultTab) {
            this.defaultTab = defaultTab;
            return this;
        }

        public Builder defaultTab(VendorPortalTab defaultTab) {
            this.defaultTab = Optional.ofNullable(defaultTab);
            return this;
        }

        /**
         * <p>The welcome message to display in the vendor portal. If not provided, no welcome message will be displayed.</p>
         */
        @JsonSetter(value = "welcomeMessage", nulls = Nulls.SKIP)
        public Builder welcomeMessage(Optional<String> welcomeMessage) {
            this.welcomeMessage = welcomeMessage;
            return this;
        }

        public Builder welcomeMessage(String welcomeMessage) {
            this.welcomeMessage = Optional.ofNullable(welcomeMessage);
            return this;
        }

        public VendorPortalOptions build() {
            return new VendorPortalOptions(tabs, defaultTab, welcomeMessage, additionalProperties);
        }
    }
}
