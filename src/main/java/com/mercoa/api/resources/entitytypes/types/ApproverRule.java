/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ApproverRule.Builder.class)
public final class ApproverRule {
    private final int numApprovers;

    private final IdentifierList identifierList;

    private final Map<String, Object> additionalProperties;

    private ApproverRule(int numApprovers, IdentifierList identifierList, Map<String, Object> additionalProperties) {
        this.numApprovers = numApprovers;
        this.identifierList = identifierList;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("numApprovers")
    public int getNumApprovers() {
        return numApprovers;
    }

    @JsonProperty("identifierList")
    public IdentifierList getIdentifierList() {
        return identifierList;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ApproverRule && equalTo((ApproverRule) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ApproverRule other) {
        return numApprovers == other.numApprovers && identifierList.equals(other.identifierList);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.numApprovers, this.identifierList);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NumApproversStage builder() {
        return new Builder();
    }

    public interface NumApproversStage {
        IdentifierListStage numApprovers(int numApprovers);

        Builder from(ApproverRule other);
    }

    public interface IdentifierListStage {
        _FinalStage identifierList(IdentifierList identifierList);
    }

    public interface _FinalStage {
        ApproverRule build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NumApproversStage, IdentifierListStage, _FinalStage {
        private int numApprovers;

        private IdentifierList identifierList;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ApproverRule other) {
            numApprovers(other.getNumApprovers());
            identifierList(other.getIdentifierList());
            return this;
        }

        @java.lang.Override
        @JsonSetter("numApprovers")
        public IdentifierListStage numApprovers(int numApprovers) {
            this.numApprovers = numApprovers;
            return this;
        }

        @java.lang.Override
        @JsonSetter("identifierList")
        public _FinalStage identifierList(IdentifierList identifierList) {
            this.identifierList = identifierList;
            return this;
        }

        @java.lang.Override
        public ApproverRule build() {
            return new ApproverRule(numApprovers, identifierList, additionalProperties);
        }
    }
}
