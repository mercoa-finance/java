/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TokenGenerationEntityOptions.Builder.class)
public final class TokenGenerationEntityOptions {
    private final Optional<Boolean> enableMercoaPayments;

    private final Map<String, Object> additionalProperties;

    private TokenGenerationEntityOptions(
            Optional<Boolean> enableMercoaPayments, Map<String, Object> additionalProperties) {
        this.enableMercoaPayments = enableMercoaPayments;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return If true, will require entity to undergo KYB to use Mercoa payment rails and will capture required KYB data in the portal.
     */
    @JsonProperty("enableMercoaPayments")
    public Optional<Boolean> getEnableMercoaPayments() {
        return enableMercoaPayments;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TokenGenerationEntityOptions && equalTo((TokenGenerationEntityOptions) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TokenGenerationEntityOptions other) {
        return enableMercoaPayments.equals(other.enableMercoaPayments);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.enableMercoaPayments);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> enableMercoaPayments = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(TokenGenerationEntityOptions other) {
            enableMercoaPayments(other.getEnableMercoaPayments());
            return this;
        }

        @JsonSetter(value = "enableMercoaPayments", nulls = Nulls.SKIP)
        public Builder enableMercoaPayments(Optional<Boolean> enableMercoaPayments) {
            this.enableMercoaPayments = enableMercoaPayments;
            return this;
        }

        public Builder enableMercoaPayments(Boolean enableMercoaPayments) {
            this.enableMercoaPayments = Optional.ofNullable(enableMercoaPayments);
            return this;
        }

        public TokenGenerationEntityOptions build() {
            return new TokenGenerationEntityOptions(enableMercoaPayments, additionalProperties);
        }
    }
}
