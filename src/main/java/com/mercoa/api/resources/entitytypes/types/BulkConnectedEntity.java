/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.entitytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkConnectedEntity.Builder.class)
public final class BulkConnectedEntity {
    private final String id;

    private final boolean linkCreatedAsPayor;

    private final boolean linkCreatedAsPayee;

    private final Map<String, Object> additionalProperties;

    private BulkConnectedEntity(
            String id,
            boolean linkCreatedAsPayor,
            boolean linkCreatedAsPayee,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.linkCreatedAsPayor = linkCreatedAsPayor;
        this.linkCreatedAsPayee = linkCreatedAsPayee;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the entity to connect to.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return If true, the created entities will be linked to the connected entity as a payor (customer).
     */
    @JsonProperty("linkCreatedAsPayor")
    public boolean getLinkCreatedAsPayor() {
        return linkCreatedAsPayor;
    }

    /**
     * @return If true, the created entities will be linked to the connected entity as a payee (vendor).
     */
    @JsonProperty("linkCreatedAsPayee")
    public boolean getLinkCreatedAsPayee() {
        return linkCreatedAsPayee;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkConnectedEntity && equalTo((BulkConnectedEntity) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkConnectedEntity other) {
        return id.equals(other.id)
                && linkCreatedAsPayor == other.linkCreatedAsPayor
                && linkCreatedAsPayee == other.linkCreatedAsPayee;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.linkCreatedAsPayor, this.linkCreatedAsPayee);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>The ID of the entity to connect to.</p>
         */
        LinkCreatedAsPayorStage id(@NotNull String id);

        Builder from(BulkConnectedEntity other);
    }

    public interface LinkCreatedAsPayorStage {
        /**
         * <p>If true, the created entities will be linked to the connected entity as a payor (customer).</p>
         */
        LinkCreatedAsPayeeStage linkCreatedAsPayor(boolean linkCreatedAsPayor);
    }

    public interface LinkCreatedAsPayeeStage {
        /**
         * <p>If true, the created entities will be linked to the connected entity as a payee (vendor).</p>
         */
        _FinalStage linkCreatedAsPayee(boolean linkCreatedAsPayee);
    }

    public interface _FinalStage {
        BulkConnectedEntity build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements IdStage, LinkCreatedAsPayorStage, LinkCreatedAsPayeeStage, _FinalStage {
        private String id;

        private boolean linkCreatedAsPayor;

        private boolean linkCreatedAsPayee;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BulkConnectedEntity other) {
            id(other.getId());
            linkCreatedAsPayor(other.getLinkCreatedAsPayor());
            linkCreatedAsPayee(other.getLinkCreatedAsPayee());
            return this;
        }

        /**
         * <p>The ID of the entity to connect to.</p>
         * <p>The ID of the entity to connect to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public LinkCreatedAsPayorStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>If true, the created entities will be linked to the connected entity as a payor (customer).</p>
         * <p>If true, the created entities will be linked to the connected entity as a payor (customer).</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("linkCreatedAsPayor")
        public LinkCreatedAsPayeeStage linkCreatedAsPayor(boolean linkCreatedAsPayor) {
            this.linkCreatedAsPayor = linkCreatedAsPayor;
            return this;
        }

        /**
         * <p>If true, the created entities will be linked to the connected entity as a payee (vendor).</p>
         * <p>If true, the created entities will be linked to the connected entity as a payee (vendor).</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("linkCreatedAsPayee")
        public _FinalStage linkCreatedAsPayee(boolean linkCreatedAsPayee) {
            this.linkCreatedAsPayee = linkCreatedAsPayee;
            return this;
        }

        @java.lang.Override
        public BulkConnectedEntity build() {
            return new BulkConnectedEntity(id, linkCreatedAsPayor, linkCreatedAsPayee, additionalProperties);
        }
    }
}
