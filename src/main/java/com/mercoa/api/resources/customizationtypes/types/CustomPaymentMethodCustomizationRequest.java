/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.customizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CustomPaymentMethodCustomizationRequest.Builder.class)
public final class CustomPaymentMethodCustomizationRequest implements IGenericPaymentMethodCustomizationRequest {
    private final boolean disabled;

    private final String schemaId;

    private final Map<String, Object> additionalProperties;

    private CustomPaymentMethodCustomizationRequest(
            boolean disabled, String schemaId, Map<String, Object> additionalProperties) {
        this.disabled = disabled;
        this.schemaId = schemaId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return If true, this method will will not be available to the entity.
     */
    @JsonProperty("disabled")
    @java.lang.Override
    public boolean getDisabled() {
        return disabled;
    }

    /**
     * @return The ID of the schema to use for this payment method.
     */
    @JsonProperty("schemaId")
    public String getSchemaId() {
        return schemaId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CustomPaymentMethodCustomizationRequest
                && equalTo((CustomPaymentMethodCustomizationRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CustomPaymentMethodCustomizationRequest other) {
        return disabled == other.disabled && schemaId.equals(other.schemaId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.disabled, this.schemaId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DisabledStage builder() {
        return new Builder();
    }

    public interface DisabledStage {
        SchemaIdStage disabled(boolean disabled);

        Builder from(CustomPaymentMethodCustomizationRequest other);
    }

    public interface SchemaIdStage {
        _FinalStage schemaId(String schemaId);
    }

    public interface _FinalStage {
        CustomPaymentMethodCustomizationRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements DisabledStage, SchemaIdStage, _FinalStage {
        private boolean disabled;

        private String schemaId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CustomPaymentMethodCustomizationRequest other) {
            disabled(other.getDisabled());
            schemaId(other.getSchemaId());
            return this;
        }

        /**
         * <p>If true, this method will will not be available to the entity.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("disabled")
        public SchemaIdStage disabled(boolean disabled) {
            this.disabled = disabled;
            return this;
        }

        /**
         * <p>The ID of the schema to use for this payment method.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("schemaId")
        public _FinalStage schemaId(String schemaId) {
            this.schemaId = schemaId;
            return this;
        }

        @java.lang.Override
        public CustomPaymentMethodCustomizationRequest build() {
            return new CustomPaymentMethodCustomizationRequest(disabled, schemaId, additionalProperties);
        }
    }
}
