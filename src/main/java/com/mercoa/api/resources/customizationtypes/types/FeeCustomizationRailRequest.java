/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.customizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = FeeCustomizationRailRequest.Builder.class)
public final class FeeCustomizationRailRequest {
    private final Optional<PaymentMethodFee> achStandard;

    private final Optional<PaymentMethodFee> achSameDay;

    private final Optional<PaymentMethodFee> checkPrint;

    private final Optional<PaymentMethodFee> checkMail;

    private final Optional<PaymentMethodFee> checkMailPriority;

    private final Optional<PaymentMethodFee> checkMailUpsNextDay;

    private final Map<String, Object> additionalProperties;

    private FeeCustomizationRailRequest(
            Optional<PaymentMethodFee> achStandard,
            Optional<PaymentMethodFee> achSameDay,
            Optional<PaymentMethodFee> checkPrint,
            Optional<PaymentMethodFee> checkMail,
            Optional<PaymentMethodFee> checkMailPriority,
            Optional<PaymentMethodFee> checkMailUpsNextDay,
            Map<String, Object> additionalProperties) {
        this.achStandard = achStandard;
        this.achSameDay = achSameDay;
        this.checkPrint = checkPrint;
        this.checkMail = checkMail;
        this.checkMailPriority = checkMailPriority;
        this.checkMailUpsNextDay = checkMailUpsNextDay;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The fee for the ACH standard rail.
     */
    @JsonProperty("ACH_STANDARD")
    public Optional<PaymentMethodFee> getAchStandard() {
        return achStandard;
    }

    /**
     * @return The fee for the ACH same day rail.
     */
    @JsonProperty("ACH_SAME_DAY")
    public Optional<PaymentMethodFee> getAchSameDay() {
        return achSameDay;
    }

    /**
     * @return The fee for the check print rail.
     */
    @JsonProperty("CHECK_PRINT")
    public Optional<PaymentMethodFee> getCheckPrint() {
        return checkPrint;
    }

    /**
     * @return The fee for the check mail rail.
     */
    @JsonProperty("CHECK_MAIL")
    public Optional<PaymentMethodFee> getCheckMail() {
        return checkMail;
    }

    /**
     * @return The fee for the check mail priority rail.
     */
    @JsonProperty("CHECK_MAIL_PRIORITY")
    public Optional<PaymentMethodFee> getCheckMailPriority() {
        return checkMailPriority;
    }

    /**
     * @return The fee for the check mail UPS next day rail.
     */
    @JsonProperty("CHECK_MAIL_UPS_NEXT_DAY")
    public Optional<PaymentMethodFee> getCheckMailUpsNextDay() {
        return checkMailUpsNextDay;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof FeeCustomizationRailRequest && equalTo((FeeCustomizationRailRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(FeeCustomizationRailRequest other) {
        return achStandard.equals(other.achStandard)
                && achSameDay.equals(other.achSameDay)
                && checkPrint.equals(other.checkPrint)
                && checkMail.equals(other.checkMail)
                && checkMailPriority.equals(other.checkMailPriority)
                && checkMailUpsNextDay.equals(other.checkMailUpsNextDay);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.achStandard,
                this.achSameDay,
                this.checkPrint,
                this.checkMail,
                this.checkMailPriority,
                this.checkMailUpsNextDay);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<PaymentMethodFee> achStandard = Optional.empty();

        private Optional<PaymentMethodFee> achSameDay = Optional.empty();

        private Optional<PaymentMethodFee> checkPrint = Optional.empty();

        private Optional<PaymentMethodFee> checkMail = Optional.empty();

        private Optional<PaymentMethodFee> checkMailPriority = Optional.empty();

        private Optional<PaymentMethodFee> checkMailUpsNextDay = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(FeeCustomizationRailRequest other) {
            achStandard(other.getAchStandard());
            achSameDay(other.getAchSameDay());
            checkPrint(other.getCheckPrint());
            checkMail(other.getCheckMail());
            checkMailPriority(other.getCheckMailPriority());
            checkMailUpsNextDay(other.getCheckMailUpsNextDay());
            return this;
        }

        /**
         * <p>The fee for the ACH standard rail.</p>
         */
        @JsonSetter(value = "ACH_STANDARD", nulls = Nulls.SKIP)
        public Builder achStandard(Optional<PaymentMethodFee> achStandard) {
            this.achStandard = achStandard;
            return this;
        }

        public Builder achStandard(PaymentMethodFee achStandard) {
            this.achStandard = Optional.ofNullable(achStandard);
            return this;
        }

        /**
         * <p>The fee for the ACH same day rail.</p>
         */
        @JsonSetter(value = "ACH_SAME_DAY", nulls = Nulls.SKIP)
        public Builder achSameDay(Optional<PaymentMethodFee> achSameDay) {
            this.achSameDay = achSameDay;
            return this;
        }

        public Builder achSameDay(PaymentMethodFee achSameDay) {
            this.achSameDay = Optional.ofNullable(achSameDay);
            return this;
        }

        /**
         * <p>The fee for the check print rail.</p>
         */
        @JsonSetter(value = "CHECK_PRINT", nulls = Nulls.SKIP)
        public Builder checkPrint(Optional<PaymentMethodFee> checkPrint) {
            this.checkPrint = checkPrint;
            return this;
        }

        public Builder checkPrint(PaymentMethodFee checkPrint) {
            this.checkPrint = Optional.ofNullable(checkPrint);
            return this;
        }

        /**
         * <p>The fee for the check mail rail.</p>
         */
        @JsonSetter(value = "CHECK_MAIL", nulls = Nulls.SKIP)
        public Builder checkMail(Optional<PaymentMethodFee> checkMail) {
            this.checkMail = checkMail;
            return this;
        }

        public Builder checkMail(PaymentMethodFee checkMail) {
            this.checkMail = Optional.ofNullable(checkMail);
            return this;
        }

        /**
         * <p>The fee for the check mail priority rail.</p>
         */
        @JsonSetter(value = "CHECK_MAIL_PRIORITY", nulls = Nulls.SKIP)
        public Builder checkMailPriority(Optional<PaymentMethodFee> checkMailPriority) {
            this.checkMailPriority = checkMailPriority;
            return this;
        }

        public Builder checkMailPriority(PaymentMethodFee checkMailPriority) {
            this.checkMailPriority = Optional.ofNullable(checkMailPriority);
            return this;
        }

        /**
         * <p>The fee for the check mail UPS next day rail.</p>
         */
        @JsonSetter(value = "CHECK_MAIL_UPS_NEXT_DAY", nulls = Nulls.SKIP)
        public Builder checkMailUpsNextDay(Optional<PaymentMethodFee> checkMailUpsNextDay) {
            this.checkMailUpsNextDay = checkMailUpsNextDay;
            return this;
        }

        public Builder checkMailUpsNextDay(PaymentMethodFee checkMailUpsNextDay) {
            this.checkMailUpsNextDay = Optional.ofNullable(checkMailUpsNextDay);
            return this;
        }

        public FeeCustomizationRailRequest build() {
            return new FeeCustomizationRailRequest(
                    achStandard,
                    achSameDay,
                    checkPrint,
                    checkMail,
                    checkMailPriority,
                    checkMailUpsNextDay,
                    additionalProperties);
        }
    }
}
