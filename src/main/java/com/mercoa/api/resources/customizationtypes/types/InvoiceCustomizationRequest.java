/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.customizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = InvoiceCustomizationRequest.Builder.class)
public final class InvoiceCustomizationRequest {
    private final Optional<Boolean> hideAddress;

    private final Optional<Boolean> hideQrCode;

    private final Optional<Boolean> hideBankDetails;

    private final Optional<Boolean> hidePaymentLink;

    private final Map<String, Object> additionalProperties;

    private InvoiceCustomizationRequest(
            Optional<Boolean> hideAddress,
            Optional<Boolean> hideQrCode,
            Optional<Boolean> hideBankDetails,
            Optional<Boolean> hidePaymentLink,
            Map<String, Object> additionalProperties) {
        this.hideAddress = hideAddress;
        this.hideQrCode = hideQrCode;
        this.hideBankDetails = hideBankDetails;
        this.hidePaymentLink = hidePaymentLink;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return If true, the address information will be hidden from generated invoice PDFs. Defaults to false.
     */
    @JsonProperty("hideAddress")
    public Optional<Boolean> getHideAddress() {
        return hideAddress;
    }

    /**
     * @return If true, the QR code will be hidden from generated invoice PDFs. Defaults to false.
     */
    @JsonProperty("hideQrCode")
    public Optional<Boolean> getHideQrCode() {
        return hideQrCode;
    }

    /**
     * @return If true, the bank account details will be hidden from generated invoice PDFs. Defaults to false.
     */
    @JsonProperty("hideBankDetails")
    public Optional<Boolean> getHideBankDetails() {
        return hideBankDetails;
    }

    /**
     * @return If true, the payment link will be hidden from generated invoice PDFs. Defaults to false.
     */
    @JsonProperty("hidePaymentLink")
    public Optional<Boolean> getHidePaymentLink() {
        return hidePaymentLink;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InvoiceCustomizationRequest && equalTo((InvoiceCustomizationRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(InvoiceCustomizationRequest other) {
        return hideAddress.equals(other.hideAddress)
                && hideQrCode.equals(other.hideQrCode)
                && hideBankDetails.equals(other.hideBankDetails)
                && hidePaymentLink.equals(other.hidePaymentLink);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.hideAddress, this.hideQrCode, this.hideBankDetails, this.hidePaymentLink);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> hideAddress = Optional.empty();

        private Optional<Boolean> hideQrCode = Optional.empty();

        private Optional<Boolean> hideBankDetails = Optional.empty();

        private Optional<Boolean> hidePaymentLink = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(InvoiceCustomizationRequest other) {
            hideAddress(other.getHideAddress());
            hideQrCode(other.getHideQrCode());
            hideBankDetails(other.getHideBankDetails());
            hidePaymentLink(other.getHidePaymentLink());
            return this;
        }

        /**
         * <p>If true, the address information will be hidden from generated invoice PDFs. Defaults to false.</p>
         */
        @JsonSetter(value = "hideAddress", nulls = Nulls.SKIP)
        public Builder hideAddress(Optional<Boolean> hideAddress) {
            this.hideAddress = hideAddress;
            return this;
        }

        public Builder hideAddress(Boolean hideAddress) {
            this.hideAddress = Optional.ofNullable(hideAddress);
            return this;
        }

        /**
         * <p>If true, the QR code will be hidden from generated invoice PDFs. Defaults to false.</p>
         */
        @JsonSetter(value = "hideQrCode", nulls = Nulls.SKIP)
        public Builder hideQrCode(Optional<Boolean> hideQrCode) {
            this.hideQrCode = hideQrCode;
            return this;
        }

        public Builder hideQrCode(Boolean hideQrCode) {
            this.hideQrCode = Optional.ofNullable(hideQrCode);
            return this;
        }

        /**
         * <p>If true, the bank account details will be hidden from generated invoice PDFs. Defaults to false.</p>
         */
        @JsonSetter(value = "hideBankDetails", nulls = Nulls.SKIP)
        public Builder hideBankDetails(Optional<Boolean> hideBankDetails) {
            this.hideBankDetails = hideBankDetails;
            return this;
        }

        public Builder hideBankDetails(Boolean hideBankDetails) {
            this.hideBankDetails = Optional.ofNullable(hideBankDetails);
            return this;
        }

        /**
         * <p>If true, the payment link will be hidden from generated invoice PDFs. Defaults to false.</p>
         */
        @JsonSetter(value = "hidePaymentLink", nulls = Nulls.SKIP)
        public Builder hidePaymentLink(Optional<Boolean> hidePaymentLink) {
            this.hidePaymentLink = hidePaymentLink;
            return this;
        }

        public Builder hidePaymentLink(Boolean hidePaymentLink) {
            this.hidePaymentLink = Optional.ofNullable(hidePaymentLink);
            return this;
        }

        public InvoiceCustomizationRequest build() {
            return new InvoiceCustomizationRequest(
                    hideAddress, hideQrCode, hideBankDetails, hidePaymentLink, additionalProperties);
        }
    }
}
