/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.webhooks.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import com.mercoa.api.resources.paymentmethodtypes.types.PaymentMethodResponse;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PaymentMethodWebhook.Builder.class)
public final class PaymentMethodWebhook {
    private final String eventType;

    private final String entityId;

    private final PaymentMethodResponse paymentMethod;

    private final Map<String, Object> additionalProperties;

    private PaymentMethodWebhook(
            String eventType,
            String entityId,
            PaymentMethodResponse paymentMethod,
            Map<String, Object> additionalProperties) {
        this.eventType = eventType;
        this.entityId = entityId;
        this.paymentMethod = paymentMethod;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("eventType")
    public String getEventType() {
        return eventType;
    }

    @JsonProperty("entityId")
    public String getEntityId() {
        return entityId;
    }

    @JsonProperty("paymentMethod")
    public PaymentMethodResponse getPaymentMethod() {
        return paymentMethod;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PaymentMethodWebhook && equalTo((PaymentMethodWebhook) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PaymentMethodWebhook other) {
        return eventType.equals(other.eventType)
                && entityId.equals(other.entityId)
                && paymentMethod.equals(other.paymentMethod);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.eventType, this.entityId, this.paymentMethod);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EventTypeStage builder() {
        return new Builder();
    }

    public interface EventTypeStage {
        EntityIdStage eventType(String eventType);

        Builder from(PaymentMethodWebhook other);
    }

    public interface EntityIdStage {
        PaymentMethodStage entityId(String entityId);
    }

    public interface PaymentMethodStage {
        _FinalStage paymentMethod(PaymentMethodResponse paymentMethod);
    }

    public interface _FinalStage {
        PaymentMethodWebhook build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements EventTypeStage, EntityIdStage, PaymentMethodStage, _FinalStage {
        private String eventType;

        private String entityId;

        private PaymentMethodResponse paymentMethod;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PaymentMethodWebhook other) {
            eventType(other.getEventType());
            entityId(other.getEntityId());
            paymentMethod(other.getPaymentMethod());
            return this;
        }

        @java.lang.Override
        @JsonSetter("eventType")
        public EntityIdStage eventType(String eventType) {
            this.eventType = eventType;
            return this;
        }

        @java.lang.Override
        @JsonSetter("entityId")
        public PaymentMethodStage entityId(String entityId) {
            this.entityId = entityId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("paymentMethod")
        public _FinalStage paymentMethod(PaymentMethodResponse paymentMethod) {
            this.paymentMethod = paymentMethod;
            return this;
        }

        @java.lang.Override
        public PaymentMethodWebhook build() {
            return new PaymentMethodWebhook(eventType, entityId, paymentMethod, additionalProperties);
        }
    }
}
