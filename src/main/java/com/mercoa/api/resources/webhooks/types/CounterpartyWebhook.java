/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.webhooks.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CounterpartyWebhook.Builder.class)
public final class CounterpartyWebhook {
    private final String eventType;

    private final String payeeId;

    private final String payorId;

    private final Map<String, Object> additionalProperties;

    private CounterpartyWebhook(
            String eventType, String payeeId, String payorId, Map<String, Object> additionalProperties) {
        this.eventType = eventType;
        this.payeeId = payeeId;
        this.payorId = payorId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("eventType")
    public String getEventType() {
        return eventType;
    }

    @JsonProperty("payeeId")
    public String getPayeeId() {
        return payeeId;
    }

    @JsonProperty("payorId")
    public String getPayorId() {
        return payorId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CounterpartyWebhook && equalTo((CounterpartyWebhook) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CounterpartyWebhook other) {
        return eventType.equals(other.eventType) && payeeId.equals(other.payeeId) && payorId.equals(other.payorId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.eventType, this.payeeId, this.payorId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EventTypeStage builder() {
        return new Builder();
    }

    public interface EventTypeStage {
        PayeeIdStage eventType(String eventType);

        Builder from(CounterpartyWebhook other);
    }

    public interface PayeeIdStage {
        PayorIdStage payeeId(String payeeId);
    }

    public interface PayorIdStage {
        _FinalStage payorId(String payorId);
    }

    public interface _FinalStage {
        CounterpartyWebhook build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements EventTypeStage, PayeeIdStage, PayorIdStage, _FinalStage {
        private String eventType;

        private String payeeId;

        private String payorId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CounterpartyWebhook other) {
            eventType(other.getEventType());
            payeeId(other.getPayeeId());
            payorId(other.getPayorId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("eventType")
        public PayeeIdStage eventType(String eventType) {
            this.eventType = eventType;
            return this;
        }

        @java.lang.Override
        @JsonSetter("payeeId")
        public PayorIdStage payeeId(String payeeId) {
            this.payeeId = payeeId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("payorId")
        public _FinalStage payorId(String payorId) {
            this.payorId = payorId;
            return this;
        }

        @java.lang.Override
        public CounterpartyWebhook build() {
            return new CounterpartyWebhook(eventType, payeeId, payorId, additionalProperties);
        }
    }
}
