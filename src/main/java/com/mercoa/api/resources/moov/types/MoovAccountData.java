/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.moov.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MoovAccountData.Builder.class)
public final class MoovAccountData {
    private final String accountId;

    private final Optional<String> foreignId;

    private final Map<String, Object> additionalProperties;

    private MoovAccountData(String accountId, Optional<String> foreignId, Map<String, Object> additionalProperties) {
        this.accountId = accountId;
        this.foreignId = foreignId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The Moov account ID
     */
    @JsonProperty("accountID")
    public String getAccountId() {
        return accountId;
    }

    /**
     * @return The Moov account foreign ID
     */
    @JsonProperty("foreignID")
    public Optional<String> getForeignId() {
        return foreignId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MoovAccountData && equalTo((MoovAccountData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MoovAccountData other) {
        return accountId.equals(other.accountId) && foreignId.equals(other.foreignId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.accountId, this.foreignId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AccountIdStage builder() {
        return new Builder();
    }

    public interface AccountIdStage {
        /**
         * <p>The Moov account ID</p>
         */
        _FinalStage accountId(@NotNull String accountId);

        Builder from(MoovAccountData other);
    }

    public interface _FinalStage {
        MoovAccountData build();

        /**
         * <p>The Moov account foreign ID</p>
         */
        _FinalStage foreignId(Optional<String> foreignId);

        _FinalStage foreignId(String foreignId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AccountIdStage, _FinalStage {
        private String accountId;

        private Optional<String> foreignId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(MoovAccountData other) {
            accountId(other.getAccountId());
            foreignId(other.getForeignId());
            return this;
        }

        /**
         * <p>The Moov account ID</p>
         * <p>The Moov account ID</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("accountID")
        public _FinalStage accountId(@NotNull String accountId) {
            this.accountId = Objects.requireNonNull(accountId, "accountId must not be null");
            return this;
        }

        /**
         * <p>The Moov account foreign ID</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage foreignId(String foreignId) {
            this.foreignId = Optional.ofNullable(foreignId);
            return this;
        }

        /**
         * <p>The Moov account foreign ID</p>
         */
        @java.lang.Override
        @JsonSetter(value = "foreignID", nulls = Nulls.SKIP)
        public _FinalStage foreignId(Optional<String> foreignId) {
            this.foreignId = foreignId;
            return this;
        }

        @java.lang.Override
        public MoovAccountData build() {
            return new MoovAccountData(accountId, foreignId, additionalProperties);
        }
    }
}
