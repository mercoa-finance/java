/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.moov.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MoovAccountCallbackBody.Builder.class)
public final class MoovAccountCallbackBody implements IMoovWebhookBase {
    private final String eventId;

    private final String type;

    private final String createdOn;

    private final MoovAccountData data;

    private final Map<String, Object> additionalProperties;

    private MoovAccountCallbackBody(
            String eventId,
            String type,
            String createdOn,
            MoovAccountData data,
            Map<String, Object> additionalProperties) {
        this.eventId = eventId;
        this.type = type;
        this.createdOn = createdOn;
        this.data = data;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The Moov event ID
     */
    @JsonProperty("eventID")
    @java.lang.Override
    public String getEventId() {
        return eventId;
    }

    /**
     * @return The Moov event type
     */
    @JsonProperty("type")
    @java.lang.Override
    public String getType() {
        return type;
    }

    /**
     * @return The Moov event creation date
     */
    @JsonProperty("createdOn")
    @java.lang.Override
    public String getCreatedOn() {
        return createdOn;
    }

    @JsonProperty("data")
    public MoovAccountData getData() {
        return data;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MoovAccountCallbackBody && equalTo((MoovAccountCallbackBody) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MoovAccountCallbackBody other) {
        return eventId.equals(other.eventId)
                && type.equals(other.type)
                && createdOn.equals(other.createdOn)
                && data.equals(other.data);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.eventId, this.type, this.createdOn, this.data);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EventIdStage builder() {
        return new Builder();
    }

    public interface EventIdStage {
        /**
         * <p>The Moov event ID</p>
         */
        TypeStage eventId(@NotNull String eventId);

        Builder from(MoovAccountCallbackBody other);
    }

    public interface TypeStage {
        /**
         * <p>The Moov event type</p>
         */
        CreatedOnStage type(@NotNull String type);
    }

    public interface CreatedOnStage {
        /**
         * <p>The Moov event creation date</p>
         */
        DataStage createdOn(@NotNull String createdOn);
    }

    public interface DataStage {
        _FinalStage data(@NotNull MoovAccountData data);
    }

    public interface _FinalStage {
        MoovAccountCallbackBody build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements EventIdStage, TypeStage, CreatedOnStage, DataStage, _FinalStage {
        private String eventId;

        private String type;

        private String createdOn;

        private MoovAccountData data;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(MoovAccountCallbackBody other) {
            eventId(other.getEventId());
            type(other.getType());
            createdOn(other.getCreatedOn());
            data(other.getData());
            return this;
        }

        /**
         * <p>The Moov event ID</p>
         * <p>The Moov event ID</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("eventID")
        public TypeStage eventId(@NotNull String eventId) {
            this.eventId = Objects.requireNonNull(eventId, "eventId must not be null");
            return this;
        }

        /**
         * <p>The Moov event type</p>
         * <p>The Moov event type</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("type")
        public CreatedOnStage type(@NotNull String type) {
            this.type = Objects.requireNonNull(type, "type must not be null");
            return this;
        }

        /**
         * <p>The Moov event creation date</p>
         * <p>The Moov event creation date</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdOn")
        public DataStage createdOn(@NotNull String createdOn) {
            this.createdOn = Objects.requireNonNull(createdOn, "createdOn must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("data")
        public _FinalStage data(@NotNull MoovAccountData data) {
            this.data = Objects.requireNonNull(data, "data must not be null");
            return this;
        }

        @java.lang.Override
        public MoovAccountCallbackBody build() {
            return new MoovAccountCallbackBody(eventId, type, createdOn, data, additionalProperties);
        }
    }
}
