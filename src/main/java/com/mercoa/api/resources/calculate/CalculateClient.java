/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.calculate;

import com.mercoa.api.core.ClientOptions;
import com.mercoa.api.core.RequestOptions;
import com.mercoa.api.resources.calculate.types.CalculateFeesRequest;
import com.mercoa.api.resources.calculate.types.CalculatePaymentTimingRequest;
import com.mercoa.api.resources.calculate.types.CalculatePaymentTimingResponse;
import com.mercoa.api.resources.invoicetypes.types.InvoiceFeesResponse;

public class CalculateClient {
    protected final ClientOptions clientOptions;

    private final RawCalculateClient rawClient;

    public CalculateClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawCalculateClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawCalculateClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Calculate the estimated fees associated with an payment given the amount, payment source, and disbursement method. Can be used to calculate fees for a payment before creating an invoice.
     */
    public InvoiceFeesResponse fee(CalculateFeesRequest request) {
        return this.rawClient.fee(request).body();
    }

    /**
     * Calculate the estimated fees associated with an payment given the amount, payment source, and disbursement method. Can be used to calculate fees for a payment before creating an invoice.
     */
    public InvoiceFeesResponse fee(CalculateFeesRequest request, RequestOptions requestOptions) {
        return this.rawClient.fee(request, requestOptions).body();
    }

    /**
     * Calculate the estimated payment timing given the deduction date, payment source, and disbursement method. Can be used to calculate timing for a payment.
     */
    public CalculatePaymentTimingResponse paymentTiming(CalculatePaymentTimingRequest request) {
        return this.rawClient.paymentTiming(request).body();
    }

    /**
     * Calculate the estimated payment timing given the deduction date, payment source, and disbursement method. Can be used to calculate timing for a payment.
     */
    public CalculatePaymentTimingResponse paymentTiming(
            CalculatePaymentTimingRequest request, RequestOptions requestOptions) {
        return this.rawClient.paymentTiming(request, requestOptions).body();
    }
}
