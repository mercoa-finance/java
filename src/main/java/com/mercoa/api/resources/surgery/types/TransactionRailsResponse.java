/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.surgery.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TransactionRailsResponse.Builder.class)
public final class TransactionRailsResponse {
    private final String id;

    private final Optional<String> railId;

    private final Optional<String> rail;

    private final Map<String, Object> additionalProperties;

    private TransactionRailsResponse(
            String id, Optional<String> railId, Optional<String> rail, Map<String, Object> additionalProperties) {
        this.id = id;
        this.railId = railId;
        this.rail = rail;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("railId")
    public Optional<String> getRailId() {
        return railId;
    }

    @JsonProperty("rail")
    public Optional<String> getRail() {
        return rail;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TransactionRailsResponse && equalTo((TransactionRailsResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TransactionRailsResponse other) {
        return id.equals(other.id) && railId.equals(other.railId) && rail.equals(other.rail);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.railId, this.rail);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        _FinalStage id(@NotNull String id);

        Builder from(TransactionRailsResponse other);
    }

    public interface _FinalStage {
        TransactionRailsResponse build();

        _FinalStage railId(Optional<String> railId);

        _FinalStage railId(String railId);

        _FinalStage rail(Optional<String> rail);

        _FinalStage rail(String rail);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, _FinalStage {
        private String id;

        private Optional<String> rail = Optional.empty();

        private Optional<String> railId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TransactionRailsResponse other) {
            id(other.getId());
            railId(other.getRailId());
            rail(other.getRail());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public _FinalStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage rail(String rail) {
            this.rail = Optional.ofNullable(rail);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "rail", nulls = Nulls.SKIP)
        public _FinalStage rail(Optional<String> rail) {
            this.rail = rail;
            return this;
        }

        @java.lang.Override
        public _FinalStage railId(String railId) {
            this.railId = Optional.ofNullable(railId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "railId", nulls = Nulls.SKIP)
        public _FinalStage railId(Optional<String> railId) {
            this.railId = railId;
            return this;
        }

        @java.lang.Override
        public TransactionRailsResponse build() {
            return new TransactionRailsResponse(id, railId, rail, additionalProperties);
        }
    }
}
