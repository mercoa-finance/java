/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.ocr.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CloudMailinRequest.Builder.class)
public final class CloudMailinRequest {
    private final Object headers;

    private final CloudMailinEnvelope envelope;

    private final Optional<String> plain;

    private final Optional<String> html;

    private final Optional<String> replyPlain;

    private final List<CloudMailinAttachment> attachments;

    private final Map<String, Object> additionalProperties;

    private CloudMailinRequest(
            Object headers,
            CloudMailinEnvelope envelope,
            Optional<String> plain,
            Optional<String> html,
            Optional<String> replyPlain,
            List<CloudMailinAttachment> attachments,
            Map<String, Object> additionalProperties) {
        this.headers = headers;
        this.envelope = envelope;
        this.plain = plain;
        this.html = html;
        this.replyPlain = replyPlain;
        this.attachments = attachments;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("headers")
    public Object getHeaders() {
        return headers;
    }

    @JsonProperty("envelope")
    public CloudMailinEnvelope getEnvelope() {
        return envelope;
    }

    @JsonProperty("plain")
    public Optional<String> getPlain() {
        return plain;
    }

    @JsonProperty("html")
    public Optional<String> getHtml() {
        return html;
    }

    @JsonProperty("reply_plain")
    public Optional<String> getReplyPlain() {
        return replyPlain;
    }

    @JsonProperty("attachments")
    public List<CloudMailinAttachment> getAttachments() {
        return attachments;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CloudMailinRequest && equalTo((CloudMailinRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CloudMailinRequest other) {
        return headers.equals(other.headers)
                && envelope.equals(other.envelope)
                && plain.equals(other.plain)
                && html.equals(other.html)
                && replyPlain.equals(other.replyPlain)
                && attachments.equals(other.attachments);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.headers, this.envelope, this.plain, this.html, this.replyPlain, this.attachments);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static HeadersStage builder() {
        return new Builder();
    }

    public interface HeadersStage {
        EnvelopeStage headers(Object headers);

        Builder from(CloudMailinRequest other);
    }

    public interface EnvelopeStage {
        _FinalStage envelope(@NotNull CloudMailinEnvelope envelope);
    }

    public interface _FinalStage {
        CloudMailinRequest build();

        _FinalStage plain(Optional<String> plain);

        _FinalStage plain(String plain);

        _FinalStage html(Optional<String> html);

        _FinalStage html(String html);

        _FinalStage replyPlain(Optional<String> replyPlain);

        _FinalStage replyPlain(String replyPlain);

        _FinalStage attachments(List<CloudMailinAttachment> attachments);

        _FinalStage addAttachments(CloudMailinAttachment attachments);

        _FinalStage addAllAttachments(List<CloudMailinAttachment> attachments);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements HeadersStage, EnvelopeStage, _FinalStage {
        private Object headers;

        private CloudMailinEnvelope envelope;

        private List<CloudMailinAttachment> attachments = new ArrayList<>();

        private Optional<String> replyPlain = Optional.empty();

        private Optional<String> html = Optional.empty();

        private Optional<String> plain = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CloudMailinRequest other) {
            headers(other.getHeaders());
            envelope(other.getEnvelope());
            plain(other.getPlain());
            html(other.getHtml());
            replyPlain(other.getReplyPlain());
            attachments(other.getAttachments());
            return this;
        }

        @java.lang.Override
        @JsonSetter("headers")
        public EnvelopeStage headers(Object headers) {
            this.headers = headers;
            return this;
        }

        @java.lang.Override
        @JsonSetter("envelope")
        public _FinalStage envelope(@NotNull CloudMailinEnvelope envelope) {
            this.envelope = Objects.requireNonNull(envelope, "envelope must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllAttachments(List<CloudMailinAttachment> attachments) {
            this.attachments.addAll(attachments);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAttachments(CloudMailinAttachment attachments) {
            this.attachments.add(attachments);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "attachments", nulls = Nulls.SKIP)
        public _FinalStage attachments(List<CloudMailinAttachment> attachments) {
            this.attachments.clear();
            this.attachments.addAll(attachments);
            return this;
        }

        @java.lang.Override
        public _FinalStage replyPlain(String replyPlain) {
            this.replyPlain = Optional.ofNullable(replyPlain);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "reply_plain", nulls = Nulls.SKIP)
        public _FinalStage replyPlain(Optional<String> replyPlain) {
            this.replyPlain = replyPlain;
            return this;
        }

        @java.lang.Override
        public _FinalStage html(String html) {
            this.html = Optional.ofNullable(html);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "html", nulls = Nulls.SKIP)
        public _FinalStage html(Optional<String> html) {
            this.html = html;
            return this;
        }

        @java.lang.Override
        public _FinalStage plain(String plain) {
            this.plain = Optional.ofNullable(plain);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "plain", nulls = Nulls.SKIP)
        public _FinalStage plain(Optional<String> plain) {
            this.plain = plain;
            return this;
        }

        @java.lang.Override
        public CloudMailinRequest build() {
            return new CloudMailinRequest(
                    headers, envelope, plain, html, replyPlain, attachments, additionalProperties);
        }
    }
}
