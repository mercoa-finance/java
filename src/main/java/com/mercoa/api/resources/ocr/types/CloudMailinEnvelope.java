/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.ocr.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CloudMailinEnvelope.Builder.class)
public final class CloudMailinEnvelope {
    private final String to;

    private final List<String> recipients;

    private final String from;

    private final String heloDomain;

    private final String remoteIp;

    private final Object spf;

    private final boolean tls;

    private final Optional<String> tlsCipher;

    private final Optional<String> md5;

    private final Map<String, Object> additionalProperties;

    private CloudMailinEnvelope(
            String to,
            List<String> recipients,
            String from,
            String heloDomain,
            String remoteIp,
            Object spf,
            boolean tls,
            Optional<String> tlsCipher,
            Optional<String> md5,
            Map<String, Object> additionalProperties) {
        this.to = to;
        this.recipients = recipients;
        this.from = from;
        this.heloDomain = heloDomain;
        this.remoteIp = remoteIp;
        this.spf = spf;
        this.tls = tls;
        this.tlsCipher = tlsCipher;
        this.md5 = md5;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("to")
    public String getTo() {
        return to;
    }

    @JsonProperty("recipients")
    public List<String> getRecipients() {
        return recipients;
    }

    @JsonProperty("from")
    public String getFrom() {
        return from;
    }

    @JsonProperty("helo_domain")
    public String getHeloDomain() {
        return heloDomain;
    }

    @JsonProperty("remote_ip")
    public String getRemoteIp() {
        return remoteIp;
    }

    @JsonProperty("spf")
    public Object getSpf() {
        return spf;
    }

    @JsonProperty("tls")
    public boolean getTls() {
        return tls;
    }

    @JsonProperty("tls_cipher")
    public Optional<String> getTlsCipher() {
        return tlsCipher;
    }

    @JsonProperty("md5")
    public Optional<String> getMd5() {
        return md5;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CloudMailinEnvelope && equalTo((CloudMailinEnvelope) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CloudMailinEnvelope other) {
        return to.equals(other.to)
                && recipients.equals(other.recipients)
                && from.equals(other.from)
                && heloDomain.equals(other.heloDomain)
                && remoteIp.equals(other.remoteIp)
                && spf.equals(other.spf)
                && tls == other.tls
                && tlsCipher.equals(other.tlsCipher)
                && md5.equals(other.md5);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.to,
                this.recipients,
                this.from,
                this.heloDomain,
                this.remoteIp,
                this.spf,
                this.tls,
                this.tlsCipher,
                this.md5);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ToStage builder() {
        return new Builder();
    }

    public interface ToStage {
        FromStage to(@NotNull String to);

        Builder from(CloudMailinEnvelope other);
    }

    public interface FromStage {
        HeloDomainStage from(@NotNull String from);
    }

    public interface HeloDomainStage {
        RemoteIpStage heloDomain(@NotNull String heloDomain);
    }

    public interface RemoteIpStage {
        SpfStage remoteIp(@NotNull String remoteIp);
    }

    public interface SpfStage {
        TlsStage spf(Object spf);
    }

    public interface TlsStage {
        _FinalStage tls(boolean tls);
    }

    public interface _FinalStage {
        CloudMailinEnvelope build();

        _FinalStage recipients(List<String> recipients);

        _FinalStage addRecipients(String recipients);

        _FinalStage addAllRecipients(List<String> recipients);

        _FinalStage tlsCipher(Optional<String> tlsCipher);

        _FinalStage tlsCipher(String tlsCipher);

        _FinalStage md5(Optional<String> md5);

        _FinalStage md5(String md5);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ToStage, FromStage, HeloDomainStage, RemoteIpStage, SpfStage, TlsStage, _FinalStage {
        private String to;

        private String from;

        private String heloDomain;

        private String remoteIp;

        private Object spf;

        private boolean tls;

        private Optional<String> md5 = Optional.empty();

        private Optional<String> tlsCipher = Optional.empty();

        private List<String> recipients = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CloudMailinEnvelope other) {
            to(other.getTo());
            recipients(other.getRecipients());
            from(other.getFrom());
            heloDomain(other.getHeloDomain());
            remoteIp(other.getRemoteIp());
            spf(other.getSpf());
            tls(other.getTls());
            tlsCipher(other.getTlsCipher());
            md5(other.getMd5());
            return this;
        }

        @java.lang.Override
        @JsonSetter("to")
        public FromStage to(@NotNull String to) {
            this.to = Objects.requireNonNull(to, "to must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("from")
        public HeloDomainStage from(@NotNull String from) {
            this.from = Objects.requireNonNull(from, "from must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("helo_domain")
        public RemoteIpStage heloDomain(@NotNull String heloDomain) {
            this.heloDomain = Objects.requireNonNull(heloDomain, "heloDomain must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("remote_ip")
        public SpfStage remoteIp(@NotNull String remoteIp) {
            this.remoteIp = Objects.requireNonNull(remoteIp, "remoteIp must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("spf")
        public TlsStage spf(Object spf) {
            this.spf = spf;
            return this;
        }

        @java.lang.Override
        @JsonSetter("tls")
        public _FinalStage tls(boolean tls) {
            this.tls = tls;
            return this;
        }

        @java.lang.Override
        public _FinalStage md5(String md5) {
            this.md5 = Optional.ofNullable(md5);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "md5", nulls = Nulls.SKIP)
        public _FinalStage md5(Optional<String> md5) {
            this.md5 = md5;
            return this;
        }

        @java.lang.Override
        public _FinalStage tlsCipher(String tlsCipher) {
            this.tlsCipher = Optional.ofNullable(tlsCipher);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "tls_cipher", nulls = Nulls.SKIP)
        public _FinalStage tlsCipher(Optional<String> tlsCipher) {
            this.tlsCipher = tlsCipher;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllRecipients(List<String> recipients) {
            this.recipients.addAll(recipients);
            return this;
        }

        @java.lang.Override
        public _FinalStage addRecipients(String recipients) {
            this.recipients.add(recipients);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "recipients", nulls = Nulls.SKIP)
        public _FinalStage recipients(List<String> recipients) {
            this.recipients.clear();
            this.recipients.addAll(recipients);
            return this;
        }

        @java.lang.Override
        public CloudMailinEnvelope build() {
            return new CloudMailinEnvelope(
                    to, recipients, from, heloDomain, remoteIp, spf, tls, tlsCipher, md5, additionalProperties);
        }
    }
}
