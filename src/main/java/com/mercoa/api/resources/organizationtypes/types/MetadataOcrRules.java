/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.organizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MetadataOcrRules.Builder.class)
public final class MetadataOcrRules {
    private final Optional<Boolean> extractFromDocument;

    private final Optional<Boolean> predictFromHistory;

    private final Map<String, Object> additionalProperties;

    private MetadataOcrRules(
            Optional<Boolean> extractFromDocument,
            Optional<Boolean> predictFromHistory,
            Map<String, Object> additionalProperties) {
        this.extractFromDocument = extractFromDocument;
        this.predictFromHistory = predictFromHistory;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Attempt to extract this field from reading the document. Only applicable to line item metadata fields. Defaults to false.
     */
    @JsonProperty("extractFromDocument")
    public Optional<Boolean> getExtractFromDocument() {
        return extractFromDocument;
    }

    /**
     * @return Attempt to predict this field from historical invoice metadata. Only applicable to line item metadata fields. Defaults to true.
     */
    @JsonProperty("predictFromHistory")
    public Optional<Boolean> getPredictFromHistory() {
        return predictFromHistory;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MetadataOcrRules && equalTo((MetadataOcrRules) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MetadataOcrRules other) {
        return extractFromDocument.equals(other.extractFromDocument)
                && predictFromHistory.equals(other.predictFromHistory);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.extractFromDocument, this.predictFromHistory);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> extractFromDocument = Optional.empty();

        private Optional<Boolean> predictFromHistory = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(MetadataOcrRules other) {
            extractFromDocument(other.getExtractFromDocument());
            predictFromHistory(other.getPredictFromHistory());
            return this;
        }

        /**
         * <p>Attempt to extract this field from reading the document. Only applicable to line item metadata fields. Defaults to false.</p>
         */
        @JsonSetter(value = "extractFromDocument", nulls = Nulls.SKIP)
        public Builder extractFromDocument(Optional<Boolean> extractFromDocument) {
            this.extractFromDocument = extractFromDocument;
            return this;
        }

        public Builder extractFromDocument(Boolean extractFromDocument) {
            this.extractFromDocument = Optional.ofNullable(extractFromDocument);
            return this;
        }

        /**
         * <p>Attempt to predict this field from historical invoice metadata. Only applicable to line item metadata fields. Defaults to true.</p>
         */
        @JsonSetter(value = "predictFromHistory", nulls = Nulls.SKIP)
        public Builder predictFromHistory(Optional<Boolean> predictFromHistory) {
            this.predictFromHistory = predictFromHistory;
            return this;
        }

        public Builder predictFromHistory(Boolean predictFromHistory) {
            this.predictFromHistory = Optional.ofNullable(predictFromHistory);
            return this;
        }

        public MetadataOcrRules build() {
            return new MetadataOcrRules(extractFromDocument, predictFromHistory, additionalProperties);
        }
    }
}
