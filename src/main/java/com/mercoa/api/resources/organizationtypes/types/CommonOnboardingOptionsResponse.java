/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.organizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CommonOnboardingOptionsResponse.Builder.class)
public final class CommonOnboardingOptionsResponse implements ICommonOnboardingOptionsResponse {
    private final OnboardingOptionResponse termsOfService;

    private final OnboardingOptionResponse email;

    private final OnboardingOptionResponse name;

    private final OnboardingOptionResponse address;

    private final OnboardingOptionResponse phone;

    private final OnboardingOptionResponse tenNinetyNine;

    private final OnboardingOptionResponse w9;

    private final OnboardingOptionResponse bankStatement;

    private final Map<String, Object> additionalProperties;

    private CommonOnboardingOptionsResponse(
            OnboardingOptionResponse termsOfService,
            OnboardingOptionResponse email,
            OnboardingOptionResponse name,
            OnboardingOptionResponse address,
            OnboardingOptionResponse phone,
            OnboardingOptionResponse tenNinetyNine,
            OnboardingOptionResponse w9,
            OnboardingOptionResponse bankStatement,
            Map<String, Object> additionalProperties) {
        this.termsOfService = termsOfService;
        this.email = email;
        this.name = name;
        this.address = address;
        this.phone = phone;
        this.tenNinetyNine = tenNinetyNine;
        this.w9 = w9;
        this.bankStatement = bankStatement;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("termsOfService")
    @java.lang.Override
    public OnboardingOptionResponse getTermsOfService() {
        return termsOfService;
    }

    @JsonProperty("email")
    @java.lang.Override
    public OnboardingOptionResponse getEmail() {
        return email;
    }

    @JsonProperty("name")
    @java.lang.Override
    public OnboardingOptionResponse getName() {
        return name;
    }

    @JsonProperty("address")
    @java.lang.Override
    public OnboardingOptionResponse getAddress() {
        return address;
    }

    @JsonProperty("phone")
    @java.lang.Override
    public OnboardingOptionResponse getPhone() {
        return phone;
    }

    @JsonProperty("tenNinetyNine")
    @java.lang.Override
    public OnboardingOptionResponse getTenNinetyNine() {
        return tenNinetyNine;
    }

    @JsonProperty("w9")
    @java.lang.Override
    public OnboardingOptionResponse getW9() {
        return w9;
    }

    @JsonProperty("bankStatement")
    @java.lang.Override
    public OnboardingOptionResponse getBankStatement() {
        return bankStatement;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CommonOnboardingOptionsResponse && equalTo((CommonOnboardingOptionsResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CommonOnboardingOptionsResponse other) {
        return termsOfService.equals(other.termsOfService)
                && email.equals(other.email)
                && name.equals(other.name)
                && address.equals(other.address)
                && phone.equals(other.phone)
                && tenNinetyNine.equals(other.tenNinetyNine)
                && w9.equals(other.w9)
                && bankStatement.equals(other.bankStatement);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.termsOfService,
                this.email,
                this.name,
                this.address,
                this.phone,
                this.tenNinetyNine,
                this.w9,
                this.bankStatement);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TermsOfServiceStage builder() {
        return new Builder();
    }

    public interface TermsOfServiceStage {
        EmailStage termsOfService(OnboardingOptionResponse termsOfService);

        Builder from(CommonOnboardingOptionsResponse other);
    }

    public interface EmailStage {
        NameStage email(OnboardingOptionResponse email);
    }

    public interface NameStage {
        AddressStage name(OnboardingOptionResponse name);
    }

    public interface AddressStage {
        PhoneStage address(OnboardingOptionResponse address);
    }

    public interface PhoneStage {
        TenNinetyNineStage phone(OnboardingOptionResponse phone);
    }

    public interface TenNinetyNineStage {
        W9Stage tenNinetyNine(OnboardingOptionResponse tenNinetyNine);
    }

    public interface W9Stage {
        BankStatementStage w9(OnboardingOptionResponse w9);
    }

    public interface BankStatementStage {
        _FinalStage bankStatement(OnboardingOptionResponse bankStatement);
    }

    public interface _FinalStage {
        CommonOnboardingOptionsResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements TermsOfServiceStage,
                    EmailStage,
                    NameStage,
                    AddressStage,
                    PhoneStage,
                    TenNinetyNineStage,
                    W9Stage,
                    BankStatementStage,
                    _FinalStage {
        private OnboardingOptionResponse termsOfService;

        private OnboardingOptionResponse email;

        private OnboardingOptionResponse name;

        private OnboardingOptionResponse address;

        private OnboardingOptionResponse phone;

        private OnboardingOptionResponse tenNinetyNine;

        private OnboardingOptionResponse w9;

        private OnboardingOptionResponse bankStatement;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CommonOnboardingOptionsResponse other) {
            termsOfService(other.getTermsOfService());
            email(other.getEmail());
            name(other.getName());
            address(other.getAddress());
            phone(other.getPhone());
            tenNinetyNine(other.getTenNinetyNine());
            w9(other.getW9());
            bankStatement(other.getBankStatement());
            return this;
        }

        @java.lang.Override
        @JsonSetter("termsOfService")
        public EmailStage termsOfService(OnboardingOptionResponse termsOfService) {
            this.termsOfService = termsOfService;
            return this;
        }

        @java.lang.Override
        @JsonSetter("email")
        public NameStage email(OnboardingOptionResponse email) {
            this.email = email;
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public AddressStage name(OnboardingOptionResponse name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        @JsonSetter("address")
        public PhoneStage address(OnboardingOptionResponse address) {
            this.address = address;
            return this;
        }

        @java.lang.Override
        @JsonSetter("phone")
        public TenNinetyNineStage phone(OnboardingOptionResponse phone) {
            this.phone = phone;
            return this;
        }

        @java.lang.Override
        @JsonSetter("tenNinetyNine")
        public W9Stage tenNinetyNine(OnboardingOptionResponse tenNinetyNine) {
            this.tenNinetyNine = tenNinetyNine;
            return this;
        }

        @java.lang.Override
        @JsonSetter("w9")
        public BankStatementStage w9(OnboardingOptionResponse w9) {
            this.w9 = w9;
            return this;
        }

        @java.lang.Override
        @JsonSetter("bankStatement")
        public _FinalStage bankStatement(OnboardingOptionResponse bankStatement) {
            this.bankStatement = bankStatement;
            return this;
        }

        @java.lang.Override
        public CommonOnboardingOptionsResponse build() {
            return new CommonOnboardingOptionsResponse(
                    termsOfService,
                    email,
                    name,
                    address,
                    phone,
                    tenNinetyNine,
                    w9,
                    bankStatement,
                    additionalProperties);
        }
    }
}
