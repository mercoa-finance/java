/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.organizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BusinessOnboardingOptions.Builder.class)
public final class BusinessOnboardingOptions implements ICommonOnboardingOptions {
    private final OnboardingOption termsOfService;

    private final OnboardingOption email;

    private final OnboardingOption name;

    private final OnboardingOption address;

    private final OnboardingOption phone;

    private final OnboardingOption tenNinetyNine;

    private final OnboardingOption w9;

    private final OnboardingOption type;

    private final OnboardingOption doingBusinessAs;

    private final OnboardingOption ein;

    private final OnboardingOption mcc;

    private final OnboardingOption formationDate;

    private final OnboardingOption website;

    private final OnboardingOption description;

    private final OnboardingOption representatives;

    private final OnboardingOption logo;

    private final OnboardingOption averageTransactionSize;

    private final OnboardingOption averageMonthlyTransactionVolume;

    private final OnboardingOption maxTransactionSize;

    private final Map<String, Object> additionalProperties;

    private BusinessOnboardingOptions(
            OnboardingOption termsOfService,
            OnboardingOption email,
            OnboardingOption name,
            OnboardingOption address,
            OnboardingOption phone,
            OnboardingOption tenNinetyNine,
            OnboardingOption w9,
            OnboardingOption type,
            OnboardingOption doingBusinessAs,
            OnboardingOption ein,
            OnboardingOption mcc,
            OnboardingOption formationDate,
            OnboardingOption website,
            OnboardingOption description,
            OnboardingOption representatives,
            OnboardingOption logo,
            OnboardingOption averageTransactionSize,
            OnboardingOption averageMonthlyTransactionVolume,
            OnboardingOption maxTransactionSize,
            Map<String, Object> additionalProperties) {
        this.termsOfService = termsOfService;
        this.email = email;
        this.name = name;
        this.address = address;
        this.phone = phone;
        this.tenNinetyNine = tenNinetyNine;
        this.w9 = w9;
        this.type = type;
        this.doingBusinessAs = doingBusinessAs;
        this.ein = ein;
        this.mcc = mcc;
        this.formationDate = formationDate;
        this.website = website;
        this.description = description;
        this.representatives = representatives;
        this.logo = logo;
        this.averageTransactionSize = averageTransactionSize;
        this.averageMonthlyTransactionVolume = averageMonthlyTransactionVolume;
        this.maxTransactionSize = maxTransactionSize;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("termsOfService")
    @java.lang.Override
    public OnboardingOption getTermsOfService() {
        return termsOfService;
    }

    @JsonProperty("email")
    @java.lang.Override
    public OnboardingOption getEmail() {
        return email;
    }

    @JsonProperty("name")
    @java.lang.Override
    public OnboardingOption getName() {
        return name;
    }

    @JsonProperty("address")
    @java.lang.Override
    public OnboardingOption getAddress() {
        return address;
    }

    @JsonProperty("phone")
    @java.lang.Override
    public OnboardingOption getPhone() {
        return phone;
    }

    @JsonProperty("tenNinetyNine")
    @java.lang.Override
    public OnboardingOption getTenNinetyNine() {
        return tenNinetyNine;
    }

    @JsonProperty("w9")
    @java.lang.Override
    public OnboardingOption getW9() {
        return w9;
    }

    @JsonProperty("type")
    public OnboardingOption getType() {
        return type;
    }

    @JsonProperty("doingBusinessAs")
    public OnboardingOption getDoingBusinessAs() {
        return doingBusinessAs;
    }

    @JsonProperty("ein")
    public OnboardingOption getEin() {
        return ein;
    }

    @JsonProperty("mcc")
    public OnboardingOption getMcc() {
        return mcc;
    }

    @JsonProperty("formationDate")
    public OnboardingOption getFormationDate() {
        return formationDate;
    }

    @JsonProperty("website")
    public OnboardingOption getWebsite() {
        return website;
    }

    @JsonProperty("description")
    public OnboardingOption getDescription() {
        return description;
    }

    @JsonProperty("representatives")
    public OnboardingOption getRepresentatives() {
        return representatives;
    }

    @JsonProperty("logo")
    public OnboardingOption getLogo() {
        return logo;
    }

    @JsonProperty("averageTransactionSize")
    public OnboardingOption getAverageTransactionSize() {
        return averageTransactionSize;
    }

    @JsonProperty("averageMonthlyTransactionVolume")
    public OnboardingOption getAverageMonthlyTransactionVolume() {
        return averageMonthlyTransactionVolume;
    }

    @JsonProperty("maxTransactionSize")
    public OnboardingOption getMaxTransactionSize() {
        return maxTransactionSize;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BusinessOnboardingOptions && equalTo((BusinessOnboardingOptions) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BusinessOnboardingOptions other) {
        return termsOfService.equals(other.termsOfService)
                && email.equals(other.email)
                && name.equals(other.name)
                && address.equals(other.address)
                && phone.equals(other.phone)
                && tenNinetyNine.equals(other.tenNinetyNine)
                && w9.equals(other.w9)
                && type.equals(other.type)
                && doingBusinessAs.equals(other.doingBusinessAs)
                && ein.equals(other.ein)
                && mcc.equals(other.mcc)
                && formationDate.equals(other.formationDate)
                && website.equals(other.website)
                && description.equals(other.description)
                && representatives.equals(other.representatives)
                && logo.equals(other.logo)
                && averageTransactionSize.equals(other.averageTransactionSize)
                && averageMonthlyTransactionVolume.equals(other.averageMonthlyTransactionVolume)
                && maxTransactionSize.equals(other.maxTransactionSize);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.termsOfService,
                this.email,
                this.name,
                this.address,
                this.phone,
                this.tenNinetyNine,
                this.w9,
                this.type,
                this.doingBusinessAs,
                this.ein,
                this.mcc,
                this.formationDate,
                this.website,
                this.description,
                this.representatives,
                this.logo,
                this.averageTransactionSize,
                this.averageMonthlyTransactionVolume,
                this.maxTransactionSize);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TermsOfServiceStage builder() {
        return new Builder();
    }

    public interface TermsOfServiceStage {
        EmailStage termsOfService(OnboardingOption termsOfService);

        Builder from(BusinessOnboardingOptions other);
    }

    public interface EmailStage {
        NameStage email(OnboardingOption email);
    }

    public interface NameStage {
        AddressStage name(OnboardingOption name);
    }

    public interface AddressStage {
        PhoneStage address(OnboardingOption address);
    }

    public interface PhoneStage {
        TenNinetyNineStage phone(OnboardingOption phone);
    }

    public interface TenNinetyNineStage {
        W9Stage tenNinetyNine(OnboardingOption tenNinetyNine);
    }

    public interface W9Stage {
        TypeStage w9(OnboardingOption w9);
    }

    public interface TypeStage {
        DoingBusinessAsStage type(OnboardingOption type);
    }

    public interface DoingBusinessAsStage {
        EinStage doingBusinessAs(OnboardingOption doingBusinessAs);
    }

    public interface EinStage {
        MccStage ein(OnboardingOption ein);
    }

    public interface MccStage {
        FormationDateStage mcc(OnboardingOption mcc);
    }

    public interface FormationDateStage {
        WebsiteStage formationDate(OnboardingOption formationDate);
    }

    public interface WebsiteStage {
        DescriptionStage website(OnboardingOption website);
    }

    public interface DescriptionStage {
        RepresentativesStage description(OnboardingOption description);
    }

    public interface RepresentativesStage {
        LogoStage representatives(OnboardingOption representatives);
    }

    public interface LogoStage {
        AverageTransactionSizeStage logo(OnboardingOption logo);
    }

    public interface AverageTransactionSizeStage {
        AverageMonthlyTransactionVolumeStage averageTransactionSize(OnboardingOption averageTransactionSize);
    }

    public interface AverageMonthlyTransactionVolumeStage {
        MaxTransactionSizeStage averageMonthlyTransactionVolume(OnboardingOption averageMonthlyTransactionVolume);
    }

    public interface MaxTransactionSizeStage {
        _FinalStage maxTransactionSize(OnboardingOption maxTransactionSize);
    }

    public interface _FinalStage {
        BusinessOnboardingOptions build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements TermsOfServiceStage,
                    EmailStage,
                    NameStage,
                    AddressStage,
                    PhoneStage,
                    TenNinetyNineStage,
                    W9Stage,
                    TypeStage,
                    DoingBusinessAsStage,
                    EinStage,
                    MccStage,
                    FormationDateStage,
                    WebsiteStage,
                    DescriptionStage,
                    RepresentativesStage,
                    LogoStage,
                    AverageTransactionSizeStage,
                    AverageMonthlyTransactionVolumeStage,
                    MaxTransactionSizeStage,
                    _FinalStage {
        private OnboardingOption termsOfService;

        private OnboardingOption email;

        private OnboardingOption name;

        private OnboardingOption address;

        private OnboardingOption phone;

        private OnboardingOption tenNinetyNine;

        private OnboardingOption w9;

        private OnboardingOption type;

        private OnboardingOption doingBusinessAs;

        private OnboardingOption ein;

        private OnboardingOption mcc;

        private OnboardingOption formationDate;

        private OnboardingOption website;

        private OnboardingOption description;

        private OnboardingOption representatives;

        private OnboardingOption logo;

        private OnboardingOption averageTransactionSize;

        private OnboardingOption averageMonthlyTransactionVolume;

        private OnboardingOption maxTransactionSize;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BusinessOnboardingOptions other) {
            termsOfService(other.getTermsOfService());
            email(other.getEmail());
            name(other.getName());
            address(other.getAddress());
            phone(other.getPhone());
            tenNinetyNine(other.getTenNinetyNine());
            w9(other.getW9());
            type(other.getType());
            doingBusinessAs(other.getDoingBusinessAs());
            ein(other.getEin());
            mcc(other.getMcc());
            formationDate(other.getFormationDate());
            website(other.getWebsite());
            description(other.getDescription());
            representatives(other.getRepresentatives());
            logo(other.getLogo());
            averageTransactionSize(other.getAverageTransactionSize());
            averageMonthlyTransactionVolume(other.getAverageMonthlyTransactionVolume());
            maxTransactionSize(other.getMaxTransactionSize());
            return this;
        }

        @java.lang.Override
        @JsonSetter("termsOfService")
        public EmailStage termsOfService(OnboardingOption termsOfService) {
            this.termsOfService = termsOfService;
            return this;
        }

        @java.lang.Override
        @JsonSetter("email")
        public NameStage email(OnboardingOption email) {
            this.email = email;
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public AddressStage name(OnboardingOption name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        @JsonSetter("address")
        public PhoneStage address(OnboardingOption address) {
            this.address = address;
            return this;
        }

        @java.lang.Override
        @JsonSetter("phone")
        public TenNinetyNineStage phone(OnboardingOption phone) {
            this.phone = phone;
            return this;
        }

        @java.lang.Override
        @JsonSetter("tenNinetyNine")
        public W9Stage tenNinetyNine(OnboardingOption tenNinetyNine) {
            this.tenNinetyNine = tenNinetyNine;
            return this;
        }

        @java.lang.Override
        @JsonSetter("w9")
        public TypeStage w9(OnboardingOption w9) {
            this.w9 = w9;
            return this;
        }

        @java.lang.Override
        @JsonSetter("type")
        public DoingBusinessAsStage type(OnboardingOption type) {
            this.type = type;
            return this;
        }

        @java.lang.Override
        @JsonSetter("doingBusinessAs")
        public EinStage doingBusinessAs(OnboardingOption doingBusinessAs) {
            this.doingBusinessAs = doingBusinessAs;
            return this;
        }

        @java.lang.Override
        @JsonSetter("ein")
        public MccStage ein(OnboardingOption ein) {
            this.ein = ein;
            return this;
        }

        @java.lang.Override
        @JsonSetter("mcc")
        public FormationDateStage mcc(OnboardingOption mcc) {
            this.mcc = mcc;
            return this;
        }

        @java.lang.Override
        @JsonSetter("formationDate")
        public WebsiteStage formationDate(OnboardingOption formationDate) {
            this.formationDate = formationDate;
            return this;
        }

        @java.lang.Override
        @JsonSetter("website")
        public DescriptionStage website(OnboardingOption website) {
            this.website = website;
            return this;
        }

        @java.lang.Override
        @JsonSetter("description")
        public RepresentativesStage description(OnboardingOption description) {
            this.description = description;
            return this;
        }

        @java.lang.Override
        @JsonSetter("representatives")
        public LogoStage representatives(OnboardingOption representatives) {
            this.representatives = representatives;
            return this;
        }

        @java.lang.Override
        @JsonSetter("logo")
        public AverageTransactionSizeStage logo(OnboardingOption logo) {
            this.logo = logo;
            return this;
        }

        @java.lang.Override
        @JsonSetter("averageTransactionSize")
        public AverageMonthlyTransactionVolumeStage averageTransactionSize(OnboardingOption averageTransactionSize) {
            this.averageTransactionSize = averageTransactionSize;
            return this;
        }

        @java.lang.Override
        @JsonSetter("averageMonthlyTransactionVolume")
        public MaxTransactionSizeStage averageMonthlyTransactionVolume(
                OnboardingOption averageMonthlyTransactionVolume) {
            this.averageMonthlyTransactionVolume = averageMonthlyTransactionVolume;
            return this;
        }

        @java.lang.Override
        @JsonSetter("maxTransactionSize")
        public _FinalStage maxTransactionSize(OnboardingOption maxTransactionSize) {
            this.maxTransactionSize = maxTransactionSize;
            return this;
        }

        @java.lang.Override
        public BusinessOnboardingOptions build() {
            return new BusinessOnboardingOptions(
                    termsOfService,
                    email,
                    name,
                    address,
                    phone,
                    tenNinetyNine,
                    w9,
                    type,
                    doingBusinessAs,
                    ein,
                    mcc,
                    formationDate,
                    website,
                    description,
                    representatives,
                    logo,
                    averageTransactionSize,
                    averageMonthlyTransactionVolume,
                    maxTransactionSize,
                    additionalProperties);
        }
    }
}
