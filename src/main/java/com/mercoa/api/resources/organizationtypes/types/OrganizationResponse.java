/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.organizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = OrganizationResponse.Builder.class)
public final class OrganizationResponse {
    private final String id;

    private final boolean sandbox;

    private final String name;

    private final Optional<String> logoUrl;

    private final Optional<String> faviconUrl;

    private final Optional<String> websiteUrl;

    private final Optional<String> supportEmail;

    private final Optional<PaymentMethodsResponse> paymentMethods;

    private final Optional<EmailProviderResponse> emailProvider;

    private final Optional<ExternalAccountingSystemProviderResponse> externalAccountingSystemProvider;

    private final Optional<ColorSchemeResponse> colorScheme;

    private final Optional<OnboardingOptionsResponse> payeeOnboardingOptions;

    private final Optional<OnboardingOptionsResponse> payorOnboardingOptions;

    private final Optional<List<MetadataSchema>> metadataSchema;

    private final Optional<NotificationEmailTemplateResponse> notificationEmailTemplate;

    private final Optional<List<String>> customDomains;

    private final Optional<String> organizationEntityId;

    private final Optional<Map<String, List<Permission>>> rolePermissions;

    private final Optional<Boolean> notificationsDisabled;

    private final Map<String, Object> additionalProperties;

    private OrganizationResponse(
            String id,
            boolean sandbox,
            String name,
            Optional<String> logoUrl,
            Optional<String> faviconUrl,
            Optional<String> websiteUrl,
            Optional<String> supportEmail,
            Optional<PaymentMethodsResponse> paymentMethods,
            Optional<EmailProviderResponse> emailProvider,
            Optional<ExternalAccountingSystemProviderResponse> externalAccountingSystemProvider,
            Optional<ColorSchemeResponse> colorScheme,
            Optional<OnboardingOptionsResponse> payeeOnboardingOptions,
            Optional<OnboardingOptionsResponse> payorOnboardingOptions,
            Optional<List<MetadataSchema>> metadataSchema,
            Optional<NotificationEmailTemplateResponse> notificationEmailTemplate,
            Optional<List<String>> customDomains,
            Optional<String> organizationEntityId,
            Optional<Map<String, List<Permission>>> rolePermissions,
            Optional<Boolean> notificationsDisabled,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.sandbox = sandbox;
        this.name = name;
        this.logoUrl = logoUrl;
        this.faviconUrl = faviconUrl;
        this.websiteUrl = websiteUrl;
        this.supportEmail = supportEmail;
        this.paymentMethods = paymentMethods;
        this.emailProvider = emailProvider;
        this.externalAccountingSystemProvider = externalAccountingSystemProvider;
        this.colorScheme = colorScheme;
        this.payeeOnboardingOptions = payeeOnboardingOptions;
        this.payorOnboardingOptions = payorOnboardingOptions;
        this.metadataSchema = metadataSchema;
        this.notificationEmailTemplate = notificationEmailTemplate;
        this.customDomains = customDomains;
        this.organizationEntityId = organizationEntityId;
        this.rolePermissions = rolePermissions;
        this.notificationsDisabled = notificationsDisabled;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("sandbox")
    public boolean getSandbox() {
        return sandbox;
    }

    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("logoUrl")
    public Optional<String> getLogoUrl() {
        return logoUrl;
    }

    @JsonProperty("faviconUrl")
    public Optional<String> getFaviconUrl() {
        return faviconUrl;
    }

    @JsonProperty("websiteUrl")
    public Optional<String> getWebsiteUrl() {
        return websiteUrl;
    }

    @JsonProperty("supportEmail")
    public Optional<String> getSupportEmail() {
        return supportEmail;
    }

    @JsonProperty("paymentMethods")
    public Optional<PaymentMethodsResponse> getPaymentMethods() {
        return paymentMethods;
    }

    @JsonProperty("emailProvider")
    public Optional<EmailProviderResponse> getEmailProvider() {
        return emailProvider;
    }

    @JsonProperty("externalAccountingSystemProvider")
    public Optional<ExternalAccountingSystemProviderResponse> getExternalAccountingSystemProvider() {
        return externalAccountingSystemProvider;
    }

    @JsonProperty("colorScheme")
    public Optional<ColorSchemeResponse> getColorScheme() {
        return colorScheme;
    }

    @JsonProperty("payeeOnboardingOptions")
    public Optional<OnboardingOptionsResponse> getPayeeOnboardingOptions() {
        return payeeOnboardingOptions;
    }

    @JsonProperty("payorOnboardingOptions")
    public Optional<OnboardingOptionsResponse> getPayorOnboardingOptions() {
        return payorOnboardingOptions;
    }

    @JsonProperty("metadataSchema")
    public Optional<List<MetadataSchema>> getMetadataSchema() {
        return metadataSchema;
    }

    @JsonProperty("notificationEmailTemplate")
    public Optional<NotificationEmailTemplateResponse> getNotificationEmailTemplate() {
        return notificationEmailTemplate;
    }

    @JsonProperty("customDomains")
    public Optional<List<String>> getCustomDomains() {
        return customDomains;
    }

    @JsonProperty("organizationEntityId")
    public Optional<String> getOrganizationEntityId() {
        return organizationEntityId;
    }

    @JsonProperty("rolePermissions")
    public Optional<Map<String, List<Permission>>> getRolePermissions() {
        return rolePermissions;
    }

    @JsonProperty("notificationsDisabled")
    public Optional<Boolean> getNotificationsDisabled() {
        return notificationsDisabled;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof OrganizationResponse && equalTo((OrganizationResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(OrganizationResponse other) {
        return id.equals(other.id)
                && sandbox == other.sandbox
                && name.equals(other.name)
                && logoUrl.equals(other.logoUrl)
                && faviconUrl.equals(other.faviconUrl)
                && websiteUrl.equals(other.websiteUrl)
                && supportEmail.equals(other.supportEmail)
                && paymentMethods.equals(other.paymentMethods)
                && emailProvider.equals(other.emailProvider)
                && externalAccountingSystemProvider.equals(other.externalAccountingSystemProvider)
                && colorScheme.equals(other.colorScheme)
                && payeeOnboardingOptions.equals(other.payeeOnboardingOptions)
                && payorOnboardingOptions.equals(other.payorOnboardingOptions)
                && metadataSchema.equals(other.metadataSchema)
                && notificationEmailTemplate.equals(other.notificationEmailTemplate)
                && customDomains.equals(other.customDomains)
                && organizationEntityId.equals(other.organizationEntityId)
                && rolePermissions.equals(other.rolePermissions)
                && notificationsDisabled.equals(other.notificationsDisabled);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.sandbox,
                this.name,
                this.logoUrl,
                this.faviconUrl,
                this.websiteUrl,
                this.supportEmail,
                this.paymentMethods,
                this.emailProvider,
                this.externalAccountingSystemProvider,
                this.colorScheme,
                this.payeeOnboardingOptions,
                this.payorOnboardingOptions,
                this.metadataSchema,
                this.notificationEmailTemplate,
                this.customDomains,
                this.organizationEntityId,
                this.rolePermissions,
                this.notificationsDisabled);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        SandboxStage id(@NotNull String id);

        Builder from(OrganizationResponse other);
    }

    public interface SandboxStage {
        NameStage sandbox(boolean sandbox);
    }

    public interface NameStage {
        _FinalStage name(@NotNull String name);
    }

    public interface _FinalStage {
        OrganizationResponse build();

        _FinalStage logoUrl(Optional<String> logoUrl);

        _FinalStage logoUrl(String logoUrl);

        _FinalStage faviconUrl(Optional<String> faviconUrl);

        _FinalStage faviconUrl(String faviconUrl);

        _FinalStage websiteUrl(Optional<String> websiteUrl);

        _FinalStage websiteUrl(String websiteUrl);

        _FinalStage supportEmail(Optional<String> supportEmail);

        _FinalStage supportEmail(String supportEmail);

        _FinalStage paymentMethods(Optional<PaymentMethodsResponse> paymentMethods);

        _FinalStage paymentMethods(PaymentMethodsResponse paymentMethods);

        _FinalStage emailProvider(Optional<EmailProviderResponse> emailProvider);

        _FinalStage emailProvider(EmailProviderResponse emailProvider);

        _FinalStage externalAccountingSystemProvider(
                Optional<ExternalAccountingSystemProviderResponse> externalAccountingSystemProvider);

        _FinalStage externalAccountingSystemProvider(
                ExternalAccountingSystemProviderResponse externalAccountingSystemProvider);

        _FinalStage colorScheme(Optional<ColorSchemeResponse> colorScheme);

        _FinalStage colorScheme(ColorSchemeResponse colorScheme);

        _FinalStage payeeOnboardingOptions(Optional<OnboardingOptionsResponse> payeeOnboardingOptions);

        _FinalStage payeeOnboardingOptions(OnboardingOptionsResponse payeeOnboardingOptions);

        _FinalStage payorOnboardingOptions(Optional<OnboardingOptionsResponse> payorOnboardingOptions);

        _FinalStage payorOnboardingOptions(OnboardingOptionsResponse payorOnboardingOptions);

        _FinalStage metadataSchema(Optional<List<MetadataSchema>> metadataSchema);

        _FinalStage metadataSchema(List<MetadataSchema> metadataSchema);

        _FinalStage notificationEmailTemplate(Optional<NotificationEmailTemplateResponse> notificationEmailTemplate);

        _FinalStage notificationEmailTemplate(NotificationEmailTemplateResponse notificationEmailTemplate);

        _FinalStage customDomains(Optional<List<String>> customDomains);

        _FinalStage customDomains(List<String> customDomains);

        _FinalStage organizationEntityId(Optional<String> organizationEntityId);

        _FinalStage organizationEntityId(String organizationEntityId);

        _FinalStage rolePermissions(Optional<Map<String, List<Permission>>> rolePermissions);

        _FinalStage rolePermissions(Map<String, List<Permission>> rolePermissions);

        _FinalStage notificationsDisabled(Optional<Boolean> notificationsDisabled);

        _FinalStage notificationsDisabled(Boolean notificationsDisabled);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, SandboxStage, NameStage, _FinalStage {
        private String id;

        private boolean sandbox;

        private String name;

        private Optional<Boolean> notificationsDisabled = Optional.empty();

        private Optional<Map<String, List<Permission>>> rolePermissions = Optional.empty();

        private Optional<String> organizationEntityId = Optional.empty();

        private Optional<List<String>> customDomains = Optional.empty();

        private Optional<NotificationEmailTemplateResponse> notificationEmailTemplate = Optional.empty();

        private Optional<List<MetadataSchema>> metadataSchema = Optional.empty();

        private Optional<OnboardingOptionsResponse> payorOnboardingOptions = Optional.empty();

        private Optional<OnboardingOptionsResponse> payeeOnboardingOptions = Optional.empty();

        private Optional<ColorSchemeResponse> colorScheme = Optional.empty();

        private Optional<ExternalAccountingSystemProviderResponse> externalAccountingSystemProvider = Optional.empty();

        private Optional<EmailProviderResponse> emailProvider = Optional.empty();

        private Optional<PaymentMethodsResponse> paymentMethods = Optional.empty();

        private Optional<String> supportEmail = Optional.empty();

        private Optional<String> websiteUrl = Optional.empty();

        private Optional<String> faviconUrl = Optional.empty();

        private Optional<String> logoUrl = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(OrganizationResponse other) {
            id(other.getId());
            sandbox(other.getSandbox());
            name(other.getName());
            logoUrl(other.getLogoUrl());
            faviconUrl(other.getFaviconUrl());
            websiteUrl(other.getWebsiteUrl());
            supportEmail(other.getSupportEmail());
            paymentMethods(other.getPaymentMethods());
            emailProvider(other.getEmailProvider());
            externalAccountingSystemProvider(other.getExternalAccountingSystemProvider());
            colorScheme(other.getColorScheme());
            payeeOnboardingOptions(other.getPayeeOnboardingOptions());
            payorOnboardingOptions(other.getPayorOnboardingOptions());
            metadataSchema(other.getMetadataSchema());
            notificationEmailTemplate(other.getNotificationEmailTemplate());
            customDomains(other.getCustomDomains());
            organizationEntityId(other.getOrganizationEntityId());
            rolePermissions(other.getRolePermissions());
            notificationsDisabled(other.getNotificationsDisabled());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public SandboxStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("sandbox")
        public NameStage sandbox(boolean sandbox) {
            this.sandbox = sandbox;
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public _FinalStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage notificationsDisabled(Boolean notificationsDisabled) {
            this.notificationsDisabled = Optional.ofNullable(notificationsDisabled);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "notificationsDisabled", nulls = Nulls.SKIP)
        public _FinalStage notificationsDisabled(Optional<Boolean> notificationsDisabled) {
            this.notificationsDisabled = notificationsDisabled;
            return this;
        }

        @java.lang.Override
        public _FinalStage rolePermissions(Map<String, List<Permission>> rolePermissions) {
            this.rolePermissions = Optional.ofNullable(rolePermissions);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "rolePermissions", nulls = Nulls.SKIP)
        public _FinalStage rolePermissions(Optional<Map<String, List<Permission>>> rolePermissions) {
            this.rolePermissions = rolePermissions;
            return this;
        }

        @java.lang.Override
        public _FinalStage organizationEntityId(String organizationEntityId) {
            this.organizationEntityId = Optional.ofNullable(organizationEntityId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "organizationEntityId", nulls = Nulls.SKIP)
        public _FinalStage organizationEntityId(Optional<String> organizationEntityId) {
            this.organizationEntityId = organizationEntityId;
            return this;
        }

        @java.lang.Override
        public _FinalStage customDomains(List<String> customDomains) {
            this.customDomains = Optional.ofNullable(customDomains);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "customDomains", nulls = Nulls.SKIP)
        public _FinalStage customDomains(Optional<List<String>> customDomains) {
            this.customDomains = customDomains;
            return this;
        }

        @java.lang.Override
        public _FinalStage notificationEmailTemplate(NotificationEmailTemplateResponse notificationEmailTemplate) {
            this.notificationEmailTemplate = Optional.ofNullable(notificationEmailTemplate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "notificationEmailTemplate", nulls = Nulls.SKIP)
        public _FinalStage notificationEmailTemplate(
                Optional<NotificationEmailTemplateResponse> notificationEmailTemplate) {
            this.notificationEmailTemplate = notificationEmailTemplate;
            return this;
        }

        @java.lang.Override
        public _FinalStage metadataSchema(List<MetadataSchema> metadataSchema) {
            this.metadataSchema = Optional.ofNullable(metadataSchema);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "metadataSchema", nulls = Nulls.SKIP)
        public _FinalStage metadataSchema(Optional<List<MetadataSchema>> metadataSchema) {
            this.metadataSchema = metadataSchema;
            return this;
        }

        @java.lang.Override
        public _FinalStage payorOnboardingOptions(OnboardingOptionsResponse payorOnboardingOptions) {
            this.payorOnboardingOptions = Optional.ofNullable(payorOnboardingOptions);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "payorOnboardingOptions", nulls = Nulls.SKIP)
        public _FinalStage payorOnboardingOptions(Optional<OnboardingOptionsResponse> payorOnboardingOptions) {
            this.payorOnboardingOptions = payorOnboardingOptions;
            return this;
        }

        @java.lang.Override
        public _FinalStage payeeOnboardingOptions(OnboardingOptionsResponse payeeOnboardingOptions) {
            this.payeeOnboardingOptions = Optional.ofNullable(payeeOnboardingOptions);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "payeeOnboardingOptions", nulls = Nulls.SKIP)
        public _FinalStage payeeOnboardingOptions(Optional<OnboardingOptionsResponse> payeeOnboardingOptions) {
            this.payeeOnboardingOptions = payeeOnboardingOptions;
            return this;
        }

        @java.lang.Override
        public _FinalStage colorScheme(ColorSchemeResponse colorScheme) {
            this.colorScheme = Optional.ofNullable(colorScheme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "colorScheme", nulls = Nulls.SKIP)
        public _FinalStage colorScheme(Optional<ColorSchemeResponse> colorScheme) {
            this.colorScheme = colorScheme;
            return this;
        }

        @java.lang.Override
        public _FinalStage externalAccountingSystemProvider(
                ExternalAccountingSystemProviderResponse externalAccountingSystemProvider) {
            this.externalAccountingSystemProvider = Optional.ofNullable(externalAccountingSystemProvider);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "externalAccountingSystemProvider", nulls = Nulls.SKIP)
        public _FinalStage externalAccountingSystemProvider(
                Optional<ExternalAccountingSystemProviderResponse> externalAccountingSystemProvider) {
            this.externalAccountingSystemProvider = externalAccountingSystemProvider;
            return this;
        }

        @java.lang.Override
        public _FinalStage emailProvider(EmailProviderResponse emailProvider) {
            this.emailProvider = Optional.ofNullable(emailProvider);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "emailProvider", nulls = Nulls.SKIP)
        public _FinalStage emailProvider(Optional<EmailProviderResponse> emailProvider) {
            this.emailProvider = emailProvider;
            return this;
        }

        @java.lang.Override
        public _FinalStage paymentMethods(PaymentMethodsResponse paymentMethods) {
            this.paymentMethods = Optional.ofNullable(paymentMethods);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "paymentMethods", nulls = Nulls.SKIP)
        public _FinalStage paymentMethods(Optional<PaymentMethodsResponse> paymentMethods) {
            this.paymentMethods = paymentMethods;
            return this;
        }

        @java.lang.Override
        public _FinalStage supportEmail(String supportEmail) {
            this.supportEmail = Optional.ofNullable(supportEmail);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "supportEmail", nulls = Nulls.SKIP)
        public _FinalStage supportEmail(Optional<String> supportEmail) {
            this.supportEmail = supportEmail;
            return this;
        }

        @java.lang.Override
        public _FinalStage websiteUrl(String websiteUrl) {
            this.websiteUrl = Optional.ofNullable(websiteUrl);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "websiteUrl", nulls = Nulls.SKIP)
        public _FinalStage websiteUrl(Optional<String> websiteUrl) {
            this.websiteUrl = websiteUrl;
            return this;
        }

        @java.lang.Override
        public _FinalStage faviconUrl(String faviconUrl) {
            this.faviconUrl = Optional.ofNullable(faviconUrl);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "faviconUrl", nulls = Nulls.SKIP)
        public _FinalStage faviconUrl(Optional<String> faviconUrl) {
            this.faviconUrl = faviconUrl;
            return this;
        }

        @java.lang.Override
        public _FinalStage logoUrl(String logoUrl) {
            this.logoUrl = Optional.ofNullable(logoUrl);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "logoUrl", nulls = Nulls.SKIP)
        public _FinalStage logoUrl(Optional<String> logoUrl) {
            this.logoUrl = logoUrl;
            return this;
        }

        @java.lang.Override
        public OrganizationResponse build() {
            return new OrganizationResponse(
                    id,
                    sandbox,
                    name,
                    logoUrl,
                    faviconUrl,
                    websiteUrl,
                    supportEmail,
                    paymentMethods,
                    emailProvider,
                    externalAccountingSystemProvider,
                    colorScheme,
                    payeeOnboardingOptions,
                    payorOnboardingOptions,
                    metadataSchema,
                    notificationEmailTemplate,
                    customDomains,
                    organizationEntityId,
                    rolePermissions,
                    notificationsDisabled,
                    additionalProperties);
        }
    }
}
