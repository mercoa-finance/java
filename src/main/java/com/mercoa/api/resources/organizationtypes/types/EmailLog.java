/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.organizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = EmailLog.Builder.class)
public final class EmailLog {
    private final String id;

    private final String from;

    private final String to;

    private final String subject;

    private final String rawContent;

    private final OffsetDateTime createdAt;

    private final Map<String, Object> additionalProperties;

    private EmailLog(
            String id,
            String from,
            String to,
            String subject,
            String rawContent,
            OffsetDateTime createdAt,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.from = from;
        this.to = to;
        this.subject = subject;
        this.rawContent = rawContent;
        this.createdAt = createdAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("from")
    public String getFrom() {
        return from;
    }

    @JsonProperty("to")
    public String getTo() {
        return to;
    }

    @JsonProperty("subject")
    public String getSubject() {
        return subject;
    }

    @JsonProperty("rawContent")
    public String getRawContent() {
        return rawContent;
    }

    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EmailLog && equalTo((EmailLog) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EmailLog other) {
        return id.equals(other.id)
                && from.equals(other.from)
                && to.equals(other.to)
                && subject.equals(other.subject)
                && rawContent.equals(other.rawContent)
                && createdAt.equals(other.createdAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.from, this.to, this.subject, this.rawContent, this.createdAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        FromStage id(String id);

        Builder from(EmailLog other);
    }

    public interface FromStage {
        ToStage from(String from);
    }

    public interface ToStage {
        SubjectStage to(String to);
    }

    public interface SubjectStage {
        RawContentStage subject(String subject);
    }

    public interface RawContentStage {
        CreatedAtStage rawContent(String rawContent);
    }

    public interface CreatedAtStage {
        _FinalStage createdAt(OffsetDateTime createdAt);
    }

    public interface _FinalStage {
        EmailLog build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements IdStage, FromStage, ToStage, SubjectStage, RawContentStage, CreatedAtStage, _FinalStage {
        private String id;

        private String from;

        private String to;

        private String subject;

        private String rawContent;

        private OffsetDateTime createdAt;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EmailLog other) {
            id(other.getId());
            from(other.getFrom());
            to(other.getTo());
            subject(other.getSubject());
            rawContent(other.getRawContent());
            createdAt(other.getCreatedAt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public FromStage id(String id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        @JsonSetter("from")
        public ToStage from(String from) {
            this.from = from;
            return this;
        }

        @java.lang.Override
        @JsonSetter("to")
        public SubjectStage to(String to) {
            this.to = to;
            return this;
        }

        @java.lang.Override
        @JsonSetter("subject")
        public RawContentStage subject(String subject) {
            this.subject = subject;
            return this;
        }

        @java.lang.Override
        @JsonSetter("rawContent")
        public CreatedAtStage rawContent(String rawContent) {
            this.rawContent = rawContent;
            return this;
        }

        @java.lang.Override
        @JsonSetter("createdAt")
        public _FinalStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        public EmailLog build() {
            return new EmailLog(id, from, to, subject, rawContent, createdAt, additionalProperties);
        }
    }
}
