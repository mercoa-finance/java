/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.organizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = MetadataRegexValidationRule.Builder.class)
public final class MetadataRegexValidationRule {
    private final String regex;

    private final String errorMessage;

    private final Map<String, Object> additionalProperties;

    private MetadataRegexValidationRule(String regex, String errorMessage, Map<String, Object> additionalProperties) {
        this.regex = regex;
        this.errorMessage = errorMessage;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A regular expression that the value must match.
     */
    @JsonProperty("regex")
    public String getRegex() {
        return regex;
    }

    /**
     * @return The error message to display if the value does not match the regular expression.
     */
    @JsonProperty("errorMessage")
    public String getErrorMessage() {
        return errorMessage;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MetadataRegexValidationRule && equalTo((MetadataRegexValidationRule) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MetadataRegexValidationRule other) {
        return regex.equals(other.regex) && errorMessage.equals(other.errorMessage);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.regex, this.errorMessage);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static RegexStage builder() {
        return new Builder();
    }

    public interface RegexStage {
        ErrorMessageStage regex(String regex);

        Builder from(MetadataRegexValidationRule other);
    }

    public interface ErrorMessageStage {
        _FinalStage errorMessage(String errorMessage);
    }

    public interface _FinalStage {
        MetadataRegexValidationRule build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements RegexStage, ErrorMessageStage, _FinalStage {
        private String regex;

        private String errorMessage;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(MetadataRegexValidationRule other) {
            regex(other.getRegex());
            errorMessage(other.getErrorMessage());
            return this;
        }

        /**
         * <p>A regular expression that the value must match.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("regex")
        public ErrorMessageStage regex(String regex) {
            this.regex = regex;
            return this;
        }

        /**
         * <p>The error message to display if the value does not match the regular expression.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("errorMessage")
        public _FinalStage errorMessage(String errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }

        @java.lang.Override
        public MetadataRegexValidationRule build() {
            return new MetadataRegexValidationRule(regex, errorMessage, additionalProperties);
        }
    }
}
