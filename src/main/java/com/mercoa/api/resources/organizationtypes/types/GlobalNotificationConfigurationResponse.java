/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.organizationtypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GlobalNotificationConfigurationResponse.Builder.class)
public final class GlobalNotificationConfigurationResponse {
    private final InvoiceNotificationConfigurationRequest invoice;

    private final Map<String, Object> additionalProperties;

    private GlobalNotificationConfigurationResponse(
            InvoiceNotificationConfigurationRequest invoice, Map<String, Object> additionalProperties) {
        this.invoice = invoice;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("invoice")
    public InvoiceNotificationConfigurationRequest getInvoice() {
        return invoice;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GlobalNotificationConfigurationResponse
                && equalTo((GlobalNotificationConfigurationResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GlobalNotificationConfigurationResponse other) {
        return invoice.equals(other.invoice);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.invoice);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static InvoiceStage builder() {
        return new Builder();
    }

    public interface InvoiceStage {
        _FinalStage invoice(@NotNull InvoiceNotificationConfigurationRequest invoice);

        Builder from(GlobalNotificationConfigurationResponse other);
    }

    public interface _FinalStage {
        GlobalNotificationConfigurationResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements InvoiceStage, _FinalStage {
        private InvoiceNotificationConfigurationRequest invoice;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GlobalNotificationConfigurationResponse other) {
            invoice(other.getInvoice());
            return this;
        }

        @java.lang.Override
        @JsonSetter("invoice")
        public _FinalStage invoice(@NotNull InvoiceNotificationConfigurationRequest invoice) {
            this.invoice = Objects.requireNonNull(invoice, "invoice must not be null");
            return this;
        }

        @java.lang.Override
        public GlobalNotificationConfigurationResponse build() {
            return new GlobalNotificationConfigurationResponse(invoice, additionalProperties);
        }
    }
}
