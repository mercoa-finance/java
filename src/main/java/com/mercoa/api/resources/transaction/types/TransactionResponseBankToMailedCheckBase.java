/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mercoa.api.resources.transaction.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mercoa.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TransactionResponseBankToMailedCheckBase.Builder.class)
public final class TransactionResponseBankToMailedCheckBase
        implements ITransactionResponseBankToMailedCheckBase, ITransactionResponseBase {
    private final int checkNumber;

    private final String id;

    private final TransactionStatus status;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final Map<String, Object> additionalProperties;

    private TransactionResponseBankToMailedCheckBase(
            int checkNumber,
            String id,
            TransactionStatus status,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Map<String, Object> additionalProperties) {
        this.checkNumber = checkNumber;
        this.id = id;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The number of the check
     */
    @JsonProperty("checkNumber")
    @java.lang.Override
    public int getCheckNumber() {
        return checkNumber;
    }

    @JsonProperty("id")
    @java.lang.Override
    public String getId() {
        return id;
    }

    @JsonProperty("status")
    @java.lang.Override
    public TransactionStatus getStatus() {
        return status;
    }

    @JsonProperty("createdAt")
    @java.lang.Override
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("updatedAt")
    @java.lang.Override
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TransactionResponseBankToMailedCheckBase
                && equalTo((TransactionResponseBankToMailedCheckBase) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TransactionResponseBankToMailedCheckBase other) {
        return checkNumber == other.checkNumber
                && id.equals(other.id)
                && status.equals(other.status)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.checkNumber, this.id, this.status, this.createdAt, this.updatedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CheckNumberStage builder() {
        return new Builder();
    }

    public interface CheckNumberStage {
        IdStage checkNumber(int checkNumber);

        Builder from(TransactionResponseBankToMailedCheckBase other);
    }

    public interface IdStage {
        StatusStage id(String id);
    }

    public interface StatusStage {
        CreatedAtStage status(TransactionStatus status);
    }

    public interface CreatedAtStage {
        UpdatedAtStage createdAt(OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        _FinalStage updatedAt(OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        TransactionResponseBankToMailedCheckBase build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements CheckNumberStage, IdStage, StatusStage, CreatedAtStage, UpdatedAtStage, _FinalStage {
        private int checkNumber;

        private String id;

        private TransactionStatus status;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TransactionResponseBankToMailedCheckBase other) {
            checkNumber(other.getCheckNumber());
            id(other.getId());
            status(other.getStatus());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            return this;
        }

        /**
         * <p>The number of the check</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("checkNumber")
        public IdStage checkNumber(int checkNumber) {
            this.checkNumber = checkNumber;
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public StatusStage id(String id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        @JsonSetter("status")
        public CreatedAtStage status(TransactionStatus status) {
            this.status = status;
            return this;
        }

        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("updatedAt")
        public _FinalStage updatedAt(OffsetDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        @java.lang.Override
        public TransactionResponseBankToMailedCheckBase build() {
            return new TransactionResponseBankToMailedCheckBase(
                    checkNumber, id, status, createdAt, updatedAt, additionalProperties);
        }
    }
}
